<com.android.server.sip.SipSessionGroup: java.lang.String getLocalProfileUri()>
<android.provider.MediaStore$Audio$Albums: android.net.Uri getContentUri(java.lang.String)>
<com.android.ex.chips.Queries$Query: android.net.Uri getContentUri()>
<com.android.emailcommon.provider.EmailContent: android.net.Uri getUri()>
<android.provider.Settings$NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>
<libcore.net.http.ResponseHeaders: java.net.URI getUri()>
<android.content.CursorLoader: android.net.Uri getUri()>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getAlbumsUri()>
<android.provider.MediaStore$Files: android.net.Uri getMtpObjectsUri(java.lang.String,long)>
<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getPostPhotosUri()>
<android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String,long)>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getUploadRecordsUri()>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
<com.google.android.picasastore.PicasaStoreFacade: android.net.Uri getAlbumCoverUri(long,java.lang.String)>
<android.provider.MediaStore$Files: android.net.Uri getMtpObjectsUri(java.lang.String)>
<gov.nist.javax.sip.header.ProxyAuthenticate: javax.sip.address.URI getURI()>
<android.provider.SyncStateContract$Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<org.xml.sax.helpers.AttributesImpl: java.lang.String getURI(int)>
<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getSecurityMode()>
<android.net.sip.SipProfile: javax.sip.address.SipURI getUri()>
<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>
<android.content.ClipData$Item: android.net.Uri getUri()>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getPhotosUri()>
<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.javax.sip.address.GenericURI getParameterAsURI(java.lang.String)>
<android.hardware.usb.UsbAccessory: java.lang.String getUri()>
<gov.nist.javax.sip.header.Challenge: java.lang.String getURI()>
<android.provider.MediaStore$Audio$Playlists: android.net.Uri getContentUri(java.lang.String)>
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)>
<android.provider.MediaStore$Audio$Artists$Albums: android.net.Uri getContentUri(java.lang.String,long)>
<gov.nist.javax.sip.address.AddressImpl: javax.sip.address.URI getURI()>
<com.android.videoeditor.service.VideoEditorProject: android.net.Uri getExportedMovieUri()>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>
<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getUsersUri()>
<com.android.internal.policy.impl.keyguard.KeyguardSecurityViewFlipper: com.android.internal.policy.impl.keyguard.KeyguardSecurityView getSecurityView()>
<com.android.camera.PhotoModule$ImageNamer: android.net.Uri getUri()>
<com.android.providers.media.MediaProvider: android.net.Uri getAlbumArtOutputUri(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,long,android.net.Uri)>
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<com.android.phone.PhoneUtils: com.android.internal.telephony.Phone getSipPhoneFromUri(com.android.internal.telephony.CallManager,java.lang.String)>
<com.android.server.pm.PackageManagerService$InstallParams: android.net.Uri getPackageUri()>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getUploadsUri()>
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>
<com.android.server.am.ServiceRecord$StartItem: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>
<android.provider.MediaStore$Images$Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()>
<libcore.net.http.RequestHeaders: java.net.URI getUri()>
<com.android.internal.policy.impl.keyguard.KeyguardSecurityModel: com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode getBackupSecurityMode(com.android.internal.policy.impl.keyguard.KeyguardSecurityModel$SecurityMode)>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getSettingsUri()>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getPostAlbumsUri()>
<com.google.android.picasasync.UploadTaskEntry: android.net.Uri getContentUri()>
<android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>
<android.provider.MediaStore$Files: android.net.Uri getMtpReferencesUri(java.lang.String,long)>
<com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri getAttachmentUri(long,long)>
<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)>
<org.xml.sax.helpers.NamespaceSupport$Context: java.lang.String getURI(java.lang.String)>
<gov.nist.javax.sip.header.WWWAuthenticate: javax.sip.address.URI getURI()>
<com.android.ex.chips.RecipientEntry: android.net.Uri getPhotoThumbnailUri()>
<android.content.ContentProviderOperation: android.net.Uri getUri()>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getUploadUri(long)>
<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>
<java.lang.SecurityManager: java.lang.Object getSecurityContext()>
<android.webkit.HTML5VideoView: boolean getPauseDuringPreparing()>
<com.android.ex.chips.Queries$Query: android.net.Uri getContentFilterUri()>
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()>
<android.provider.MediaStore$Video$Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<org.xml.sax.helpers.ParserAdapter$AttributeListAdapter: java.lang.String getURI(int)>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>
<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<gov.nist.javax.sip.header.ims.PAssociatedURI: javax.sip.address.URI getAssociatedURI()>
<java.lang.System: java.lang.SecurityManager getSecurityManager()>
<com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo: android.net.Uri getUriForIntent(android.content.Context,long)>
<org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>
<android.provider.MediaStore$Audio$Genres$Members: android.net.Uri getContentUri(java.lang.String,long)>
<android.provider.MediaStore$Audio$Genres: android.net.Uri getContentUri(java.lang.String)>
<com.android.camera.VideoModule$VideoNamer: android.net.Uri getUri()>
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getSecurityMechanism()>
<com.android.launcher2.LauncherSettings$Favorites: android.net.Uri getContentUri(long,boolean)>
<com.android.email.AttachmentInfo: android.net.Uri getUriForIntent(android.content.Context,long)>
<com.android.phone.PhoneUtils: android.net.Uri getProviderGatewayUri(android.content.Intent)>
<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>
<libcore.net.http.HttpEngine: java.net.URI getUri()>
<org.apache.http.message.BasicRequestLine: java.lang.String getUri()>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>
<android.provider.MediaStore$Audio$Playlists$Members: android.net.Uri getContentUri(java.lang.String,long)>
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>
<android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>
<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUri(java.lang.String)>
<android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>
<android.provider.MediaStore$Images$Media: android.net.Uri getContentUri(java.lang.String)>
<org.kxml2.io.KXmlParser: java.lang.String getNamespaceUri(int)>
<gov.nist.javax.sip.header.AuthenticationHeader: javax.sip.address.URI getURI()>
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getURI(int)>
<com.android.providers.downloads.DownloadInfo: android.net.Uri getAllDownloadsUri()>
<android.media.Ringtone: android.net.Uri getUri()>
<com.adobe.xmp.impl.XMPSchemaRegistryImpl: java.lang.String getNamespaceURI(java.lang.String)>
<android.provider.MediaStore$Audio$Artists: android.net.Uri getContentUri(java.lang.String)>
<com.google.android.picasasync.PicasaFacade: android.net.Uri getAlbumUri(long)>
<android.provider.MediaStore$Files: android.net.Uri getContentUri(java.lang.String)>
<com.android.providers.downloads.DownloadInfo: android.net.Uri getMyDownloadsUri()>
<com.google.android.picasastore.PicasaStoreFacade: android.net.Uri getPhotoUri(long,java.lang.String,java.lang.String)>
<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()>
<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<android.net.Uri: android.net.Uri getCanonicalUri()>
<android.provider.MediaStore$Audio$Media: android.net.Uri getContentUriForPath(java.lang.String)>
<android.provider.MediaStore$Video$Media: android.net.Uri getContentUri(java.lang.String)>
<android.content.res.XmlBlock$Parser: java.lang.String getNamespaceUri(int)>
<com.google.android.picasastore.FIFEUtil: java.lang.String getImageUriOptions(android.net.Uri)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Downloads$Impl: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Downloads: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>