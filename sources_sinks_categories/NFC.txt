<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getDriverName(java.lang.String)>
<com.android.nfc.NfcService$TagService: int getTimeout(int)>
<android.nfc.INfcTag$Stub: android.os.IBinder asBinder()>
<android.nfc.INfcTag$Stub$Proxy: int[] getTechList(int)>
<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parse(android.nfc.NdefMessage)>
<android.nfc.INfcTag$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.nfc.NfcService: byte[] doTransceiveNoLock(int,byte[])>
<com.android.nfc.dhimpl.NativeNfcTag: byte[] transceive(byte[],boolean,int[])>
<android.nfc.NdefRecord: int getByteLength()>
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>
<com.android.nfc.NfcService$NfcAdapterService: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefMessage createHandoverSelectMessage(boolean)>
<android.nfc.INdefPushCallback$Stub$Proxy: android.net.Uri[] getUris()>
<android.nfc.tech.NdefFormatable: byte[] transceive(byte[],boolean)>
<android.nfc.tech.Ndef: byte[] transceive(byte[],boolean)>
<com.android.nfc.P2pLinkManager: java.lang.String getMessageType(android.nfc.NdefMessage)>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createBluetoothOobDataRecord()>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefMessage createHandoverRequestMessage()>
<com.android.nfc.dhimpl.NativeNfcManager: com.android.nfc.DeviceHost$LlcpSocket createLlcpSocket(int,int,int,int)>
<com.android.nfc.dhimpl.NativeP2pDevice: byte[] getGeneralBytes()>
<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parseBtOob(java.nio.ByteBuffer)>
<android.nfc.tech.NfcBarcode: android.nfc.Tag getTag()>
<android.nfc.Tag: java.lang.String[] getTechList()>
<android.nfc.INfcAdapter$Stub$Proxy: int getState()>
<android.nfc.Tag: byte[] getId()>
<android.nfc.tech.MifareUltralight: byte[] transceive(byte[],boolean)>
<android.nfc.tech.NfcF: byte[] transceive(byte[],boolean)>
<android.nfc.tech.NfcB: byte[] transceive(byte[],boolean)>
<com.android.nfc.handover.BluetoothOppHandover: java.lang.String getMimeTypeForUri(android.content.Context,android.net.Uri)>
<android.nfc.tech.NfcV: byte[] transceive(byte[],boolean)>
<com.android.nfc.dhimpl.NativeNfcManager: int getTimeout(int)>
<com.android.nfc.NfcService$NfcAdapterService: int getState()>
<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>
<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parseHandoverSelect(android.nfc.NdefMessage)>
<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)>
<com.android.nfc.snep.SnepMessage: byte getVersion()>
<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.HandoverManager$BluetoothHandoverData parseNokia(java.nio.ByteBuffer)>
<android.nfc.NdefRecord: byte[] getPayload()>
<android.nfc.tech.NfcB: byte[] getProtocolInfo()>
<android.nfc.tech.NfcBarcode: byte[] getBarcode()>
<android.nfc.tech.IsoDep: byte[] transceive(byte[],boolean)>
<android.nfc.INfcTag$Stub$Proxy: android.nfc.NdefMessage ndefRead(int)>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()>
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>
<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: int getSap()>
<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)>
<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: int getHandle()>
<android.nfc.NfcAdapter: android.content.Context getContext()>
<android.nfc.tech.MifareClassic: int getSize()>
<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)>
<com.android.nfc.NfcService$NfcAdapterExtrasService: java.lang.String getDriverName(java.lang.String)>
<android.nfc.TransceiveResult: byte[] getResponseOrThrow()>
<com.android.nfc.NfcDispatcher: android.content.Intent getAppSearchIntent(java.lang.String)>
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>
<android.nfc.INfcTag$Stub$Proxy: android.nfc.TransceiveResult transceive(int,byte[],boolean)>
<com.android.nfc.NfcService$NfcAdapterService: android.nfc.INfcTag getNfcTagInterface()>
<android.nfc.tech.NfcV: byte getDsfId()>
<com.android.nfc.dhimpl.NativeP2pDevice: byte[] transceive(byte[])>
<android.nfc.INfcAdapterExtras$Stub$Proxy: int getCardEmulationRoute(java.lang.String)>
<com.android.nfc.dhimpl.NativeP2pDevice: byte[] receive()>
<android.nfc.tech.MifareClassic: int getBlockCount()>
<android.nfc.tech.Ndef: android.nfc.Tag getTag()>
<com.android.nfc.dhimpl.NativeNfcManager: com.android.nfc.DeviceHost$LlcpConnectionlessSocket createLlcpConnectionlessSocket(int,java.lang.String)>
<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)>
<android.nfc.tech.NfcV: byte getResponseFlags()>
<android.nfc.tech.NfcV: byte[] transceive(byte[])>
<android.nfc.tech.NfcF: byte[] transceive(byte[])>
<android.nfc.tech.NfcA: byte[] transceive(byte[])>
<android.nfc.tech.NfcB: byte[] transceive(byte[])>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findResumedActivityState()>
<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)>
<android.nfc.NfcAdapter: int getSdkVersion()>
<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.PendingHandoverTransfer registerInTransferLocked(android.bluetooth.BluetoothDevice)>
<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getGetRequest(int,android.nfc.NdefMessage)>
<android.nfc.tech.NfcA: int getTimeout()>
<com.android.nfc.handover.HandoverTransfer: int getTransferId()>
<android.nfc.tech.NfcF: int getTimeout()>
<com.android.nfc.RegisteredComponentCache: java.util.ArrayList getComponents()>
<android.nfc.tech.NfcA: int getMaxTransceiveLength()>
<android.nfc.tech.NfcF: int getMaxTransceiveLength()>
<android.nfc.tech.NfcB: int getMaxTransceiveLength()>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>
<android.nfc.tech.NfcV: int getMaxTransceiveLength()>
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle transceive(java.lang.String,byte[])>
<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)>
<android.nfc.tech.MifareUltralight: android.nfc.Tag getTag()>
<android.nfc.NdefRecord: byte[] toByteArray()>
<com.android.nfc.dhimpl.NativeLlcpSocket: int getRemoteRw()>
<android.nfc.tech.MifareClassic: int getMaxTransceiveLength()>
<com.android.nfc.dhimpl.NativeNfcManager: com.android.nfc.DeviceHost$LlcpServerSocket createLlcpServerSocket(int,java.lang.String,int,int,int)>
<android.nfc.tech.NfcB: android.nfc.Tag getTag()>
<android.nfc.tech.NfcA: android.nfc.Tag getTag()>
<android.nfc.tech.NfcF: android.nfc.Tag getTag()>
<android.nfc.tech.NfcV: android.nfc.Tag getTag()>
<android.nfc.tech.Ndef: java.lang.String getType()>
<android.nfc.INdefPushCallback$Stub$Proxy: android.nfc.NdefMessage createMessage()>
<android.nfc.tech.NfcA: short getSak()>
<android.nfc.tech.NfcA: byte[] getAtqa()>
<com.android.nfc.handover.HandoverManager: byte[] addressToReverseBytes(java.lang.String)>
<com.android.nfc.dhimpl.NativeNfcTag: int[] getTechList()>
<com.android.nfc.dhimpl.NativeNfcManager: byte[][] getWipeApdus()>
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>
<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)>
<android.nfc.NdefMessage: int getByteArrayLength()>
<com.android.nfc.NfcDispatcher$DispatchInfo: android.content.Intent setTagIntent()>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createHandoverSelectRecord(boolean)>
<android.nfc.tech.NfcF: byte[] getSystemCode()>
<com.android.nfc.dhimpl.NativeLlcpSocket: int getLocalMiu()>
<com.android.nfc.SendUi: float getDegreesForRotation(int)>
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>
<com.android.nfc.NfcService: com.android.nfc.DeviceHost$LlcpSocket createLlcpSocket(int,int,int,int)>
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()>
<com.android.nfc.NfcService: com.android.nfc.NfcService getInstance()>
<android.nfc.NfcActivityManager: android.net.Uri[] getUris()>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefMessage tryHandoverRequest(android.nfc.NdefMessage)>
<android.nfc.TechListParcel: java.lang.String[][] getTechLists()>
<com.android.nfc.dhimpl.NativeLlcpSocket: int getRemoteMiu()>
<android.nfc.NdefMessage: byte[] toByteArray()>
<com.android.nfc.snep.SnepMessage: byte getField()>
<android.nfc.tech.NfcBarcode: int getType()>
<com.android.nfc.dhimpl.NativeNfcTag: int getHandle()>
<android.nfc.Tag: android.nfc.INfcTag getTagService()>
<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)>
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>
<android.nfc.INfcAdapterExtras$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>
<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>
<com.android.nfc.snep.SnepMessage: android.nfc.NdefMessage getNdefMessage()>
<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: int getLinkMiu()>
<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()>
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)>
<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getSuccessResponse(android.nfc.NdefMessage)>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>
<com.android.nfc.P2pLinkManager: int getMessageAarPresent(android.nfc.NdefMessage)>
<com.android.nfc.dhimpl.NativeNfcManager: java.lang.String dump()>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState findActivityState(android.app.Activity)>
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()>
<android.nfc.tech.MifareClassic: byte[] readBlock(int)>
<android.nfc.tech.MifareClassic: int getTimeout()>
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>
<android.nfc.tech.IsoDep: byte[] transceive(byte[])>
<com.android.nfc.P2pLinkManager: android.nfc.NdefMessage createDefaultNdef(java.lang.String)>
<android.nfc.INfcAdapter$Stub: android.os.IBinder asBinder()>
<android.nfc.tech.IsoDep: int getTimeout()>
<android.nfc.tech.MifareClassic: byte[] transceive(byte[],boolean)>
<android.nfc.INfcTag$Stub$Proxy: boolean isPresent(int)>
<com.android.nfc.LlcpPacket: byte[] getDataBuffer()>
<com.android.nfc.dhimpl.NativeNfcTag: byte[] getUid()>
<com.android.nfc.dhimpl.NativeLlcpSocket: int getLocalSap()>
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcTag getNfcTagInterface()>
<com.android.nfc.dhimpl.NativeNfcTag: byte[] readNdef()>
<com.android.nfc.snep.SnepClient: com.android.nfc.snep.SnepMessage get(android.nfc.NdefMessage)>
<android.nfc.INfcAdapter$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.nfc.INfcAdapterExtras$Stub: android.os.IBinder asBinder()>
<android.nfc.INdefPushCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.nfc.dhimpl.NativeP2pDevice: int getMode()>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()>
<android.nfc.tech.NfcF: byte[] getManufacturer()>
<com.android.nfc.SendUi: android.graphics.Bitmap createScreenshot()>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createHandoverRequestRecord()>
<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()>
<com.android.nfc.ndefpush.NdefPushProtocol: byte[] toByteArray()>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createCollisionRecord()>
<com.android.nfc.snep.SnepMessenger: com.android.nfc.snep.SnepMessage getMessage()>
<android.nfc.tech.MifareUltralight: int getType()>
<com.android.nfc.snep.SnepMessage: byte[] toByteArray()>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)>
<com.android.nfc.P2pLinkManager: int getMessageTnf(android.nfc.NdefMessage)>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>
<com.android.nfc.NfcService: com.android.nfc.DeviceHost$LlcpServerSocket createLlcpServerSocket(int,java.lang.String,int,int,int)>
<com.android.nfc.dhimpl.NativeNfcTag: int getConnectedTechnology()>
<com.android.nfc.dhimpl.NativeP2pDevice: int getHandle()>
<android.nfc.tech.NdefFormatable: android.nfc.Tag getTag()>
<android.nfc.tech.NfcB: byte[] getApplicationData()>
<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getMessage(byte)>
<com.android.nfc.NfcDispatcher$DispatchInfo: android.content.Intent setTechIntent()>
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle close(java.lang.String,android.os.IBinder)>
<com.android.nfc.snep.SnepMessage: int getLength()>
<android.nfc.INfcTag$Stub$Proxy: android.nfc.Tag rediscover(int)>
<com.android.nfc.dhimpl.NativeNfcManager: int getDefaultLlcpRwSize()>
<com.android.nfc.NfcService$TagService: int getMaxTransceiveLength(int)>
<android.nfc.tech.MifareClassic: android.nfc.Tag getTag()>
<android.nfc.INfcTag$Stub$Proxy: int getMaxTransceiveLength(int)>
<android.nfc.tech.MifareClassic: int getType()>
<com.android.nfc.handover.BluetoothHeadsetHandover: boolean getProfileProxys()>
<com.android.nfc.NfcService: com.android.nfc.DeviceHost$LlcpConnectionlessSocket createLlcpConnectionLessSocket(int,java.lang.String)>
<android.nfc.Tag: int getServiceHandle()>
<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()>
<android.nfc.tech.BasicTagTechnology: byte[] transceive(byte[],boolean)>
<com.android.nfc.dhimpl.NativeNfcManager: boolean getExtendedLengthApdusSupported()>
<com.android.nfc.dhimpl.NativeLlcpSocket: int getLocalRw()>
<com.android.nfc.dhimpl.NativeNfcManager: int getMaxTransceiveLength(int)>
<android.nfc.tech.NfcBarcode: android.nfc.tech.NfcBarcode get(android.nfc.Tag)>
<com.android.nfc.ndefpush.NdefPushProtocol: android.nfc.NdefMessage getImmediate()>
<android.nfc.NdefRecord: byte[] getType()>
<android.nfc.INfcTag$Stub$Proxy: int getTimeout(int)>
<android.nfc.INdefPushCallback$Stub: android.os.IBinder asBinder()>
<android.nfc.Tag: int getConnectedTechnology()>
<com.android.nfc.handover.HandoverManager: android.nfc.NdefRecord createBluetoothAlternateCarrierRecord(boolean)>
<android.nfc.NdefRecord: byte[] getId()>
<com.android.nfc.NfcService: byte[] doTransceive(int,byte[])>
<com.android.nfc.handover.HandoverManager: com.android.nfc.handover.PendingHandoverTransfer registerOutTransferLocked(com.android.nfc.handover.HandoverManager$BluetoothHandoverData,android.net.Uri[])>
<com.android.nfc.dhimpl.NativeNfcTag: android.os.Bundle[] getTechExtras()>
<com.android.nfc.snep.SnepMessage: int getAcceptableLength()>
<android.nfc.tech.MifareUltralight: int getTimeout()>
<android.nfc.tech.Ndef: int getMaxSize()>
<android.nfc.tech.MifareUltralight: byte[] readPages(int)>
<android.nfc.INfcAdapter$Stub$Proxy: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>
<com.android.nfc.dhimpl.NativeNfcManager: java.lang.String getName()>
<com.android.nfc.dhimpl.NativeNfcManager: int getDefaultLlcpMiu()>
<com.android.nfc.snep.SnepMessage: com.android.nfc.snep.SnepMessage getPutRequest(android.nfc.NdefMessage)>
<android.nfc.INfcTag$Stub$Proxy: boolean isNdef(int)>
<android.nfc.tech.MifareClassic: int getSectorCount()>
<android.nfc.NfcAdapter: int getAdapterState()>
<com.android.nfc.LlcpPacket: int getRemoteSap()>
<android.nfc.NdefRecord: short getTnf()>
<android.nfc.Tag: android.os.Bundle getTechExtras(int)>
<com.android.nfc.NfcService$NfcAdapterExtrasService: int getCardEmulationRoute(java.lang.String)>
<com.android.nfc.NfcService$TagService: int[] getTechList(int)>
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcApplicationState findAppState(android.app.Application)>
<com.android.nfc.P2pLinkManager: int getMessageSize(android.nfc.NdefMessage)>
<android.nfc.NfcActivityManager: android.nfc.NdefMessage createMessage()>
<android.nfc.tech.MifareUltralight: int getMaxTransceiveLength()>
<android.nfc.INfcTag$Stub$Proxy: boolean canMakeReadOnly(int)>
<android.nfc.INfcTag$Stub$Proxy: int connect(int,int)>
<com.android.nfc.NfcService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.nfc.INfcAdapterExtras$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.nfc.ndefpush.NdefPushClient: boolean push(android.nfc.NdefMessage)>
<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage)>
<com.android.nfc.NfcService$NfcAdapterExtrasService: void setCardEmulationRoute(java.lang.String,int)>
<android.nfc.INfcTag$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.nfc.NfcService$NfcAdapterService: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>
<com.android.nfc.NfcService$NfcServiceHandler: void handleMessage(android.os.Message)>
<com.android.nfc.handover.HandoverTransfer: void whitelistOppDevice(android.bluetooth.BluetoothDevice)>
<com.android.nfc.NfcDispatcher$DispatchInfo: boolean tryStartActivity(android.content.Intent)>
<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)>
<android.nfc.INfcTag$Stub$Proxy: boolean ndefIsWritable(int)>
<com.android.nfc.NfcService$TagService: android.nfc.Tag rediscover(int)>
<android.nfc.tech.MifareClassic: void decrement(int,int)>
<com.android.nfc.NfcService: void onSeApduReceived(byte[])>
<com.android.nfc.dhimpl.NativeLlcpConnectionlessSocket: void send(int,byte[])>
<com.android.nfc.P2pLinkManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.nfc.P2pLinkManager: void onSendComplete(android.nfc.NdefMessage,long)>
<com.android.nfc.NfceeAccessControl: boolean check(android.content.pm.ApplicationInfo)>
<com.android.nfc.NfcDispatcher: boolean tryTech(com.android.nfc.NfcDispatcher$DispatchInfo,android.nfc.Tag)>
<com.android.nfc.handover.HandoverClient: android.nfc.NdefMessage sendHandoverRequest(android.nfc.NdefMessage)>
<com.android.nfc.NfcService: void onCardEmulationAidSelected(byte[])>
<android.nfc.INfcTag$Stub$Proxy: int reconnect(int)>
<com.android.nfc.NfcService$NfcAdapterExtrasService: android.os.Bundle open(java.lang.String,android.os.IBinder)>
<com.android.nfc.NfcService$NfcAdapterService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.nfc.NfcService: void onSeMifareAccess(byte[])>
<com.android.nfc.handover.HandoverService: void createHandoverTransfer(com.android.nfc.handover.PendingHandoverTransfer)>
<android.nfc.tech.NfcF: void setTimeout(int)>
<com.android.nfc.P2pLinkManager: boolean handleMessage(android.os.Message)>
<android.nfc.tech.NfcA: void setTimeout(int)>
<com.android.nfc.dhimpl.NativeNfcManager: void setP2pInitiatorModes(int)>
<com.android.nfc.NfcService: void saveNfcOnSetting(boolean)>
<android.nfc.tech.IsoDep: void setTimeout(int)>
<android.nfc.tech.MifareClassic: void setTimeout(int)>
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>
<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>
<android.nfc.INfcAdapter$Stub$Proxy: void setNdefPushCallback(android.nfc.INdefPushCallback)>
<com.android.nfc.NfcDispatcher: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.nfc.dhimpl.NativeNfcTag: void addNdefTechnology(android.nfc.NdefMessage,int,int,int,int,int)>
<android.nfc.INfcAdapterExtras$Stub$Proxy: void setCardEmulationRoute(java.lang.String,int)>
<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>
<com.android.nfc.NfcService: void sendMockNdefTag(android.nfc.NdefMessage)>
<android.nfc.INfcTag$Stub$Proxy: int setTimeout(int,int)>
<android.nfc.INdefPushCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.nfc.NfcService$NfcAdapterService: void setNdefPushCallback(android.nfc.INdefPushCallback)>
<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)>
<android.nfc.tech.MifareUltralight: void setTimeout(int)>
<com.android.nfc.NfcService$NfcAdapterService: void setP2pModes(int,int)>
<android.nfc.INfcTag$Stub$Proxy: int ndefMakeReadOnly(int)>
<com.android.nfc.NfceeAccessControl: boolean check(int,java.lang.String)>
<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback)>
<android.nfc.INfcAdapterExtras$Stub$Proxy: android.os.Bundle open(java.lang.String,android.os.IBinder)>
<com.android.nfc.dhimpl.NativeNfcManager: void setP2pTargetModes(int)>
<com.android.nfc.dhimpl.NativeNfcManager: boolean setTimeout(int,int)>
<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.nfc.handover.HandoverService$1: void onReceive(android.content.Context,android.content.Intent)>
<com.android.nfc.handover.HandoverService: void onTransferComplete(com.android.nfc.handover.HandoverTransfer,boolean)>
<android.nfc.INfcAdapter$Stub$Proxy: void setP2pModes(int,int)>
<com.android.nfc.NfcService$NfcAdapterService: void dispatch(android.nfc.Tag)>
<android.nfc.INfcAdapterExtras$Stub$Proxy: void authenticate(java.lang.String,byte[])>
<com.android.nfc.dhimpl.NativeLlcpSocket: void send(byte[])>
<com.android.nfc.NfcService$TagService: int ndefWrite(int,android.nfc.NdefMessage)>
<com.android.nfc.P2pLinkManager: void onReceiveComplete(android.nfc.NdefMessage)>
<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)>
<com.android.nfc.snep.SnepMessenger: void sendMessage(com.android.nfc.snep.SnepMessage)>
<android.nfc.INfcTag$Stub$Proxy: int formatNdef(int,byte[])>
<android.nfc.INfcTag$Stub$Proxy: int ndefWrite(int,android.nfc.NdefMessage)>
<android.nfc.tech.MifareClassic: void increment(int,int)>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>
<com.android.nfc.NfceeAccessControl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>
<android.nfc.INfcTag$Stub$Proxy: int close(int)>
<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>
<android.nfc.NfcAdapter: void setP2pModes(int,int)>
<com.android.nfc.handover.HandoverManager: void whitelistOppDevice(android.bluetooth.BluetoothDevice)>
<com.android.nfc.NfcService$TagService: int setTimeout(int,int)>
<com.android.nfc.handover.HandoverTransfer: void onScanCompleted(java.lang.String,android.net.Uri)>
<com.android.nfc.dhimpl.NativeP2pDevice: boolean send(byte[])>