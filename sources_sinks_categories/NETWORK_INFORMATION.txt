<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>
<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>
<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()>
<com.android.server.sip.SipService: android.os.Looper access$1800()>
<android.net.Uri$HierarchicalUri: android.net.Uri$Builder buildUpon()>
<android.media.IAudioService$Stub$Proxy: int getRemoteStreamMaxVolume()>
<com.android.internal.telephony.IccRefreshResponse: java.lang.String toString()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()>
<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getPointer()>
<com.android.exchange.EasSyncService: com.android.exchange.EasSyncService getServiceForMailbox(android.content.Context,com.android.emailcommon.provider.Mailbox)>
<com.android.internal.telephony.SmsUsageMonitor: int getPremiumSmsPermission(java.lang.String)>
<android.net.ConnectivityManager: boolean isNetworkSupported(int)>
<android.telephony.ServiceState: int getRilRadioTechnology()>
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()>
<com.android.server.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName,int)>
<com.android.server.BackupManagerService: java.lang.String getDestinationString(java.lang.String)>
<com.android.server.MountService$ObbState: android.os.IBinder getBinder()>
<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine)>
<android.telephony.CellSignalStrengthGsm: int getDbm()>
<com.android.internal.telephony.SMSDispatcher: int getPremiumSmsPermission(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.OutputStream getOutputStream()>
<com.android.internal.telephony.gsm.SmsCbHeader: int getSerialNumber()>
<com.android.server.InputMethodManagerService: com.android.internal.view.InputBindResult startInputInnerLocked()>
<android.app.ContextImpl$ServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>
<com.android.internal.telephony.AdnRecordCache: java.util.ArrayList getRecordsIfLoaded(int)>
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()>
<android.net.http.Headers: int getConnectionType()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getAttributeNames()>
<android.net.http.AndroidHttpClientConnection: int getRemotePort()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryDev()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()>
<android.media.AudioService: int getMasterVolume()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayMessageBody()>
<android.service.textservice.SpellCheckerService$Session: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
<android.net.sip.SimpleSessionDescription$Media: int getPort()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getUserDataSeptetPadding()>
<com.android.internal.telephony.Connection: int getCnapNamePresentation()>
<java.lang.ClassLoader: java.lang.Package[] getPackages()>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()>
<com.android.internal.telephony.ServiceStateTracker: boolean getDesiredPowerState()>
<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()>
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnectionAc getDataConnectionAc()>
<com.android.email.mail.transport.MailTransport: java.lang.String getHost()>
<android.telephony.CellInfo: long getTimeStamp()>
<com.android.internal.telephony.DataConnection: java.lang.String getWhatToString(int)>
<com.android.server.MountService: java.lang.String getMountedObbPath(java.lang.String)>
<org.apache.harmony.xml.dom.DocumentFragmentImpl: java.lang.String getNodeName()>
<android.net.wifi.WifiStateTracker: java.lang.String getTcpBufferSizesPropName()>
<com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.MmiCode$State getState()>
<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()>
<android.net.http.HttpConnection: java.lang.String getScheme()>
<android.net.LocalSocketImpl: java.lang.Object getOption(int)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailFrom()>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>
<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getNativeLibraryPath()>
<android.telephony.SmsMessage: byte[] getPdu()>
<com.android.internal.telephony.cdma.RuimRecords$EfCsimEprlLoaded: java.lang.String getEfName()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getAlgorithm()>
<com.android.internal.telephony.sip.SipConnectionBase: long getDurationMillis()>
<com.android.internal.telephony.SmsMessageBase: com.android.internal.telephony.SmsHeader getUserDataHeader()>
<com.android.internal.telephony.IccRecords: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>
<java.lang.ClassLoader: java.lang.String findLibrary(java.lang.String)>
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmConnection getConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>
<com.android.server.ThrottleService$DataRecorder: long getPeriodEnd()>
<android.net.nsd.NsdServiceInfo: int getPort()>
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.UiccCardApplication getUiccCardApplication(int)>
<android.net.http.Request: java.lang.String getHostPort()>
<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellCheckerSubtype()>
<com.android.server.am.ActivityManagerService: int[] getUsersLocked()>
<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getEmailBody()>
<android.net.NetworkPolicyManager: int getUidPolicy(int)>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableWifiRegexs()>
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)>
<android.media.AudioService: int getLastAudibleStreamVolume(int)>
<android.net.Uri$PathPart: android.net.Uri$PathSegments getPathSegments()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String getPeerHostName()>
<android.net.sip.ISipSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()>
<com.android.internal.telephony.cdma.CDMAPhone: boolean getCallForwardingIndicator()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.net.sip.SipAudioCall: android.net.rtp.AudioGroup getAudioGroup()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: int[] getAppWidgetIdsForHost(int)>
<com.android.internal.telephony.CallManager: java.util.List getPendingMmiCodes(com.android.internal.telephony.Phone)>
<com.android.internal.telephony.IccRecords: java.lang.String getMsisdnAlphaTag()>
<android.net.Uri: java.lang.String access$600()>
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()>
<com.android.internal.telephony.ApnSetting: java.lang.String toString()>
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)>
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName getDefaultDreamComponent()>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>
<com.android.server.ThrottleService: int getCliffLevel(java.lang.String,int)>
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getFirstChild()>
<android.net.http.SslCertificate$DName: java.lang.String getDName()>
<android.net.http.Connection: android.net.http.SslCertificate getCertificate()>
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getWrappedPort()>
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getForegroundCall()>
<android.telephony.SignalStrength: int getGsmLevel()>
<com.android.server.ConnectivityService: int getNetworkPreference()>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getEnabledAccessibilityServiceList(int,int)>
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getResourcePath()>
<com.android.server.am.ActivityManagerService: int[] getRunningUserIds()>
<com.android.internal.telephony.SmsResponse: java.lang.String toString()>
<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDisplayContentLocked(int)>
<android.inputmethodservice.Keyboard$Key: int[] getCurrentDrawableState()>
<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()>
<com.android.exchange.ExchangeService: int getStatusType(java.lang.String)>
<com.android.internal.telephony.cdma.CdmaConnection: long getCreateTime()>
<android.net.EthernetDataTracker: android.net.LinkProperties getLinkProperties()>
<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getCarrierName(java.lang.String)>
<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getConfigFile()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()>
<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler getDTDHandler()>
<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getLastChild()>
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()>
<com.android.emailcommon.utility.SSLUtils$StubKeyManager: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])>
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>
<android.telephony.CellSignalStrengthLte: int getLevel()>
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorNumeric()>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>
<android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>
<com.android.internal.telephony.CallManager: java.util.List getBgCallConnections()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionKey()>
<com.android.server.am.ActivityManagerService: java.util.List getRunningAppProcesses()>
<com.android.server.pm.PackageManagerService: java.util.List getAllPermissionGroups(int)>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>
<java.lang.ClassLoader: java.lang.ClassLoader access$000()>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>
<android.net.Uri$HierarchicalUri: java.lang.String getQuery()>
<com.android.internal.telephony.cdma.EriManager: int getEriFileVersion()>
<android.net.NetworkIdentity: boolean getRoaming()>
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getRingingCall()>
<android.telephony.SignalStrength: int getLteAsuLevel()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getOriginatingAddress()>
<android.telephony.ServiceState: int getState()>
<android.net.sip.ISipSession$Stub$Proxy: int getState()>
<android.telephony.SmsCbCmasInfo: java.lang.String toString()>
<javax.net.ssl.HandshakeCompletedEvent: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getWantClientAuth()>
<com.android.internal.telephony.IccFileHandler: java.lang.String getCommonIccEFPath(int)>
<android.media.AudioService: int getStreamVolume(int)>
<android.net.sip.SipProfile: java.lang.String getProfileName()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,java.lang.String,int)>
<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$1300(android.net.sip.SipAudioCall)>
<android.service.wallpaper.IWallpaperConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.email.activity.MessageOrderManager$LoadMessageListTask: android.database.Cursor doInBackground(java.lang.Void[])>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
<com.android.emailcommon.service.IEmailService$Stub$Proxy: int getApiLevel()>
<com.android.server.wm.WindowManagerService: android.os.IBinder getFocusedWindowToken()>
<android.service.wallpaper.IWallpaperService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.inputmethodservice.Keyboard: int getHeight()>
<com.android.server.am.ActivityManagerService: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getUseClientMode()>
<android.net.rtp.RtpStream: int getSocket()>
<android.net.sip.SimpleSessionDescription: java.lang.String getAttribute(java.lang.String)>
<android.net.NetworkTemplate: java.lang.String getSubscriberId()>
<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()>
<android.net.Uri: java.lang.String access$300()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()>
<com.android.internal.telephony.RetryManager: int getRetryTimer()>
<android.telephony.TelephonyManager: int getCdmaEriIconIndex()>
<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()>
<android.net.EthernetDataTracker: int getDefaultGatewayAddr()>
<android.telephony.SignalStrength: int getGsmDbm()>
<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.String getStringParam(java.lang.String,java.lang.String)>
<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminUncheckedLocked(android.content.ComponentName,int)>
<android.net.http.RequestHandle: java.lang.String getMethod()>
<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(int)>
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.Menu getMenu()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getType()>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.List getAllCellInfo()>
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String,java.lang.String)>
<android.service.wallpaper.IWallpaperService$Stub: android.os.IBinder asBinder()>
<com.android.server.LightsService: com.android.server.LightsService$Light getLight(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getWantClientAuth()>
<com.android.server.am.UsageStatsService: com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getEnableSessionCreation()>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getWantClientAuth()>
<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getCodePath()>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$FixedParameter: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.NodeList getChildNodes()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.DSAPrivateKey)>
<com.android.server.ConnectivityService: android.net.ProxyProperties getGlobalProxy()>
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()>
<com.android.email.service.AttachmentDownloadService: int getSize()>
<com.android.internal.telephony.gsm.SpnOverride: java.lang.String getSpn(java.lang.String)>
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlVersion()>
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedAuthority()>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView$OnKeyboardActionListener getOnKeyboardActionListener()>
<java.security.Provider$Service: java.lang.String getAlgorithm()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getLocalSocketAddress()>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$4: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$3: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$1: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$2: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$8: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$7: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$6: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$5: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$9: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getFormat()>
<android.net.sip.SipProfile: java.lang.String getDisplayName()>
<android.net.IConnectivityManager$Stub$Proxy: boolean isNetworkSupported(int)>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call$State getActiveFgCallState()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()>
<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()>
<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconMode()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getInetAddress()>
<com.android.server.am.ActivityManagerService: com.android.server.pm.UserManagerService getUserManagerLocked()>
<com.android.internal.telephony.cdma.RuimRecords: boolean getCsimSpnDisplayCondition()>
<android.net.Uri$StringUri: java.lang.String getPath()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509KeyManager getKeyManager()>
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DctConstants$State getOverallState()>
<com.android.server.WifiService: android.net.wifi.WifiInfo getConnectionInfo()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] getDnsForwarders()>
<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)>
<com.android.server.wm.WindowManagerService: float getWindowCompatibilityScale(android.os.IBinder)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>
<android.net.Uri$StringUri: java.lang.String getEncodedQuery()>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()>
<android.net.WebAddress: java.lang.String getHost()>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getInputEncoding()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.service.textservice.SpellCheckerService$SpellCheckerServiceBinder: com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.net.wifi.WifiManager: int getFrequencyBand()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getNeedClientAuth()>
<android.net.ConnectivityManager: int getNetworkPreference()>
<com.android.emailcommon.utility.SSLUtils$StubKeyManager: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])>
<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>
<android.net.http.Headers: java.lang.String getContentDisposition()>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>
<com.android.server.ClipboardService: android.content.ClipData getPrimaryClip(java.lang.String)>
<android.service.wallpaper.WallpaperService: java.util.ArrayList access$300(android.service.wallpaper.WallpaperService)>
<android.net.Uri$StringUri: java.lang.String getEncodedFragment()>
<android.net.LinkCapabilities: java.lang.String get(int)>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.telephony.CellSignalStrengthCdma: int getLevel()>
<com.android.email.service.AccountService$1: android.os.Bundle getConfigurationData(java.lang.String)>
<com.android.email.EmailConnectivityManager: int getActiveNetworkType(android.content.Context)>
<com.android.internal.telephony.ApnContext: boolean getDependencyMet()>
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>
<javax.net.ssl.HttpsURLConnection: java.security.Principal getLocalPrincipal()>
<android.net.http.SslError: int getPrimaryError()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
<org.apache.harmony.xml.dom.CharacterDataImpl: int getLength()>
<android.net.TrafficStats: long getMobileRxPackets()>
<com.android.internal.telephony.WspTypeDecoder: long getValue32()>
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String getOwnerAddr(int)>
<android.telephony.TelephonyManager: int getPhoneType()>
<android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.http.RequestQueue$ActivePool: org.apache.http.HttpHost getProxyHost()>
<com.android.server.WallpaperManagerService: int getHeightHint()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<android.net.EthernetDataTracker: android.net.EthernetDataTracker getInstance()>
<android.net.TrafficStats: int getThreadStatsTag()>
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkPolicy[] getNetworkPolicies()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getUseClientMode()>
<com.android.internal.telephony.DataConnectionTracker: int enableApnType(java.lang.String)>
<com.android.email.service.EasAuthenticatorService$EasAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
<android.net.ConnectivityManager: boolean getMobileDataEnabled()>
<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getRemainingPostDialString()>
<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>
<android.service.dreams.IDreamService$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>
<com.android.internal.telephony.Connection: java.lang.String getCnapName()>
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.ArrayList)>
<com.android.server.wm.WindowManagerService: android.content.res.Configuration computeNewConfigurationLocked()>
<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getLegacyVpnConfig()>
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call getCall()>
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl: org.w3c.dom.DOMStringList getParameterNames()>
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Call$State getState()>
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkPolicy[] getNetworkPolicies()>
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getNextWaitingApn()>
<android.media.IAudioService$Stub$Proxy: int getMasterStreamType()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)>
<org.apache.harmony.xml.ExpatReader: java.lang.Object getProperty(java.lang.String)>
<android.net.INetworkManagementEventObserver$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.gsm.SIMFileHandler: java.lang.String getEFPath(int)>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedProtocols()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getOOBInline()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getProtocol()>
<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>
<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.AppInterface getInstance()>
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getProcessRecordLocked(java.lang.String,int)>
<android.net.http.RequestQueue: android.net.http.Request getRequest()>
<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket createSocket()>
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataConnection$UpdateLinkPropertyResult access$500(com.android.internal.telephony.DataConnection,com.android.internal.telephony.DataCallState)>
<com.android.internal.telephony.ims.IsimFileHandler: java.lang.String getEFPath(int)>
<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)>
<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()>
<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)>
<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getReuseAddress()>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getPackageName()>
<android.service.wallpaper.IWallpaperEngine$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.SmsRawData: byte[] getBytes()>
<android.telephony.SmsCbEtwsInfo: int getWarningType()>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataKSC5601(int)>
<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: int getPkeyContext()>
<android.net.LocalSocket: java.io.InputStream getInputStream()>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getPrefix()>
<android.media.IAudioService$Stub$Proxy: int getStreamMaxVolume(int)>
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()>
<com.android.server.input.InputManagerService: int[] getInputDeviceIds()>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: javax.net.ssl.SSLSession getSession()>
<com.android.server.pm.UserManagerService: android.graphics.Bitmap getUserIcon(int)>
<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket)>
<com.android.server.connectivity.Tethering$TetherInterfaceSM: int getLastError()>
<android.media.AudioService: int getValueForVibrateSetting(int,int,int)>
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: boolean getFeature(java.lang.String)>
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>
<com.android.emailcommon.service.IEmailService$Stub$Proxy: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
<android.security.IKeyChainService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.NetworkInfo: int getSubtype()>
<com.android.internal.telephony.ApnContext: java.util.ArrayList getWaitingApns()>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()>
<android.net.BaseNetworkStateTracker: android.net.LinkProperties getLinkProperties()>
<android.net.http.AndroidHttpClient$2: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>
<com.android.server.InputMethodManagerService$InputMethodSettings: int getCurrentUserId()>
<android.net.sip.SipProfile: boolean getSendKeepAlive()>
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSocket getSocket()>
<com.android.server.BatteryService: int getBatteryLevel()>
<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getPeerProfile()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()>
<com.android.internal.telephony.gsm.SmsCbHeader: int getServiceCategory()>
<com.android.server.display.DisplayManagerService: android.view.DisplayInfo getDisplayInfo(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()>
<org.apache.harmony.xml.dom.CDATASectionImpl: short getNodeType()>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>
<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: android.view.textservice.SuggestionsInfo getNotInDictEmptySuggestions()>
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getSecureRandomService()>
<android.net.IConnectivityManager$Stub$Proxy: int getNetworkPreference()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.app.ContextImpl$StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAddress()>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
<org.apache.harmony.xml.dom.CommentImpl: java.lang.String getNodeName()>
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodList()>
<android.net.EthernetDataTracker: android.net.LinkCapabilities getLinkCapabilities()>
<com.android.server.TwilightService$TwilightState: long getTodaySunrise()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfaces()>
<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>
<android.net.wifi.WifiInfo: int getRssi()>
<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimImpi()>
<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String[] getIsimImpu()>
<android.content.IContentService$Stub: android.os.IBinder asBinder()>
<com.android.internal.app.IMediaContainerService$Stub: android.os.IBinder asBinder()>
<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>
<android.net.INetworkPolicyManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.app.IMediaContainerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getLastAccessedTime()>
<com.android.internal.telephony.gsm.GSMPhone: java.util.List getPendingMmiCodes()>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getHost()>
<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)>
<android.net.IConnectivityManager$Stub$Proxy: int getLastTetherError(java.lang.String)>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>
<com.android.server.pm.PackageManagerService: java.util.List getPersistentApplications(int)>
<android.net.wifi.p2p.IWifiP2pManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMdnNumber()>
<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>
<com.android.internal.telephony.sip.SipConnectionBase: long getConnectTime()>
<android.net.http.Connection: byte[] getBuf()>
<com.android.internal.telephony.cat.CommandDetails: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
<com.android.email.mail.store.ServiceStore: android.os.Bundle checkSettings()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getNeedClientAuth()>
<com.android.server.am.ActivityManagerService: java.util.List getRunningExternalApplications()>
<com.android.internal.textservice.ISpellCheckerService$Stub$Proxy: com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPacketBufferSize()>
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()>
<com.android.server.net.NetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getReceiveBufferSize()>
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getWantClientAuth()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedProtocols()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getAlgorithm()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<com.android.internal.telephony.cdma.CdmaConnection: long getHoldDurationMillis()>
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNamespaceURI()>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<com.android.internal.telephony.DataConnectionTracker: java.lang.String getReryConfig(boolean)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<java.lang.VMClassLoader: java.net.URL getResource(java.lang.String)>
<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>
<android.net.IConnectivityManager$Stub: android.os.IBinder asBinder()>
<android.media.IAudioService$Stub$Proxy: int getVibrateSetting(int)>
<com.android.server.WifiService: android.os.Messenger getWifiStateMachineMessenger()>
<com.android.server.am.ActivityManagerService: int getTaskForActivityLocked(android.os.IBinder,boolean)>
<com.google.android.apps.lightcycle.panorama.StitchingService: android.net.Uri access$700(com.google.android.apps.lightcycle.panorama.StitchingService,java.lang.String,android.net.Uri)>
<android.net.SSLCertificateSocketFactory$1: java.security.cert.X509Certificate[] getAcceptedIssuers()>
<android.net.nsd.INsdManager$Stub$Proxy: android.os.Messenger getMessenger()>
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getTarget()>
<android.service.wallpaper.IWallpaperEngine$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getNextSibling()>
<android.net.http.SslError: java.lang.String getUrl()>
<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfacePairs()>
<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()>
<android.net.LinkProperties: java.util.Collection getAddresses()>
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getBackgroundCall()>
<com.android.server.AppWidgetService: int[] getAppWidgetIdsForHost(int)>
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: int getPremiumSmsPermission(java.lang.String)>
<android.net.ProxyProperties: java.net.InetSocketAddress getSocketAddress()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.Object getValue(java.lang.String)>
<com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
<com.android.server.pm.PackageManagerService: java.io.File access$2200(com.android.server.pm.PackageManagerService,java.io.File)>
<android.net.wifi.WifiStateMachine: int getFrequencyBand()>
<android.telephony.SmsCbCmasInfo: int getCategory()>
<android.net.wifi.WifiInfo: boolean getMeteredHint()>
<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedAuthority()>
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getNeedClientAuth()>
<com.android.email.service.EasTestAuthenticatorService$EasAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()>
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.UiccCardApplication getApplication(int)>
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToServiceId()>
<com.android.internal.telephony.sip.SipConnectionBase: long getHoldDurationMillis()>
<android.net.http.Headers: java.lang.String getCacheControl()>
<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>
<com.android.internal.telephony.CallManager: java.util.List getBackgroundCalls()>
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardStatus$PinState PinStateFromRILInt(int)>
<javax.net.ssl.SSLEngine: int getPeerPort()>
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLParameters getSSLParameters()>
<com.android.server.connectivity.Vpn: java.lang.String getTcpBufferSizesPropName()>
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()>
<com.android.email.RefreshManager: long getLastMessageListRefreshTime(long)>
<com.android.internal.telephony.ApnContext: int getRetryCount()>
<com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>
<android.net.INetworkPolicyManager$Stub: android.os.IBinder asBinder()>
<android.telephony.CellSignalStrengthLte: int getAsuLevel()>
<android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()>
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String)>
<android.net.DummyDataStateTracker: android.net.NetworkInfo getNetworkInfo()>
<com.android.internal.util.AsyncService: android.os.Handler getHandler()>
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: java.util.List getAllCellInfo()>
<com.android.server.WallpaperManagerService: int getWidthHint()>
<android.net.IThrottleManager$Stub$Proxy: long getPeriodStartTime(java.lang.String)>
<com.android.internal.telephony.gsm.GsmSMSDispatcher: java.lang.String getFormat()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: int getByte()>
<org.apache.harmony.xml.dom.ElementImpl: short getNodeType()>
<android.net.NetworkTemplate: int getMatchRule()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataGSM7Bit(int,int,int)>
<android.media.AudioService$RcClientDeathHandler: android.os.IBinder getBinder()>
<android.net.Uri$StringUri: java.lang.String getSchemeSpecificPart()>
<android.net.SntpClient: long getNtpTimeReference()>
<android.telephony.SignalStrength: int getAsuLevel()>
<android.telephony.CellIdentityCdma: int getLatitude()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoLinger()>
<org.apache.harmony.xml.dom.DOMErrorImpl: short getSeverity()>
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeName()>
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getTextContent()>
<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList(boolean,boolean,boolean)>
<com.android.internal.telephony.IccRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>
<com.android.internal.telephony.DataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>
<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()>
<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()>
<com.android.internal.telephony.IWapPushManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.UUSInfo getUUSInfo()>
<com.android.server.am.ActivityManagerService: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<org.apache.harmony.xml.dom.DOMErrorImpl$1: java.lang.String getUri()>
<com.android.server.AppWidgetServiceImpl: java.io.File getSettingsFile(int)>
<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>
<android.net.Uri$PathSegmentsBuilder: android.net.Uri$PathSegments build()>
<com.android.server.ThrottleService: long getPeriodStartTime(java.lang.String)>
<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbEtwsInfo getEtwsInfo()>
<android.inputmethodservice.Keyboard: int[] getShiftKeyIndices()>
<android.net.sip.SipProfile: java.lang.String getPassword()>
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccFileHandler getIccFileHandler()>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri,android.database.Cursor)>
<android.media.IAudioService$Stub$Proxy: int getMasterVolume()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getNetworkType()>
<com.android.internal.telephony.gsm.GsmDataConnection: int getProfileId()>
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getNodeName()>
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.DOMImplementation getDOMImplementation()>
<android.telephony.CellInfo$1: android.telephony.CellInfo createFromParcel(android.os.Parcel)>
<android.telephony.SignalStrength: int getEvdoDbm()>
<com.android.server.RecognitionManagerService: android.content.ComponentName findAvailRecognizer(java.lang.String,int)>
<com.android.server.accessibility.AccessibilityManagerService$Service: float findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<com.android.internal.telephony.ServiceStateTracker: java.util.List getAllCellInfo()>
<com.android.internal.telephony.ims.IsimUiccRecords: java.lang.String getIsimDomain()>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMdn()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getProtocol()>
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] getKeyManagers()>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)>
<android.telephony.SignalStrength: int getLteDbm()>
<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<android.telephony.CellIdentityCdma: int getBasestationId()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
<android.service.wallpaper.IWallpaperConnection$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<javax.net.ssl.HttpsURLConnection: java.security.Principal getPeerPrincipal()>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getMin()>
<android.telephony.SignalStrength: int getLteCqi()>
<com.android.server.NsdService$NsdStateMachine: java.lang.String getWhatToString(int)>
<com.android.internal.telephony.DataCallState: java.lang.String toString()>
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionKey()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.telephony.gsm.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()>
<android.net.IThrottleManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SmsMessage: int getProtocolIdentifier()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)>
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: int getCapitalizationType(java.lang.String)>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getNid()>
<android.telephony.SmsMessage: int getIndexOnIcc()>
<com.android.internal.telephony.DataConnection: boolean isRetryNeeded()>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>
<android.net.wifi.WifiManager: int getWifiState()>
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)>
<android.net.wifi.WifiConfigStore: android.net.DhcpInfoInternal getIpConfiguration(int)>
<com.android.server.wm.WindowManagerService: android.view.DisplayInfo getDefaultDisplayInfoLocked()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getSCAddress()>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String,java.lang.String)>
<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>
<com.android.server.RecognitionManagerService: android.content.ComponentName getCurRecognizer(int)>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>
<android.net.INetworkPolicyManager$Stub$Proxy: int getUidPolicy(int)>
<com.android.internal.telephony.cdma.CdmaConnection: int getNumberPresentation()>
<android.net.wifi.WifiManager: int getWifiApState()>
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()>
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()>
<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)>
<com.android.internal.telephony.CallTracker: android.os.Message obtainNoPollCompleteMessage(int)>
<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf()>
<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getEnableSessionCreation()>
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagName(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String)>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getQName(int)>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>
<com.android.internal.telephony.cdma.SmsMessage: int getStatus()>
<com.android.email.service.EmailServiceUtils$NullEmailService: int getApiLevel()>
<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiInfo getConnectionInfo()>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketInputStream: byte[] access$300(org.apache.harmony.xnet.provider.jsse.SSLSocketInputStream)>
<android.net.Uri$Part: java.lang.String getEncoded()>
<android.net.sip.SipProfile: java.lang.String getProxyAddress()>
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromServiceId()>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>
<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.DctConstants$Activity getActivity()>
<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()>
<com.android.internal.telephony.IccProvider: java.lang.String getType(android.net.Uri)>
<com.android.server.am.ActivityManagerService: int getRequestedOrientation(android.os.IBinder)>
<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()>
<android.speech.tts.TextToSpeechService$SynthesisSpeechItem: java.lang.String getLanguage()>
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()>
<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)>
<com.android.emailcommon.service.AccountServiceProxy: android.os.Bundle getConfigurationData(java.lang.String)>
<android.media.IAudioService$Stub$Proxy: int getRingerMode()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSendBufferSize()>
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.IccRecords getIccRecords(int)>
<android.net.ThrottleManager: long getResetTime(java.lang.String)>
<android.net.LinkProperties: java.util.Collection getRoutes()>
<com.android.phone.EmergencyCallbackModeService: boolean getEmergencyCallbackModeCallState()>
<android.net.ProxyProperties: java.lang.String getExclusionList()>
<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToRGB(byte[],int,boolean)>
<android.net.INetworkPolicyManager$Stub$Proxy: boolean isUidForeground(int)>
<android.net.http.HttpsConnection$1: java.security.cert.X509Certificate[] getAcceptedIssuers()>
<android.net.WebAddress: java.lang.String getPath()>
<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.media.AudioService$VolumeStreamState: int getStreamType()>
<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int)>
<com.android.internal.telephony.SmsMessageBase: byte[] getPdu()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<com.android.server.pm.PackageManagerService: java.lang.String getAsecPackageName(java.lang.String)>
<com.android.internal.telephony.RetryManager: java.lang.String toString()>
<com.android.internal.telephony.gsm.SIMRecords: com.android.internal.telephony.gsm.UsimServiceTable getUsimServiceTable()>
<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest()>
<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()>
<android.net.sip.SipSession: android.net.sip.ISipSession getRealSession()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getActiveLinkProperties()>
<com.android.server.WifiService: android.net.DhcpInfo getDhcpInfo()>
<android.net.Uri$HierarchicalUri: java.util.List getPathSegments()>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(java.lang.String)>
<com.android.server.am.ProcessList: long getMemLevel(int)>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()>
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getPrefix()>
<android.telephony.SignalStrength: int getGsmAsuLevel()>
<android.net.Uri$OpaqueUri: java.util.List getPathSegments()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()>
<android.net.wifi.p2p.WifiP2pGroupList: java.util.Collection getGroupList()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getRingingPhone()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.net.LinkAddress: int getNetworkPrefixLength()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getLastChild()>
<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>
<com.android.server.am.ActivityManagerService: android.content.res.Configuration getConfiguration()>
<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.ServiceState getServiceState()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedProtocols()>
<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()>
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getMinRecordSize()>
<android.net.sip.SipProfile: java.lang.String getProtocol()>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener,boolean)>
<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)>
<android.telephony.CellSignalStrengthLte: int getDbm()>
<android.net.LocalSocketAddress: java.lang.String getName()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandom()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getModulus()>
<com.android.server.net.NetworkPolicyManagerService: int getUidPolicy(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getUseClientMode()>
<com.android.internal.telephony.DataConnection$CallSetupException: int getRetryOverride()>
<android.net.ProxyProperties: int getPort()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.io.FileDescriptor getFileDescriptor$()>
<android.telephony.SmsCbCmasInfo: int getCertainty()>
<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>
<com.android.internal.telephony.cat.BerTlv: int getTag()>
<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)>
<android.telephony.SmsMessage: int getIndexOnSim()>
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String encodeBody()>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getPreviousSibling()>
<com.android.server.pm.UserManagerService: int[] getUserIdsLPr()>
<android.telephony.CellIdentityLte: android.telephony.CellIdentityLte copy()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getOOBInline()>
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getMessageBody()>
<android.telephony.SignalStrength: int getLteLevel()>
<com.android.server.WifiService: int getWifiEnabledState()>
<com.android.internal.telephony.Connection: java.lang.Object getUserData()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getId()>
<org.apache.harmony.xml.dom.DOMImplementationImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)>
<com.android.server.ThrottleService: java.lang.String getHelpUri()>
<com.android.internal.telephony.DriverCall: java.lang.String toString()>
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.cdma.RuimSmsInterfaceManager,java.util.List)>
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName,int)>
<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.ArrayList access$300(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.ArrayList)>
<android.net.Uri$HierarchicalUri: java.lang.String getScheme()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPeerPort()>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getSid()>
<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>
<android.net.sip.ISipSessionListener$Stub: android.os.IBinder asBinder()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()>
<com.android.server.wm.WindowManagerService$4: float getInterpolation(float)>
<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccRecords getIccRecords()>
<com.android.internal.telephony.IccRecords: java.lang.String getIMSI()>
<android.net.rtp.AudioGroup: int getMode()>
<android.speech.tts.TextToSpeechService$SynthesisSpeechItem: java.lang.String getText()>
<android.telephony.ServiceState: int getSystemId()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoWriteTimeout()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.FileDescriptor getFileDescriptor$()>
<com.android.server.DropBoxManagerService: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>
<com.android.server.TwilightService: com.android.server.TwilightService$TwilightState getCurrentState()>
<android.net.ThrottleManager: int getCliffLevel(java.lang.String,int)>
<android.telephony.CellIdentityLte: int getCi()>
<com.android.server.pm.PackageManagerService$HandlerParams: android.os.UserHandle getUser()>
<com.google.android.gsf.Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPeerPort()>
<com.android.providers.telephony.SmsProvider: java.lang.String getType(android.net.Uri)>
<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.Document newDocument()>
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getDocumentURI()>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<com.android.email.mail.store.ServiceStore: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)>
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>
<com.android.internal.telephony.ITelephony$Stub: android.os.IBinder asBinder()>
<com.android.server.am.ActivityManagerService: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)>
<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
<com.android.internal.telephony.SmsHeader: java.lang.String toString()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getCreationTime()>
<com.android.internal.telephony.cdma.CDMAPhone: boolean getMute()>
<com.google.android.apps.lightcycle.panorama.StitchingServiceManager: com.google.android.apps.lightcycle.panorama.StitchingServiceManager$StitchSession popNextSession()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAttribute(java.lang.String)>
<com.android.internal.telephony.test.LineReader: java.lang.String getNextLineCtrlZ()>
<android.telephony.NeighboringCellInfo: int getNetworkType()>
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getNodeValue()>
<android.media.AudioService: int getRemoteStreamVolume()>
<android.net.sip.SipManager: android.net.sip.SipSession createSipSession(android.net.sip.SipProfile,android.net.sip.SipSession$Listener)>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String)>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()>
<com.android.emailcommon.service.IAccountService$Stub$Proxy: int getAccountColor(long)>
<javax.net.ssl.SSLContext: java.lang.String getProtocol()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.SSLParametersImpl getDefault()>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.CallTracker getCallTracker()>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getUserInfo()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()>
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener getListener()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()>
<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver getEntityResolver()>
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeValue()>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>
<org.apache.harmony.xml.dom.DOMErrorImpl$1: org.w3c.dom.Node getRelatedNode()>
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.Element getOwnerElement()>
<com.android.server.InputMethodManagerService: java.util.List getInputMethodList()>
<com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.IEmailService getService(android.content.Context,java.lang.String,com.android.emailcommon.service.IEmailServiceCallback)>
<android.net.WebAddress: java.lang.String getAuthInfo()>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>
<android.media.IMediaScannerService$Stub: android.os.IBinder asBinder()>
<android.net.NetworkStats: long getElapsedRealtimeAge()>
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub: android.os.IBinder asBinder()>
<android.telephony.SignalStrength: int getCdmaDbm()>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)>
<com.android.internal.telephony.IccUtils: byte[] hexStringToBytes(java.lang.String)>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getOtasp()>
<android.net.wifi.p2p.WifiP2pService: android.os.Messenger getMessenger()>
<com.android.internal.telephony.cdma.RuimRecords$EfCsimCdmaHomeLoaded: java.lang.String getEfName()>
<android.net.Uri$StringUri: java.lang.String getEncodedAuthority()>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getBackgroundCall()>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForToken(android.os.IBinder)>
<com.android.server.accessibility.AccessibilityManagerService: boolean getActiveWindowBounds(android.graphics.Rect)>
<android.net.wifi.WifiConfiguration: int getAuthType()>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()>
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.View getCustomView()>
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: android.view.textservice.SuggestionsInfo getInDictEmptySuggestions()>
<com.android.internal.telephony.SMSDispatcher: int getNextConcatenatedRef()>
<android.speech.tts.TextToSpeechService$SpeechItem: int getStreamType()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()>
<android.telephony.SmsCbMessage: int getSerialNumber()>
<android.net.sip.SipProfile: boolean getAutoRegistration()>
<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiApEnabledState()>
<org.apache.harmony.xml.dom.CommentImpl: short getNodeType()>
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: long readUint64()>
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getLocalName()>
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: long readUint32()>
<android.net.http.Headers: long getTransferEncoding()>
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession getSession()>
<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.UUSInfo getUUSInfo()>
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByName(android.content.ComponentName)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getLteOnCdmaMode()>
<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$Status getStatus()>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>
<com.android.internal.textservice.ISpellCheckerSessionListener$Stub: android.os.IBinder asBinder()>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
<android.media.AudioService$SetModeDeathHandler: android.os.IBinder getBinder()>
<com.android.internal.telephony.ITelephonyRegistry$Stub: com.android.internal.telephony.ITelephonyRegistry asInterface(android.os.IBinder)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataState()>
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getWholeText()>
<org.apache.harmony.xml.dom.DocumentImpl: short getNodeType()>
<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>
<android.net.Uri: java.util.Set getQueryParameterNames()>
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getName()>
<com.android.internal.telephony.cat.CommandParams: com.android.internal.telephony.cat.AppInterface$CommandType getCommandType()>
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()>
<com.android.internal.telephony.OperatorInfo: java.lang.String toString()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedCipherSuites()>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()>
<com.android.server.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName,int)>
<com.android.server.net.NetworkStatsService: java.lang.String[] getMobileIfaces()>
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()>
<com.android.internal.telephony.ServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>
<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()>
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>
<android.net.ProxyProperties: java.lang.String getHost()>
<android.telephony.CellIdentityCdma: int getLongitude()>
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()>
<com.android.internal.telephony.cdma.CDMAPhone: java.util.List getPendingMmiCodes()>
<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()>
<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getDefaultWindowListLocked()>
<com.android.internal.telephony.gsm.GsmConnection: int getNumberPresentation()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getLocalPort()>
<org.apache.harmony.xml.dom.DocumentTypeImpl: short getNodeType()>
<android.telephony.SignalStrength: int getCdmaEcio()>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)>
<com.android.server.InputMethodManagerService$ImeSubtypeListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getLength()>
<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()>
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: int getCount()>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeName()>
<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap getAllAdditionalInputMethodSubtypes()>
<com.android.server.ConnectivityService: boolean getMobileDataEnabled()>
<com.android.exchange.EasSyncService: com.android.exchange.provider.GalResult searchGal(android.content.Context,long,java.lang.String,int)>
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()>
<android.media.AudioService: int getMasterMaxVolume()>
<android.telephony.SmsCbMessage: int getMessagePriority()>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getCdmaMin()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getTcpNoDelay()>
<android.net.Uri$AbstractHierarchicalUri: int getPort()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone()>
<android.telephony.TelephonyManager: int getPhoneType(int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()>
<android.media.IAudioService$Stub$Proxy: android.media.IRingtonePlayer getRingtonePlayer()>
<com.android.internal.telephony.gsm.GsmCall: java.util.List getConnections()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeP()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeQ()>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo,boolean)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getPeerHost()>
<android.telephony.CellIdentityCdma: android.telephony.CellIdentityCdma copy()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getTrafficClass()>
<android.net.NetworkIdentity: int getSubType()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()>
<com.android.email.RefreshManager$Status: long getLastRefreshTime()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>
<android.telephony.TelephonyManager: int getDataActivity()>
<android.app.LoadedApk$WarningContextClassLoader: java.lang.Class loadClass(java.lang.String)>
<com.android.server.pm.PackageManagerService: java.util.List getPreferredPackages(int)>
<javax.net.ssl.SSLContext: java.security.Provider getProvider()>
<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: java.lang.String toString()>
<android.net.Uri$OpaqueUri: java.lang.String getQuery()>
<com.android.internal.telephony.cdma.CdmaCall: java.util.List getConnections()>
<com.android.internal.telephony.cdma.RuimRecords$EfCsimImsimLoaded: java.lang.String getEfName()>
<com.android.internal.telephony.DataConnection: int getRilRadioTechnology(int)>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(java.lang.String,java.lang.String,android.net.sip.SipAudioCall$Listener,int)>
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>
<android.net.INetworkStatsSession$Stub: android.os.IBinder asBinder()>
<android.telephony.SignalStrength: int getEvdoSnr()>
<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getDriverCalls()>
<com.android.server.MountService$ObbAction: android.content.res.ObbInfo getObbInfo()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getNeedClientAuth()>
<com.android.server.am.ActiveServices: java.util.List getRunningServiceInfoLocked(int,int)>
<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)>
<android.telephony.SmsCbCmasInfo: int getResponseType()>
<android.webkit.SslCertLookupTable: android.webkit.SslCertLookupTable getInstance()>
<com.android.email.service.EasAuthenticatorService$EasAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getEnableSessionCreation()>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()>
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] wrap(byte,org.apache.harmony.xnet.provider.jsse.DataStream)>
<java.lang.VMClassLoader: java.util.List getResources(java.lang.String)>
<com.android.internal.telephony.DataConnection: boolean isRetryForever()>
<android.net.sip.SipProfile: java.lang.String getSipDomain()>
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>
<com.android.server.am.ActivityManagerService: android.content.pm.ApplicationInfo getAppInfoForUser(android.content.pm.ApplicationInfo,int)>
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlEncoding()>
<com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>
<android.net.http.Headers: java.lang.String getEtag()>
<android.media.AudioService$VolumeStreamState: int getMaxIndex()>
<android.telephony.SmsCbMessage: java.lang.String getMessageBody()>
<com.android.internal.telephony.cat.ComprehensionTlv: int getTag()>
<android.net.sip.SipManager: android.net.sip.SipAudioCall takeAudioCall(android.content.Intent,android.net.sip.SipAudioCall$Listener)>
<android.net.INetworkManagementEventObserver$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.IccCardProxy: boolean getIccRecordsLoaded()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsDetail()>
<android.net.Uri: java.lang.String toSafeString()>
<com.android.server.pm.PackageManagerService: int getInstallLocation()>
<com.android.internal.telephony.cat.CatService: com.android.internal.telephony.cat.CatService getInstance(com.android.internal.telephony.CommandsInterface,android.content.Context,com.android.internal.telephony.UiccCard)>
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getSubtitle()>
<com.android.internal.telephony.SmsMessageBase: long getTimestampMillis()>
<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int getRetrievalAllowingWindowLocked()>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()>
<android.inputmethodservice.Keyboard: java.util.List getKeys()>
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getTextContent()>
<com.android.server.pm.PackageManagerService$DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>
<com.android.email.RefreshManager: com.android.email.RefreshManager$Status getMessageListStatusForTest(long)>
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent getLastAccessibilityEvent()>
<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: java.security.PrivateKey getPrivateKey(java.lang.String)>
<android.media.IAudioService$Stub$Proxy: int getLastAudibleMasterVolume()>
<android.net.http.RequestQueue$ActivePool: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>
<android.app.LoadedApk$ServiceDispatcher: java.lang.RuntimeException getUnbindLocation()>
<android.inputmethodservice.Keyboard: int getKeyHeight()>
<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconIndex(int,int)>
<com.android.internal.telephony.IccRecords: java.lang.String getOperatorNumeric()>
<com.android.server.BackupManagerService$PerformFullRestoreTask: com.android.server.BackupManagerService$RestorePolicy readAppManifest(com.android.server.BackupManagerService$FileMetadata,java.io.InputStream)>
<com.android.server.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getInternalSubset()>
<com.android.internal.telephony.gsm.GsmConnection: long getDurationMillis()>
<com.android.server.wm.WindowManagerService: int getAppOrientation(android.view.IApplicationToken)>
<javax.net.ssl.SSLParameters: boolean getNeedClientAuth()>
<android.net.sip.SipProfile: java.lang.String getUserName()>
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getPreviousSibling()>
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getValue()>
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableBluetoothRegexs()>
<com.android.internal.telephony.ATResponseParser: java.lang.String nextString()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getVoiceMessageCount()>
<java.util.concurrent.AbstractExecutorService: java.util.List invokeAll(java.util.Collection)>
<android.net.wifi.WifiSsid: java.lang.String getHexString()>
<android.net.MobileDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
<android.net.sip.SipProfile: javax.sip.address.Address getSipAddress()>
<android.service.dreams.IDreamManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SignalStrength: int getDbm()>
<com.android.internal.telephony.AdnRecord: java.lang.String getAlphaTag()>
<com.android.server.TextServicesManagerService$TextServicesSettings: int getCurrentUserId()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getInetAddress()>
<com.android.internal.telephony.cdma.CDMALTEPhone: void getAvailableNetworks(android.os.Message)>
<android.net.WebAddress: int getPort()>
<android.net.WebAddress: java.lang.String getScheme()>
<com.android.email.widget.WidgetManager: com.android.email.widget.WidgetManager getInstance()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()>
<com.android.server.BackupManagerService: java.lang.String getCurrentTransport()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getActivePhoneType()>
<android.media.AudioService$ScoClient: int getCount()>
<android.net.rtp.RtpStream: int getMode()>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)>
<com.android.server.MountService: int getEncryptionState()>
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>
<android.net.sip.ISipSession$Stub: android.os.IBinder asBinder()>
<org.apache.harmony.xml.dom.InnerNodeImpl: void getTextContent(java.lang.StringBuilder)>
<android.net.NetworkQuotaInfo: long getEstimatedBytes()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getWantClientAuth()>
<com.android.internal.telephony.cat.IconLoader: com.android.internal.telephony.cat.IconLoader getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)>
<android.net.IConnectivityManager$Stub$Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()>
<com.android.internal.telephony.IccSmsInterfaceManager: java.util.ArrayList buildValidRawData(java.util.ArrayList)>
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getData()>
<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(int)>
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getLocalName()>
<android.telephony.ServiceState: int getRadioTechnology()>
<android.net.wifi.WifiStateTracker: android.net.NetworkInfo getNetworkInfo()>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getPointer()>
<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine()>
<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getSelectedInputMethod()>
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeName()>
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$100(com.android.internal.telephony.cdma.RuimRecords)>
<com.android.server.pm.PackageManagerService$InstallParams: android.content.pm.ManifestDigest getManifestDigest()>
<android.telephony.SmsMessage: java.lang.String getEmailFrom()>
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardStatus$PinState getPin1State()>
<com.android.server.sip.SipService: android.net.sip.ISipSession getPendingSession(java.lang.String)>
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$PersoSubState PersoSubstateFromRILInt(int)>
<com.google.common.collect.Lists$TransformingRandomAccessList: java.lang.Object get(int)>
<com.android.server.TwilightService$TwilightState: long getTomorrowSunrise()>
<com.android.internal.telephony.cat.ComprehensionTlv: int getValueIndex()>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()>
<com.android.internal.telephony.gsm.VoiceMailConstants: java.lang.String getVoiceMailTag(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.Phone getPhone()>
<android.net.http.RequestQueue$SyncFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>
<android.net.TrafficStats: long getTxPackets(java.lang.String)>
<com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>
<javax.net.ssl.KeyManagerFactory: java.lang.String getAlgorithm()>
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.TrafficStats: long getTotalRxBytes()>
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getLocalPrincipal()>
<android.webkit.SslClientCertLookupTable: android.webkit.SslClientCertLookupTable getInstance()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsSummaryXt()>
<com.android.internal.telephony.Connection: java.lang.String toString()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getPeerPrincipal()>
<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<com.android.internal.telephony.gsm.GsmConnection: java.lang.String getAddress()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<android.net.wifi.WifiInfo: int getLinkSpeed()>
<android.net.TrafficStats: long getRxPackets(java.lang.String)>
<com.android.server.ConnectivityService: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection getConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)>
<org.apache.harmony.xml.dom.EntityReferenceImpl: java.lang.String getNodeName()>
<android.net.IThrottleManager$Stub$Proxy: long getCliffThreshold(java.lang.String,int)>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()>
<com.android.internal.widget.LockSettingsService: java.lang.String getString(java.lang.String,java.lang.String,int)>
<com.android.internal.telephony.gsm.GsmConnection: long getHoldDurationMillis()>
<com.android.server.am.ActivityManagerService: int getCurrentUserIdLocked()>
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getLocalCertificates()>
<com.android.internal.telephony.AdnRecord: byte[] buildAdnString(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getFormat()>
<com.android.internal.telephony.gsm.GsmSmsCbMessage: android.telephony.SmsCbMessage createSmsCbMessage(android.telephony.SmsCbLocation,byte[][])>
<com.android.server.sip.SipService$SipSessionGroupExt: android.net.sip.SipProfile getLocalProfile()>
<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: int getApnProfileID(java.lang.String)>
<android.telephony.SignalStrength: int getLevel()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String[] getValueNames()>
<android.net.Uri$StringUri: java.lang.String getScheme()>
<android.net.wifi.WifiStateMachine: java.lang.String getConfigFile()>
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.cdma.RuimSmsInterfaceManager)>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getPseudoSubject()>
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>
<android.net.NetworkIdentity: int getType()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getPrivateExponent()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getNeedClientAuth()>
<com.android.server.MountService: java.lang.String getSecureContainerPath(java.lang.String)>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getNextSibling()>
<com.android.internal.telephony.cdma.CdmaConnection: long getDurationMillis()>
<com.android.internal.telephony.SmsMessageBase: int getIndexOnIcc()>
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>
<com.android.server.am.ActivityManagerService: java.lang.String getCallingPackage(android.os.IBinder)>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getX()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getY()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getP()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getQ()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getG()>
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>
<android.telephony.SmsCbEtwsInfo: java.lang.String toString()>
<com.android.internal.telephony.CallForwardInfo: java.lang.String toString()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()>
<com.android.server.BackupManagerService$PerformFullRestoreTask$RestoreInstallObserver: int getResult()>
<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getLatestConnection()>
<android.telephony.CellInfoGsm$1: android.telephony.CellInfoGsm createFromParcel(android.os.Parcel)>
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>
<com.android.internal.telephony.sip.SipCallBase: java.util.List getConnections()>
<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<org.apache.harmony.xml.ExpatParser$ExpatLocator: int getColumnNumber()>
<android.net.Uri$HierarchicalUri: java.lang.String getSchemeSpecificPart()>
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()>
<com.android.server.WifiService$Multicaster: int getUid()>
<android.security.IKeyChainService$Stub: android.os.IBinder asBinder()>
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>
<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()>
<android.app.LoadedApk$WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconMode()>
<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription access$400(android.net.sip.SipAudioCall,java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getRecordSize(int)>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()>
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()>
<com.android.internal.telephony.Call: long getEarliestConnectTime()>
<android.net.http.Headers: java.lang.String getPragma()>
<com.android.internal.telephony.ims.IsimUiccRecords: int getDisplayRule(java.lang.String)>
<com.android.internal.telephony.ApnContext: int getWaitingApnsPermFailCount()>
<com.android.server.pm.PackageManagerService: java.lang.String getTempContainerId()>
<android.net.NetworkInfo: int getType()>
<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.String getTag()>
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>
<android.app.LoadedApk$ServiceDispatcher: android.content.ServiceConnection getServiceConnection()>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<com.android.internal.telephony.IccSmsInterfaceManager: int getPremiumSmsPermission(java.lang.String)>
<android.net.IThrottleManager$Stub$Proxy: int getCliffLevel(java.lang.String,int)>
<android.net.nsd.INsdManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getWantClientAuth()>
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>
<com.android.email.activity.RecentMailboxManager: java.util.ArrayList getMostRecent(long,boolean)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()>
<com.android.internal.telephony.AdnRecord: java.lang.String toString()>
<android.net.TrafficStats: long getTotalRxPackets()>
<com.android.internal.telephony.BaseCommands: int getLteOnCdmaMode()>
<com.android.internal.telephony.gsm.SmsMessage: int getDataCodingScheme()>
<android.media.AudioService: int getRingerMode()>
<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getDisabledSystemInputMethods()>
<com.android.server.wm.WindowManagerService: int getPendingAppTransition()>
<android.app.IServiceConnection$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$000(com.android.internal.telephony.cdma.RuimRecords)>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.LinkProperties getLinkProperties(int)>
<android.telephony.SignalStrength: java.lang.String toString()>
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>
<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap getAllIndexes(boolean)>
<android.telephony.CellSignalStrengthGsm: int getLevel()>
<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.CharSequence getMessage()>
<android.net.http.Headers: java.lang.String getAcceptRanges()>
<com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIdsForHost(int)>
<com.android.internal.telephony.CsimFileHandler: java.lang.String getEFPath(int)>
<android.net.wifi.WifiInfo: int getIpAddress()>
<android.net.IThrottleManager$Stub$Proxy: long getByteCount(java.lang.String,int,int,int)>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getUserData(java.lang.String)>
<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()>
<android.media.AudioService: int getRemoteStreamMaxVolume()>
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromCodeScheme()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkState[] getAllNetworkState()>
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>
<android.view.textservice.SuggestionsInfo: int getCookie()>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NamedNodeMap getAttributes()>
<android.net.Uri$OpaqueUri: java.lang.String getHost()>
<android.app.Service: java.lang.String getClassName()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheredIfacePairs()>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<android.net.LocalSocket: int getSendBufferSize()>
<com.android.exchange.ExchangeService: int getStatusChangeCount(java.lang.String)>
<android.view.textservice.TextInfo: int getCookie()>
<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodAndSubtypeHashCodeListLocked()>
<org.apache.harmony.xml.dom.NodeImpl$1: java.lang.String getTypeName()>
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionMethod()>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)>
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: org.w3c.dom.Node getNamedItem(java.lang.String)>
<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getLength()>
<com.android.internal.telephony.sip.SipConnectionBase: java.lang.String getRemainingPostDialString()>
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>
<java.security.Provider$Service: java.util.List getAliases()>
<com.android.server.am.ActivityManagerService: long[] getProcessPss(int[])>
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getParentNode()>
<com.android.internal.telephony.gsm.GSMPhone: int getPhoneType()>
<com.android.server.net.NetworkPolicyManagerService: boolean getRestrictBackground()>
<java.lang.BootClassLoader: java.net.URL getResource(java.lang.String)>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)>
<com.android.server.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName,int)>
<java.lang.ClassLoader: java.util.Enumeration findResources(java.lang.String)>
<javax.net.ssl.SSLEngine: java.lang.String getPeerHost()>
<com.android.internal.telephony.IccRecords: int getVoiceMessageCount()>
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$AppState AppStateFromRILInt(int)>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getPrlVersion()>
<android.net.rtp.RtpStream: int getRemotePort()>
<com.android.server.pm.PackageManagerService: java.io.File getDataPathForUser(int)>
<com.android.server.NotificationManagerService: long[] getLongArray(android.content.res.Resources,int,int,long[])>
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()>
<com.android.email.service.AccountService$1: java.lang.String getDeviceId()>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getImsi()>
<android.accessibilityservice.IAccessibilityServiceClient$Stub: android.os.IBinder asBinder()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getCipherSuite()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.PhoneConstants$State getState()>
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccRecords getIccRecords()>
<com.android.internal.telephony.RestrictedState: java.lang.String toString()>
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getMessage()>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<android.net.NetworkStats: long getElapsedRealtime()>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$MulticastLock createMulticastLock(java.lang.String)>
<com.android.internal.telephony.gsm.GSMPhone: android.telephony.ServiceState getServiceState()>
<android.net.DhcpInfoInternal: java.util.Collection getRoutes()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<com.android.email.service.MailService: java.util.ArrayList getPopImapAccountList(android.content.Context)>
<android.media.AudioService: int getLastAudibleMasterVolume()>
<com.android.email.EmailConnectivityManager: int getActiveNetworkType()>
<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.UUSInfo getUUSInfo()>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()>
<android.net.wifi.WifiSsid: byte[] getOctets()>
<com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection: com.android.internal.widget.IRemoteViewsFactory getRemoteViewsFactory()>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getRingingCall()>
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)>
<android.net.Uri$StringUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.net.Uri$PathPart: java.lang.String getEncoded()>
<com.android.email.mail.store.ImapStore: java.util.Collection getConnectionPoolForTest()>
<android.media.IAudioService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.IPhoneStateListener$Stub: com.android.internal.telephony.IPhoneStateListener asInterface(android.os.IBinder)>
<android.net.wifi.WifiNative: int getGroupCapability(java.lang.String)>
<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToRGB(byte[],int,boolean,byte[])>
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison,int)>
<android.net.sip.SipAudioCall: int getState()>
<com.android.emailcommon.service.IAccountService$Stub$Proxy: android.os.Bundle getConfigurationData(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()>
<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMap(org.apache.harmony.xml.dom.NodeImpl)>
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$202(com.android.internal.telephony.gsm.SimSmsInterfaceManager,java.util.List)>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()>
<android.net.BaseNetworkStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.MagnificationSpec getDisplayMagnificationSpecLocked(int)>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String[] getActiveApnTypes()>
<android.net.ThrottleManager: long getByteCount(java.lang.String,int,int,int)>
<com.android.server.am.ActivityManagerService: int getPackageScreenCompatMode(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSendBufferSize()>
<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>
<android.net.ConnectivityManager: int tether(java.lang.String)>
<com.android.email.RefreshManager: com.android.email.RefreshManager getInstance(android.content.Context)>
<com.android.email.EmailConnectivityManager: int getActiveNetworkType(android.net.ConnectivityManager)>
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$PersoSubState getPersoSubState()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>
<android.app.Service: android.app.Application getApplication()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPublicExponent()>
<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)>
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNodeName()>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getInstalledAccessibilityServiceList(int)>
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])>
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>
<android.telephony.NeighboringCellInfo: int getLac()>
<android.net.Uri$PathSegments: java.lang.Object get(int)>
<org.apache.harmony.xml.dom.ElementImpl$ElementAttrNamedNodeMapImpl: int getLength()>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering(java.lang.String[])>
<android.net.sip.SimpleSessionDescription$Media: int getPortCount()>
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>
<com.android.internal.telephony.cdma.CDMAPhone: int getCdmaEriIconIndex()>
<android.net.SntpClient: long getNtpTime()>
<android.inputmethodservice.Keyboard: int getVerticalGap()>
<android.net.NetworkStats: long getTotalBytes()>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getCurrentDataConnectionState()>
<com.android.internal.telephony.DataConnectionTracker: com.android.internal.telephony.ApnSetting fetchDunApn()>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getURI(int)>
<android.net.sip.SipManager: boolean isRegistered(java.lang.String)>
<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentGprsState()>
<android.net.Uri$StringUri: android.net.Uri$Builder buildUpon()>
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()>
<com.android.server.WifiService: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
<com.android.emailcommon.utility.SSLUtils: com.android.emailcommon.utility.SSLSocketFactory getHttpSocketFactory(boolean,javax.net.ssl.KeyManager)>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()>
<com.android.server.InputMethodManagerService: java.util.List getShortcutInputMethodsAndSubtypes()>
<android.telephony.SignalStrength: int getCdmaLevel()>
<android.net.Uri$OpaqueUri: java.lang.String getAuthority()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: byte[] getEncoded()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getRtpmap(int)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NamedNodeMap getAttributes()>
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()>
<com.android.server.am.ActiveServices: android.app.PendingIntent getRunningServiceControlPanelLocked(android.content.ComponentName)>
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int)>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getName()>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getUseClientMode()>
<android.telephony.CellIdentityGsm: int getMnc()>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNamespaceURI()>
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: byte[] read(int)>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getBgPhone()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getNetworkInfo(int)>
<com.android.exchange.EasOutboxService$SendMailParser: int getStatus()>
<com.android.server.am.ActivityManagerService: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.ToneSettings getToneSettings()>
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
<android.net.NetworkStatsHistory: int getIndexBefore(long)>
<com.android.internal.telephony.IccIoResult: com.android.internal.telephony.IccException getException()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<com.android.server.net.NetworkPolicyManagerService: int[] getUidsWithPolicy(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()>
<com.android.internal.telephony.cdma.CDMAPhone: int getPhoneType()>
<android.telephony.SmsMessage: int getStatus()>
<javax.net.ssl.SSLSessionBindingEvent: java.lang.String getName()>
<android.telephony.CellIdentityGsm: int getMcc()>
<com.android.server.BackupManagerService: android.content.Intent getConfigurationIntent(java.lang.String)>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getProxy()>
<android.net.nsd.NsdServiceInfo: android.net.nsd.DnsSdTxtRecord getTxtRecord()>
<com.android.server.pm.PackageManagerService: java.lang.String getApkName(java.lang.String)>
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>
<android.telephony.SmsMessage: java.lang.String getEmailBody()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getKeepAlive()>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NodeList getChildNodes()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: byte[] getUserData()>
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNode(java.lang.String)>
<android.app.LoadedApk$WarningContextClassLoader: java.net.URL getResource(java.lang.String)>
<com.android.server.WifiService: int getWifiApEnabledState()>
<android.net.sip.ISipService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: java.lang.CharSequence getTitle()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>
<android.net.wifi.IWifiManager$Stub$Proxy: int getFrequencyBand()>
<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Phone getPhone()>
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$AppType getType()>
<android.net.wifi.NetworkUpdateResult: int getNetworkId()>
<com.android.internal.telephony.cdma.RuimRecords$EfPlLoaded: java.lang.String getEfName()>
<com.android.internal.telephony.CallerInfo: java.lang.String toString()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>
<com.android.emailcommon.service.IAccountService$Stub$Proxy: java.lang.String getDeviceId()>
<android.media.AudioService$ScoClient: android.os.IBinder getBinder()>
<android.telephony.CellIdentityGsm: int getLac()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getProtocol()>
<com.android.phone.BluetoothPhoneService$3: java.lang.String getNetworkOperator()>
<com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.net.nsd.INsdManager$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.IccUtils: android.graphics.Bitmap parseToBnW(byte[],int)>
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentReconnectAlarm()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()>
<android.net.wifi.WifiNative: java.lang.String getMacAddress()>
<android.telephony.NeighboringCellInfo: int getPsc()>
<android.telephony.SignalStrength: int getCdmaAsuLevel()>
<com.android.internal.telephony.cat.BerTlv: java.util.List getComprehensionTlvs()>
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getEarliestConnection()>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getFirstChild()>
<com.android.email.service.EasTestAuthenticatorService$EasAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
<com.android.server.InputMethodManagerService$InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)>
<android.telephony.ServiceState: int getCssIndicator()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()>
<org.apache.harmony.xml.dom.DocumentFragmentImpl: short getNodeType()>
<com.android.server.DevicePolicyManagerService: java.util.List getActiveAdmins(int)>
<com.android.internal.telephony.gsm.SmsCbHeader: int getGeographicalScope()>
<android.net.wifi.WifiStateTracker: android.net.LinkProperties getLinkProperties()>
<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)>
<com.android.server.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin(int)>
<android.net.sip.SipProfile: java.lang.String getUriString()>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Phone getPhone()>
<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()>
<com.android.internal.telephony.IccRecords: java.lang.String getVoiceMailAlphaTag()>
<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()>
<android.net.wifi.WifiManager: java.lang.String getConfigFile()>
<android.net.wifi.WifiConfigStore: android.net.LinkProperties getLinkProperties(int)>
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DataConnection getDataConnection()>
<com.google.android.gsf.Gservices: java.lang.String getString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<com.android.internal.telephony.test.LineReader: java.lang.String getNextLine(boolean)>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getBaseURI()>
<android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.net.TrafficStats: long getMobileTxBytes()>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>
<com.android.internal.telephony.cdma.CDMAPhone: boolean getMessageWaitingIndicator()>
<com.android.emailcommon.service.EmailServiceProxy: int getApiLevel()>
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>
<com.android.internal.telephony.ISms$Stub$Proxy: int getPremiumSmsPermission(java.lang.String)>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>
<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>
<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>
<com.android.email.RefreshManager: boolean isRefreshingAnyMessageListForTest()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getInstance(java.lang.String)>
<com.android.internal.telephony.IccProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.am.ActivityManagerService: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)>
<android.inputmethodservice.InputMethodService: int getBackDisposition()>
<com.android.internal.telephony.UiccCardApplication: com.android.internal.telephony.IccCardApplicationStatus$AppState getState()>
<com.android.server.DeviceStorageMonitorService: long getMemoryLowThreshold()>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTetheredInterfaces()>
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>
<android.net.wifi.IWifiManager$Stub: android.os.IBinder asBinder()>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(int)>
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.SipProfile[] getListOfProfiles()>
<com.android.server.wm.WindowManagerService: android.view.WindowInfo getWindowInfo(android.os.IBinder)>
<com.android.internal.telephony.gsm.GsmCallTracker: boolean getMute()>
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>
<java.security.Provider$Service: java.lang.String getClassName()>
<com.android.internal.statusbar.IStatusBarService$Stub: android.os.IBinder asBinder()>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<android.speech.IRecognitionService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.OperatorInfo: com.android.internal.telephony.OperatorInfo$State getState()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedCipherSuites()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>
<com.android.internal.telephony.IccCardApplicationStatus: java.lang.String toString()>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
<android.media.IAudioService$Stub$Proxy: int getRemoteStreamVolume()>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>
<com.android.server.TwilightService$TwilightState: long getTodaySunset()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<com.android.server.BackupManagerService: java.util.List allAgentPackages()>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
<org.apache.harmony.security.fortress.Services: int getCacheVersion()>
<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle getUser()>
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>
<android.net.DummyDataStateTracker: android.net.LinkProperties getLinkProperties()>
<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()>
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)>
<android.telephony.ServiceState: int getCdmaRoamingIndicator()>
<android.telephony.SmsCbCmasInfo: int getUrgency()>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getWrappedHostName()>
<android.media.AudioService$SetModeDeathHandler: int getMode()>
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token jjFillToken()>
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getLocalAddress()>
<com.android.server.TextServicesManagerService$TextServicesSettings: java.lang.String getSelectedSpellChecker()>
<com.android.server.ClipboardService: android.content.ClipDescription getPrimaryClipDescription()>
<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>
<com.android.server.am.ActivityManagerService: android.content.Intent createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)>
<com.android.server.am.ActivityManagerService: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$ActiveAdmin getActiveAdminForCallerLocked(android.content.ComponentName,int)>
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getNextSibling()>
<android.net.NetworkPolicyManager: boolean getRestrictBackground()>
<android.net.NetworkStatsHistory: long getTotalBytes()>
<android.net.RouteInfo: java.net.InetAddress getGateway()>
<com.android.internal.telephony.cdma.RuimFileHandler: java.lang.String getEFPath(int)>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getPrlVersion()>
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List access$200(com.android.internal.telephony.gsm.SimSmsInterfaceManager)>
<com.android.email.mail.store.ImapStore: com.android.email.mail.store.ImapConnection getConnection()>
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
<com.android.server.wm.WindowManagerService: int getPreferredOptionsPanelGravity()>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>
<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)>
<android.net.Uri$OpaqueUri: java.lang.String getPath()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getPkeyAlias()>
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()>
<android.speech.IRecognitionService$Stub: android.os.IBinder asBinder()>
<android.view.textservice.TextInfo: int getSequence()>
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getNotations()>
<com.android.internal.telephony.cat.IconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
<android.net.sip.ISipService$Stub: android.os.IBinder asBinder()>
<android.net.NetworkStatsHistory: long getStart()>
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.android.server.UiModeManagerService: int getCurrentModeType()>
<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)>
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String,java.lang.String)>
<android.net.http.SslCertificate$DName: java.lang.String getUName()>
<android.telephony.ServiceState: int getCdmaEriIconIndex()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ServerSessionContext getServerSessionContext()>
<android.media.IAudioService$Stub$Proxy: int getMode()>
<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMImplementation getImplementation()>
<javax.net.ssl.SSLServerSocketFactory: javax.net.ServerSocketFactory getDefault()>
<com.android.internal.telephony.gsm.SIMRecords: int getDisplayRule(java.lang.String)>
<android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)>
<com.android.internal.telephony.cdma.CdmaConnection: long getConnectTime()>
<android.telephony.CellIdentityGsm: int getCid()>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedFragment()>
<android.net.IThrottleManager$Stub: android.os.IBinder asBinder()>
<android.net.INetworkStatsService$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: long getSCTimestampMillis()>
<com.android.server.DevicePolicyManagerService: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetDefaultSSLParameters()>
<com.android.internal.telephony.DataConnectionTracker: android.net.LinkProperties getLinkProperties(java.lang.String)>
<android.telephony.CellInfoCdma$1: android.telephony.CellInfoCdma createFromParcel(android.os.Parcel)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])>
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Call getCall()>
<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
<com.android.internal.telephony.cdma.CdmaMmiCode: java.lang.CharSequence getMessage()>
<android.net.EthernetDataTracker: android.net.NetworkInfo getNetworkInfo()>
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaShort()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: long getLastCertReqTime()>
<android.net.rtp.AudioStream: int getDtmfType()>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsVoiceMail()>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()>
<android.net.sip.ISipSession$Stub$Proxy: android.net.sip.SipProfile getLocalProfile()>
<com.android.internal.telephony.cdma.RuimRecords: int getDisplayRule(java.lang.String)>
<android.telephony.SignalStrength: int getLteSignalStrenght()>
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getIMSI()>
<android.net.LinkProperties: java.util.Collection getDnses()>
<android.security.IKeyChainService$Stub$Proxy: byte[] getCertificate(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.OutputStream getOutputStream()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String[] getValueNames()>
<com.android.server.InputMethodManagerService$InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>
<com.android.internal.telephony.DataConnection: int getRetryTimer()>
<org.apache.harmony.xml.dom.TextImpl: short getNodeType()>
<javax.net.ssl.SSLContextSpi: javax.net.ssl.SSLParameters engineGetSupportedSSLParameters()>
<com.android.internal.telephony.CallManager: java.util.List getRingingCalls()>
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getNativeLibraryPath()>
<android.net.ThrottleManager: java.lang.String getHelpUri()>
<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()>
<android.net.INetworkPolicyListener$Stub: android.os.IBinder asBinder()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.Document parse(org.xml.sax.InputSource)>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>
<com.android.internal.telephony.cdma.RuimRecords$EfCsimSpnLoaded: java.lang.String getEfName()>
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getAddress()>
<org.apache.harmony.xml.dom.DOMImplementationImpl: org.apache.harmony.xml.dom.DOMImplementationImpl getInstance()>
<com.android.server.MountService: java.lang.String[] getSecureContainerList()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getPkeyAlias()>
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.DctConstants$State getState()>
<android.service.textservice.SpellCheckerService$Session: java.lang.String getLocale()>
<com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.speech.tts.TextToSpeechService$SpeechItem: float getFloatParam(java.lang.String,float)>
<org.apache.harmony.xml.dom.CDATASectionImpl: java.lang.String getNodeName()>
<android.telephony.SmsCbMessage: int getMessageFormat()>
<com.android.email.activity.MessageOrderManager: int getTotalMessageCount()>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getUseClientMode()>
<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()>
<com.android.email.Throttle: long getLastEventTimeForTest()>
<com.android.internal.telephony.ISms$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.server.net.NetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getTrafficClass()>
<com.android.email.activity.MessageOrderManager: int getCurrentPosition()>
<android.telephony.ServiceState: boolean getRoaming()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getLocalPrincipal()>
<com.android.server.am.ActivityManagerService: int getProcessLimit()>
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()>
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$102(com.android.internal.telephony.cdma.RuimRecords,byte[])>
<com.android.internal.telephony.DataConnection: int getDataConnectionId()>
<com.android.phone.EmergencyCallbackModeService: long getEmergencyCallbackModeTimeout()>
<org.apache.harmony.xml.dom.AttrImpl: short getNodeType()>
<com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats getService()>
<android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()>
<android.telephony.TelephonyManager: int getNetworkClass(int)>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.SmsHeader getUserDataHeader()>
<android.telephony.TelephonyManager: int getCurrentPhoneType()>
<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)>
<android.net.http.Headers: java.lang.String getContentEncoding()>
<android.net.INetworkStatsSession$Stub$Proxy: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: int getEngineContext()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$2300(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallParams)>
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: java.util.List getSortedInputMethodAndSubtypeList()>
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)>
<android.net.sip.SimpleSessionDescription: java.lang.String[] getAttributeNames()>
<android.net.sip.SipManager: boolean isOpened(java.lang.String)>
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()>
<android.telephony.SignalStrength: int getGsmSignalStrength()>
<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<com.android.server.ThrottleService: long getCliffThreshold(java.lang.String,int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getTcpNoDelay()>
<com.android.internal.telephony.cat.ItemsIconId: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
<android.service.dreams.IDreamService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.telephony.SignalStrength: int getLteRssnr()>
<com.android.exchange.ExchangeService: java.lang.String getEasAccountSelector()>
<com.android.server.am.ActivityManagerService: int getFrontActivityScreenCompatMode()>
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)>
<android.telephony.SmsCbMessage: int getGeographicalScope()>
<com.android.server.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts(int)>
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)>
<android.telephony.SmsCbMessage: int getServiceCategory()>
<com.android.exchange.ExchangeService: com.android.exchange.ExchangeService$AccountList access$600(android.content.Context,com.android.exchange.ExchangeService$AccountList)>
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()>
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getApplicationBufferSize()>
<javax.net.ssl.SSLSessionBindingEvent: javax.net.ssl.SSLSession getSession()>
<com.android.server.ServiceWatcher: int getBestVersion()>
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionKey()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getDefaultSSLParameters()>
<android.inputmethodservice.KeyboardView$SwipeTracker: float getYVelocity()>
<android.net.sip.SimpleSessionDescription$Media: int[] getRtpPayloadTypes()>
<android.net.sip.SipAudioCall: android.net.rtp.AudioStream getAudioStream()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getNeedClientAuth()>
<com.android.internal.telephony.IPhoneStateListener$Stub: android.os.IBinder asBinder()>
<android.net.Uri$OpaqueUri: java.lang.String getLastPathSegment()>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$10: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl: java.lang.Object getParameter(java.lang.String)>
<com.android.server.pm.PackageManagerService$AsecInstallArgs: java.lang.String getCodePath()>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$11: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$12: java.lang.Object get(org.apache.harmony.xml.dom.DOMConfigurationImpl)>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getAttribute(java.lang.String)>
<javax.net.ssl.HandshakeCompletedEvent: java.lang.String getCipherSuite()>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getPeerPort()>
<android.telephony.NeighboringCellInfo: int getRssi()>
<com.android.server.DevicePolicyManagerService$ActiveAdmin: int getUid()>
<android.net.LinkProperties$1: android.net.LinkProperties createFromParcel(android.os.Parcel)>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getDataActivity()>
<org.apache.http.HttpHost: java.lang.String getHostName()>
<com.android.internal.telephony.UUSInfo: int getDcs()>
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getOperatorNumeric()>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)>
<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.ims.IsimRecords getIsimRecords()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getDefaultTrustManager()>
<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()>
<com.android.internal.telephony.IccServiceTable: java.lang.String toString()>
<android.speech.tts.ITextToSpeechService$Stub$Proxy: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getFmtp(int)>
<android.telephony.ServiceState: java.lang.String toString()>
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: com.android.inputmethod.latin.spellcheck.DictionaryPool getDictionaryPool(java.lang.String)>
<org.apache.harmony.xml.dom.InnerNodeImpl: java.lang.String getTextContent()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getPeerHostName()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCdmaEriIconIndex()>
<com.android.internal.telephony.CallManager: int getServiceState()>
<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getRemainingPostDialString()>
<com.android.internal.telephony.CallManager: java.util.List getFgCallConnections()>
<com.android.internal.telephony.gsm.SmsMessage: int getProtocolIdentifier()>
<com.android.server.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.InputStream getInputStream()>
<com.google.android.apps.lightcycle.panorama.StitchingServiceManager: com.google.android.apps.lightcycle.panorama.StitchingServiceManager getStitchingServiceManager(android.content.Context)>
<com.android.server.wm.WindowManagerService: int getLidState()>
<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.res.ObbInfo getObbInfo(java.lang.String)>
<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()>
<android.net.RouteInfo: android.net.LinkAddress getDestination()>
<android.net.sip.SipProfile: java.lang.String getAuthUserName()>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)>
<org.apache.harmony.xml.dom.DOMErrorImpl: org.w3c.dom.DOMLocator getLocation()>
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViews getViewAt(int)>
<android.net.http.Connection: boolean getCanPersist()>
<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: com.android.internal.telephony.gsm.GsmSmsAddress getAddress()>
<android.net.rtp.RtpStream: int getLocalPort()>
<android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()>
<android.media.AudioService: int getMode()>
<android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getMdnNumber()>
<com.android.internal.telephony.sip.SipConnectionBase: long getCreateTime()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.net.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()>
<com.android.server.net.NetworkStatsService$1: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>
<android.speech.tts.TextToSpeechService: java.util.Set onGetFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
<android.telephony.SmsMessage: long getTimestampMillis()>
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.media.IAudioService$Stub$Proxy: int getLastAudibleStreamVolume(int)>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>
<android.app.IServiceConnection$Stub: android.os.IBinder asBinder()>
<com.android.email.RefreshManager$RefreshStatusMap: com.android.email.RefreshManager$Status get(long)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()>
<com.android.providers.media.IMtpService$Stub: android.os.IBinder asBinder()>
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedData()>
<android.net.SntpClient: long getRoundTripTime()>
<com.android.internal.telephony.DataConnectionTracker$TxRxSum: java.lang.String toString()>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeValue()>
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>
<android.telephony.SmsCbCmasInfo: int getSeverity()>
<com.android.server.pm.UserManagerService: int getUserSerialNumber(int)>
<com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.IEmailService getExchangeService(android.content.Context,com.android.emailcommon.service.IEmailServiceCallback)>
<com.android.server.ConnectivityService: android.net.ProxyProperties getProxy()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getDisplayOriginatingAddress()>
<com.android.server.net.NetworkStatsService$1: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>
<com.android.internal.telephony.gsm.GsmMmiCode: int getCLIRMode()>
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>
<com.android.server.wm.WindowManagerService: float[] getAnimationScales()>
<android.net.wifi.WifiManager: android.os.Messenger getWifiStateMachineMessenger()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getCreationTime()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getPeerCertificates()>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String)>
<com.android.server.am.ActivityManagerService: java.util.List getRecentTasks(int,int,int)>
<javax.net.ssl.TrustManagerFactory: java.lang.String getAlgorithm()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getPeerPort()>
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler getLexicalHandler()>
<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<com.android.internal.telephony.ApnContext: java.lang.String getApnType()>
<com.android.emailcommon.service.AccountServiceProxy: java.lang.String getDeviceId()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedPath()>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>
<com.android.server.am.ActivityManagerService: android.content.IIntentSender getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)>
<com.android.server.pm.UserManagerService: int[] getUserIds()>
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>
<android.net.Uri$OpaqueUri: int getPort()>
<com.android.server.UiModeManagerService: int getNightMode()>
<com.android.server.ThrottleService$DataRecorder: long getPeriodTx(int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getEncoded()>
<com.android.server.ThrottleService$DataRecorder: long getPeriodRx(int)>
<android.telephony.CellIdentityGsm: int getPsc()>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getLocalName()>
<com.android.server.ThrottleService: long getResetTime(java.lang.String)>
<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
<android.telephony.TelephonyManager: int getVoiceMessageCount()>
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: int[] getAdnRecordsSize(int)>
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()>
<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>
<android.telephony.ServiceState: boolean getIsManualSelection()>
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CallTracker getCallTracker()>
<com.android.internal.telephony.IccRecords: boolean getVoiceMessageWaiting()>
<android.net.http.RequestHandle: int getRedirectCount()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedProtocols()>
<android.telephony.CellIdentityCdma: int getSystemId()>
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<com.android.internal.telephony.cdma.SmsMessage: int getProtocolIdentifier()>
<android.telephony.SignalStrength: int getEvdoAsuLevel()>
<android.inputmethodservice.SoftInputWindow: int getSize()>
<com.google.android.picasastore.HttpUtils$MetricsTrackingConnectionManager$1: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getEngine()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager getInstance()>
<com.android.server.ConnectivityService: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getEnableSessionCreation()>
<android.media.AudioService: int getMasterStreamType()>
<android.net.wifi.IWifiManager$Stub$Proxy: int getWifiEnabledState()>
<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<android.media.AudioService$VolumeStreamState: int getIndex(int,boolean)>
<com.android.internal.textservice.ITextServicesSessionListener$Stub: android.os.IBinder asBinder()>
<com.android.email.activity.MessageOrderManager: com.android.email.MessageListContext getListContext()>
<com.android.server.am.ActivityManagerService: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<android.net.Uri$OpaqueUri: java.lang.String getScheme()>
<com.android.internal.telephony.gsm.GSMPhone: boolean getMute()>
<android.net.EthernetDataTracker: java.lang.String getTcpBufferSizesPropName()>
<java.lang.BootClassLoader: java.util.Enumeration getResources(java.lang.String)>
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoUnfiltered()>
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>
<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid getWifiSsid()>
<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()>
<android.net.DummyDataStateTracker: java.lang.String getTcpBufferSizesPropName()>
<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)>
<android.net.TrafficStats: long getTxBytes(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ClientSessionContext getClientSessionContext()>
<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>
<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiStateMachineMessenger()>
<com.android.internal.app.IMediaContainerService$Stub$Proxy: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,long)>
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>
<android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()>
<com.android.internal.telephony.ServiceStateTracker: android.telephony.SignalStrength getSignalStrength()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: int getPkeyContext()>
<com.android.server.am.ActivityManagerService: android.content.pm.UserInfo getCurrentUser()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.Object getValue(java.lang.String)>
<android.telephony.SmsMessage: java.lang.String getMessageBody()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.security.interfaces.DSAParams getParams()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getUseClientMode()>
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
<android.net.http.Headers: java.util.ArrayList getSetCookie()>
<com.android.internal.telephony.IccCardStatus: java.lang.String toString()>
<android.telephony.TelephonyManager: int getSimState()>
<com.android.server.input.InputManagerService: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)>
<com.android.internal.telephony.gsm.SmsMessage: int getStatus()>
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagNameNS(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String,java.lang.String)>
<com.android.internal.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)>
<javax.net.ssl.X509ExtendedKeyManager: java.lang.String chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getPort()>
<java.security.Provider$Service: java.lang.String getType()>
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[])>
<com.android.server.BatteryService: int getPlugType()>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Call getForegroundCall()>
<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
<com.android.server.am.ActivityManagerService: java.util.List getProcessesInErrorState()>
<android.media.IAudioService$Stub$Proxy: int getStreamVolume(int)>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
<com.android.internal.telephony.cat.IconLoader: android.graphics.Bitmap parseToBnW(byte[],int)>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getTextContent()>
<com.android.internal.telephony.cdma.CdmaCallTracker: boolean getMute()>
<android.net.sip.SimpleSessionDescription: android.net.sip.SimpleSessionDescription$Media[] getMedia()>
<com.android.email.Throttle: int getTimeoutForTest()>
<android.net.NetworkPolicyManager: long computeNextCycleBoundary(long,android.net.NetworkPolicy)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getRemoteSocketAddress()>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<android.net.TrafficStats: long getMobileRxBytes()>
<com.android.server.NetworkManagementService: int getInterfaceRxThrottle(java.lang.String)>
<com.android.server.display.DisplayManagerService: int[] getDisplayIds()>
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.IccCardStatus$CardState getCardState()>
<com.android.emailcommon.service.IEmailService$Stub: android.os.IBinder asBinder()>
<com.google.android.gsf.Gservices: java.util.Map getStringsByPrefix(android.content.ContentResolver,java.lang.String[])>
<android.net.Uri$StringUri: java.lang.String getAuthority()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedQuery()>
<org.apache.harmony.xml.dom.AttrImpl: boolean getSpecified()>
<com.android.server.WallpaperManagerService: java.lang.String getName()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandomMember()>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
<com.android.server.wm.WindowManagerService: int getRotation()>
<android.net.TrafficStats: long getMobileTxPackets()>
<android.service.dreams.IDreamManager$Stub: android.os.IBinder asBinder()>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<com.android.internal.appwidget.IAppWidgetService$Stub: android.os.IBinder asBinder()>
<android.inputmethodservice.Keyboard: int getHorizontalGap()>
<android.net.http.SslCertificate$DName: java.lang.String getCName()>
<android.net.wifi.WifiInfo: int getNetworkId()>
<android.service.textservice.SpellCheckerService$InternalISpellCheckerSession: java.lang.String getLocale()>
<android.net.wifi.WifiNative: int getBand()>
<com.android.internal.telephony.gsm.SmsMessage$PduParser: java.lang.String getUserDataUCS2(int)>
<android.telephony.CellIdentityCdma: int getNetworkId()>
<android.net.wifi.IWifiManager$Stub$Proxy: android.net.DhcpInfo getDhcpInfo()>
<android.net.NetworkIdentity: java.lang.String getSubscriberId()>
<com.android.internal.telephony.cdma.SmsMessage: java.util.ArrayList getSmsCbProgramData()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()>
<com.android.internal.telephony.SmsMessageBase: java.lang.String getServiceCenterAddress()>
<com.android.internal.telephony.cdma.RuimRecords: byte[] access$002(com.android.internal.telephony.cdma.RuimRecords,byte[])>
<android.net.http.Request: android.net.http.EventHandler getEventHandler()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,java.lang.String,int)>
<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceRxThrottle(java.lang.String)>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>
<com.android.internal.telephony.gsm.GsmServiceStateTracker: com.android.internal.telephony.Phone getPhone()>
<com.android.server.am.ActivityManagerService: java.lang.String getProviderMimeType(android.net.Uri,int)>
<com.android.server.WifiService: java.lang.String getConfigFile()>
<com.android.server.pm.PackageManagerService: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<android.net.TrafficStats: long getRxBytes(java.lang.String)>
<com.android.server.dreams.DreamManagerService: android.content.ComponentName[] getDreamComponents()>
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.IccCardStatus$PinState getUniversalPinState()>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName,int)>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getDefaultPhone()>
<com.android.internal.telephony.cdma.SmsMessage: int getNextMessageId()>
<com.android.exchange.AbstractSyncService: void <init>(android.content.Context,com.android.emailcommon.provider.Mailbox)>
<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.os.UserHandle getUserHandle()>
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>
<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod getInternalInputMethod()>
<com.android.internal.telephony.UUSInfo: byte[] getUserData()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: int getCallState()>
<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()>
<com.android.internal.telephony.gsm.SimTlv: int getTag()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableIfaces()>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DctConstants$State getOverallState()>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<com.android.email.service.AttachmentDownloadService: int getQueueSize()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String getEncryptionMethod()>
<com.android.internal.telephony.cdma.RuimRecords$EfCsimLiLoaded: java.lang.String getEfName()>
<android.telephony.CellInfo: java.lang.String toString()>
<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)>
<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()>
<org.apache.harmony.xml.dom.DocumentImpl: boolean getStrictErrorChecking()>
<android.net.sip.SipProfile: int getPort()>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getLastPathSegment()>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<android.telephony.TelephonyManager: int getCdmaEriIconMode()>
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoLinger()>
<com.android.internal.telephony.SmsMessageBase: byte[] getUserData()>
<android.telephony.SmsMessage: int getStatusOnSim()>
<android.net.NetworkStats: int[] getUniqueUids()>
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>
<com.android.internal.textservice.ISpellCheckerService$Stub: android.os.IBinder asBinder()>
<android.net.sip.SimpleSessionDescription$Fields: java.lang.String[] getAttributeNames()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getEnableSessionCreation()>
<org.apache.harmony.xml.dom.NodeImpl: void getTextContent(java.lang.StringBuilder)>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccCardConstants$State getState()>
<android.net.Uri$OpaqueUri: java.lang.String getFragment()>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()>
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>
<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String getLanguage()>
<android.net.wifi.WifiConfigStore: android.net.ProxyProperties getProxyProperties(int)>
<com.android.internal.os.IDropBoxManagerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>
<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: int getPkeyContext()>
<com.android.server.am.ActiveServices$ServiceMap: java.util.Collection getAllServices(int)>
<com.android.internal.telephony.gsm.SmsCbHeader: int getNumberOfPages()>
<com.android.exchange.EasSyncService: java.lang.String getTargetCollectionClassFromCursor(android.database.Cursor)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey getInstance(org.apache.harmony.xnet.provider.jsse.OpenSSLKey)>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>
<android.telephony.SmsCbCmasInfo: int getMessageClass()>
<android.telephony.SmsCbMessage: java.lang.String toString()>
<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.IccFileHandler getIccFileHandler(int)>
<com.android.internal.telephony.IccCardApplicationStatus: com.android.internal.telephony.IccCardApplicationStatus$AppType AppTypeFromRILInt(int)>
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getType()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.NetworkStats getNetworkStatsUidDetail(int)>
<com.android.internal.telephony.CallManager: java.util.List getAllPhones()>
<android.view.textservice.SuggestionsInfo: int getSequence()>
<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.UiccCard getUiccCard()>
<com.android.email.activity.MessageOrderManager: android.os.Handler getHandlerForContentObserver()>
<dalvik.system.BaseDexClassLoader: java.lang.Package getPackage(java.lang.String)>
<com.android.server.wm.WindowManagerService: void getVisibleWindowsForDisplay(int,java.util.List)>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
<android.server.search.SearchManagerService: android.content.ComponentName getAssistIntent(int)>
<android.net.DnsPinger: java.util.List getDnsList()>
<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>
<com.android.internal.textservice.ISpellCheckerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.server.pm.PackageManagerService$FileInstallArgs: boolean doRename(int,java.lang.String,java.lang.String)>
<java.lang.ClassLoader: java.net.URL findResource(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>
<com.android.internal.telephony.gsm.SmsCbHeader: int getDataCodingScheme()>
<android.net.wifi.WifiStateMachine: android.os.Messenger getMessenger()>
<com.android.server.am.ActivityManagerService: int getUidForIntentSender(android.content.IIntentSender)>
<android.net.Uri$HierarchicalUri: java.lang.String getPath()>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String,java.lang.String)>
<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()>
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.lang.String getCdmaEriText()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>
<android.telephony.CellSignalStrengthCdma: int getDbm()>
<android.net.BaseNetworkStateTracker: android.os.Handler getTargetHandler()>
<com.android.internal.telephony.gsm.GsmConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getReuseAddress()>
<com.android.internal.telephony.IccIoResult: java.lang.String toString()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()>
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>
<android.media.IAudioService$Stub$Proxy: boolean isStreamMute(int)>
<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiServiceMessenger()>
<com.android.internal.textservice.ISpellCheckerSession$Stub: android.os.IBinder asBinder()>
<android.app.LoadedApk$ServiceDispatcher: android.app.ServiceConnectionLeaked getLocation()>
<com.android.internal.telephony.gsm.SmsCbHeader: android.telephony.SmsCbCmasInfo getCmasInfo()>
<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getLanguage()>
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>
<com.android.emailcommon.service.EmailServiceProxy: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>
<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkInfo getActiveNetworkInfo()>
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)>
<android.net.TrafficStats: long getTotalTxPackets()>
<com.android.email.activity.RecentMailboxManager: com.android.email.activity.RecentMailboxManager getInstance(android.content.Context)>
<com.android.internal.telephony.OperatorInfo: java.lang.String getOperatorAlphaLong()>
<com.android.internal.telephony.cdma.CdmaConnection: long getDisconnectTime()>
<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)>
<com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>
<android.net.http.SslCertificate$DName: java.lang.String getOName()>
<org.apache.harmony.xml.dom.EntityReferenceImpl: short getNodeType()>
<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()>
<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)>
<android.telephony.CellInfo: int hashCode()>
<com.android.server.wm.WindowManagerService: int getPropertyInt(java.lang.String[],int,int,int,android.util.DisplayMetrics)>
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>
<com.android.internal.telephony.gsm.GsmConnection: long getDisconnectTime()>
<android.net.NetworkStatsHistory: long getEnd()>
<com.android.email.activity.RecentMailboxManager: com.android.emailcommon.utility.EmailAsyncTask touch(long,long)>
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo getRootAccessibilityNodeInfoInActiveWindow()>
<com.android.internal.telephony.AdnRecord: java.lang.String[] getEmails()>
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMapForRead(org.apache.harmony.xml.dom.NodeImpl)>
<org.apache.harmony.xml.ExpatParser$CurrentAttributes: int getParserPointer()>
<com.android.server.am.ActiveServices$ServiceMap: com.android.server.am.ServiceRecord getServiceByIntent(android.content.Intent$FilterComparison)>
<android.service.textservice.SpellCheckerService$InternalISpellCheckerSession: android.os.Bundle getBundle()>
<android.service.wallpaper.WallpaperService$Engine: android.view.SurfaceHolder getSurfaceHolder()>
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineDataStream: byte[] getData(int)>
<com.android.internal.telephony.DataConnection$FailCause: int getErrorCode()>
<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
<com.android.server.SerialService: java.lang.String[] getSerialPorts()>
<com.android.server.ConnectivityService: android.net.NetworkState[] getAllNetworkState()>
<android.speech.tts.TextToSpeechService$SpeechItem: float getPan()>
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>
<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()>
<android.service.wallpaper.WallpaperService$Engine: int getDesiredMinimumHeight()>
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getEntities()>
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getTrustManager()>
<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String)>
<android.telephony.ServiceState: int getNetworkId()>
<android.net.NetworkStatsHistory: int getIndexAfter(long)>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getLocalPrincipal()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>
<android.media.AudioService: int getVibrateSetting(int)>
<android.telephony.SignalStrength: int getEvdoEcio()>
<android.media.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(boolean,int)>
<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getOrigDialString()>
<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: java.lang.String toString()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPacketBufferSize()>
<android.net.ThrottleManager: long getCliffThreshold(java.lang.String,int)>
<android.app.LoadedApk$WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)>
<org.apache.harmony.xml.dom.DOMConfigurationImpl$13: int getLength()>
<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)>
<com.google.android.gsf.Gservices: java.lang.Object getVersionToken(android.content.ContentResolver)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoTimeout()>
<com.android.internal.telephony.ApnContext: java.lang.String getReason()>
<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>
<com.android.server.am.ActivityManagerService: int getLaunchedFromUid(android.os.IBinder)>
<com.android.internal.telephony.UUSInfo: int getType()>
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: int getViewTypeCount()>
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>
<com.android.internal.telephony.CallManager: java.lang.String toString()>
<com.android.server.am.ActivityManagerService: java.util.List getServices(int,int)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getRemoteSocketAddress()>
<android.net.Uri$AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()>
<com.android.server.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName,int)>
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getService(java.lang.String)>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listTtys()>
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>
<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpiLoaded: java.lang.String getEfName()>
<com.android.server.ThrottleService: int getThrottle(java.lang.String)>
<android.net.INetworkStatsSession$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.server.CountryDetectorService$Receiver: android.location.ICountryListener getListener()>
<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult saveNetwork(android.net.wifi.WifiConfiguration)>
<android.service.dreams.IDreamManager$Stub$Proxy: android.content.ComponentName[] getDreamComponents()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoTimeout()>
<android.net.Uri$OpaqueUri: java.lang.String getSchemeSpecificPart()>
<android.widget.RemoteViewsService: java.lang.Object access$000()>
<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()>
<android.net.http.RequestQueue$ActivePool: android.net.http.ConnectionThread getThread(org.apache.http.HttpHost)>
<android.net.LinkProperties: java.lang.String getInterfaceName()>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedQuery()>
<com.android.emailcommon.service.IEmailServiceCallback$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: java.lang.String getActionIntentDataStallAlarm()>
<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] getTrustManagers()>
<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)>
<android.net.NetworkStatsHistory: long getBucketDuration()>
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getPeerPrincipal()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Connection getFgCallLatestConnection()>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo markAsEmergency(android.content.Context)>
<android.net.ThrottleManager: long getPeriodStartTime(java.lang.String)>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>
<android.telephony.SmsMessage: int getStatusOnIcc()>
<android.os.INetworkManagementService$Stub$Proxy: int getInterfaceTxThrottle(java.lang.String)>
<com.android.exchange.ExchangeService: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager(boolean,int)>
<android.widget.RemoteViewsService: java.util.HashMap access$100()>
<com.android.server.display.DisplayManagerService: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<com.android.internal.telephony.test.SimulatedGsmCallState: java.util.List getClccLines()>
<org.apache.harmony.xml.ExpatParser$ClonedAttributes: int getParserPointer()>
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler getContentHandler()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.lang.BootClassLoader: java.lang.BootClassLoader getInstance()>
<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)>
<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)>
<com.android.server.MountService: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>
<com.android.internal.telephony.CallManager: java.util.List getForegroundCalls()>
<android.net.Uri$HierarchicalUri: java.lang.String getEncodedPath()>
<android.os.INetworkManagementService$Stub: android.os.IBinder asBinder()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: java.lang.String getAlias()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getLocalAddress()>
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getIMSI()>
<com.android.internal.telephony.cat.RilMessageDecoder: com.android.internal.telephony.cat.RilMessageDecoder getInstance(android.os.Handler,com.android.internal.telephony.IccFileHandler)>
<android.content.pm.RegisteredServicesCache: java.util.Collection getAllServices(int)>
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()>
<android.telephony.TelephonyManager: int getDataState()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ErrorHandler getErrorHandler()>
<com.android.internal.telephony.DataConnectionTracker: java.lang.String[] getActiveApnTypes()>
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()>
<com.android.server.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName,int)>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>
<android.net.http.Connection: org.apache.http.HttpHost getHost()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()>
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getVoiceMailAlphaTag()>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>
<com.android.internal.telephony.DataConnectionTracker: java.lang.String getActiveApnString(java.lang.String)>
<com.android.server.sip.SipService: android.net.sip.SipProfile[] getListOfProfiles()>
<com.android.internal.telephony.cdma.CdmaMmiCode: com.android.internal.telephony.MmiCode$State getState()>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()>
<android.telephony.SignalStrength: int getLteRsrq()>
<android.telephony.SignalStrength: int getLteRsrp()>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: byte[] getNpnSelectedProtocol()>
<android.net.IThrottleManager$Stub$Proxy: long getResetTime(java.lang.String)>
<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconMode(int,int)>
<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getScanResults()>
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: java.lang.Object getAttribute(java.lang.String)>
<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()>
<com.android.server.InputMethodManagerService$InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>
<android.net.http.Headers: java.lang.String getLastModified()>
<com.android.server.ThrottleService$DataRecorder: int getPeriodCount()>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>
<java.lang.ClassLoader: java.lang.Class defineClass(byte[],int,int)>
<com.android.internal.telephony.gsm.SIMRecords: java.lang.String getMsisdnAlphaTag()>
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>
<com.android.internal.telephony.sip.SipConnectionBase: com.android.internal.telephony.Connection$PostDialState getPostDialState()>
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()>
<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()>
<android.media.IMediaScannerService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.media.AudioService: int getStreamMaxVolume(int)>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetheringErroredIfaces()>
<com.android.server.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
<android.net.wifi.IWifiManager$Stub$Proxy: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
<android.net.LinkAddress: java.net.InetAddress getAddress()>
<android.net.nsd.DnsSdTxtRecord: byte[] access$000(android.net.nsd.DnsSdTxtRecord)>
<com.android.internal.telephony.IccCardProxy: com.android.internal.telephony.IccFileHandler getIccFileHandler()>
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.Menu getMenu()>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String[] getTetherableUsbRegexs()>
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getNodeName()>
<android.telephony.SignalStrength: int getEvdoLevel()>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedUserInfo()>
<android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)>
<com.android.internal.telephony.DataConnectionTracker: int disableApnType(java.lang.String)>
<java.lang.BootClassLoader: java.lang.Package getPackage(java.lang.String)>
<com.android.server.WifiService: java.util.List getConfiguredNetworks()>
<android.os.INetworkManagementService$Stub$Proxy: android.net.RouteInfo[] getRoutes(java.lang.String)>
<com.android.email.activity.MessageOrderManager: android.database.Cursor access$500(com.android.email.activity.MessageOrderManager)>
<android.content.IContentService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.internal.telephony.Call: long getEarliestCreateTime()>
<android.net.LinkProperties: java.util.Collection getLinkAddresses()>
<android.net.sip.SipAudioCall: android.net.sip.SipSession getSipSession()>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getMaxThroughput()>
<com.android.internal.telephony.gsm.GsmConnection: int getGSMIndex()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getKeepAlive()>
<android.net.LocalSocket: int getReceiveBufferSize()>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>
<android.telephony.CellInfo: int getTimeStampType()>
<com.android.server.MountService: int[] getStorageUsers(java.lang.String)>
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$CallSettings getCallSettings()>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<com.android.internal.telephony.cdma.EriManager: java.lang.String getCdmaEriText(int,int)>
<com.android.internal.app.IMediaContainerService$Stub$Proxy: long[] getFileSystemStats(java.lang.String)>
<com.android.internal.telephony.IccRecords: boolean getRecordsLoaded()>
<android.net.http.Headers: java.lang.String getLocation()>
<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToCodeScheme()>
<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String getAddressString()>
<android.net.NetworkPolicyManager: long computeLastCycleBoundary(long,android.net.NetworkPolicy)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.math.BigInteger getX()>
<com.android.internal.telephony.sip.SipConnectionBase: long getDisconnectTime()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateKey)>
<android.net.sip.SimpleSessionDescription: java.lang.String getAddress()>
<com.android.server.wm.WindowManagerService: int getOrientationFromAppTokensLocked()>
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<com.android.internal.telephony.ApnContext: com.android.internal.telephony.ApnSetting getApnSetting()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getWindowListLocked(android.view.Display)>
<com.android.server.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getCipherSuite()>
<org.apache.harmony.xml.dom.NodeImpl$1: java.lang.String getTypeNamespace()>
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>
<android.speech.tts.TextToSpeechService$SpeechItem: int getIntParam(java.lang.String,int)>
<android.net.SSLCertificateSocketFactory: byte[] toNpnProtocolsList(byte[][])>
<com.android.internal.os.IDropBoxManagerService$Stub: android.os.IBinder asBinder()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()>
<com.android.internal.telephony.cat.CatResponseMessage: com.android.internal.telephony.cat.CommandDetails getCmdDetails()>
<android.net.http.AndroidHttpClientConnection: int getLocalPort()>
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()>
<com.android.internal.telephony.DataConnectionTracker: int getRecoveryAction()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getPeerHost()>
<com.android.emailcommon.utility.SSLUtils: android.net.SSLCertificateSocketFactory getSSLSocketFactory(boolean,int)>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNodeNS(java.lang.String,java.lang.String)>
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.AppInterface$CommandType getCmdType()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getPeerPrincipal()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.InputStream getInputStream()>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>
<com.android.internal.telephony.UsimFileHandler: java.lang.String getEFPath(int)>
<android.media.IAudioService$Stub$Proxy: int getMasterMaxVolume()>
<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy: float findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<com.android.internal.telephony.cat.CatCmdMessage: com.android.internal.telephony.cat.CatCmdMessage$BrowserSettings getBrowserSettings()>
<android.media.IAudioService$Stub: android.os.IBinder asBinder()>
<com.android.phone.EmergencyCallbackModeService$LocalBinder: com.android.phone.EmergencyCallbackModeService getService()>
<android.app.LoadedApk$ServiceDispatcher: android.app.IServiceConnection getIServiceConnection()>
<android.net.http.Request: java.lang.String getUri()>
<android.net.http.Headers: java.lang.String getProxyAuthenticate()>
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getNodeName()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getReceiveBufferSize()>
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord getRecordForAppLocked(android.app.IApplicationThread)>
<com.android.internal.telephony.cat.DeviceIdentities: com.android.internal.telephony.cat.ComprehensionTlvTag getTag()>
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node insertChildAt(org.w3c.dom.Node,int)>
<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()>
<com.android.server.pm.UserManagerService: int getUserHandle(int)>
<org.apache.http.auth.AuthScope: java.lang.String getHost()>
<com.android.internal.telephony.UiccCard: com.android.internal.telephony.UiccCardApplication getApplicationIndex(int)>
<com.android.server.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName,int)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService$InstallArgs access$3000(com.android.server.pm.PackageManagerService,android.net.Uri,int,java.lang.String,java.lang.String)>
<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[],int,int,int)>
<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimDomainLoaded: java.lang.String getEfName()>
<com.android.server.am.ActivityManagerService: android.graphics.Bitmap getTaskTopThumbnail(int)>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)>
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getPort()>
<android.net.NetworkQuotaInfo: long getHardLimitBytes()>
<com.android.internal.telephony.gsm.GsmConnection: long getConnectTime()>
<android.telephony.CellInfoLte$1: android.telephony.CellInfoLte createFromParcel(android.os.Parcel)>
<android.telephony.ServiceState: int getNetworkType()>
<com.android.internal.telephony.WapPushOverSms$WapPushConnection: com.android.internal.telephony.IWapPushManager getWapPushManager()>
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getData()>
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedException()>
<com.android.server.pm.PackageManagerService: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()>
<android.net.Uri: android.net.Uri normalizeScheme()>
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
<com.android.server.NsdService: android.os.Messenger getMessenger()>
<com.android.server.InputMethodManagerService$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoTimeout()>
<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getLocalName(int)>
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeValue()>
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()>
<android.net.sip.SipManager: android.net.sip.SipAudioCall makeAudioCall(android.net.sip.SipProfile,android.net.sip.SipProfile,android.net.sip.SipAudioCall$Listener,int)>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getControlPort()>
<com.android.internal.telephony.CallManager: boolean getMute()>
<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>
<com.android.server.am.UsageStatsService: byte[] readFully(java.io.FileInputStream)>
<com.android.email.RefreshManager: java.util.Collection getListenersForTest()>
<android.service.textservice.SpellCheckerService$Session: android.os.Bundle getBundle()>
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
<com.android.server.WifiService: int getFrequencyBand()>
<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()>
<com.android.internal.telephony.cdma.RuimRecords$EfCsimMdnLoaded: java.lang.String getEfName()>
<android.view.textservice.TextInfo: java.lang.String getText()>
<com.android.internal.telephony.cdma.EriManager: int getEriNumberOfEntries()>
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>
<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)>
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getToken(int)>
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedCipherSuites()>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getApplicationBufferSize()>
<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<com.android.server.sip.SipService: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
<com.android.server.accessibility.AccessibilityManagerService: int getActiveWindowId()>
<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
<org.apache.harmony.xml.dom.NodeListImpl: int getLength()>
<com.android.server.ThrottleService$DataRecorder: long getPeriodStart()>
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getDataSize(int)>
<com.android.server.WallpaperManagerService: android.app.WallpaperInfo getWallpaperInfo()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedProtocols()>
<android.net.sip.ISipSession$Stub$Proxy: java.lang.String getLocalIp()>
<libcore.net.http.ResponseHeaders: java.lang.String getConnection()>
<com.android.server.MountService: java.lang.String getVolumeState(java.lang.String)>
<android.net.Uri$StringUri: java.util.List getPathSegments()>
<android.speech.tts.TextToSpeechService$SpeechItem: float getVolume()>
<com.android.internal.telephony.cat.ComprehensionTlv: byte[] getRawValue()>
<android.net.IThrottleManager$Stub$Proxy: java.lang.String getHelpUri()>
<org.apache.harmony.xml.dom.DocumentImpl: boolean getXmlStandalone()>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>
<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getTagName()>
<android.net.Uri$StringUri: java.lang.String getEncodedPath()>
<com.android.internal.telephony.IccRecords: com.android.internal.telephony.AdnRecordCache getAdnCache()>
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>
<com.android.internal.telephony.SmsUsageMonitor$ShortCodePatternMatcher: int getNumberCategory(java.lang.String)>
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$SuggestionsGatherer: com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$SuggestionsGatherer$Result getResults(int,java.util.Locale)>
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String getDeviceInfoHex()>
<android.net.http.HttpsConnection: java.lang.String getScheme()>
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState getPostDialState()>
<android.telephony.TelephonyManager: int getCallState()>
<com.android.internal.telephony.IWapPushManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.android.server.BackupManagerService: long getAvailableRestoreToken(java.lang.String)>
<com.android.internal.telephony.gsm.SmsCbHeader: int getPageIndex()>
<android.net.IConnectivityManager$Stub$Proxy: android.net.ProxyProperties getGlobalProxy()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()>
<com.android.exchange.ExchangeService$AccountObserver: java.lang.String getAccountKeyWhere()>
<com.android.internal.telephony.ims.IsimUiccRecords$EfIsimImpuLoaded: java.lang.String getEfName()>
<com.android.internal.textservice.ITextServicesManager$Stub: android.os.IBinder asBinder()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getLocalPort()>
<com.android.server.accessibility.AccessibilityManagerService: boolean getAccessibilityFocusBoundsInActiveWindow(android.graphics.Rect)>
<com.android.emailcommon.service.IEmailService$Stub$Proxy: android.os.Bundle autoDiscover(java.lang.String,java.lang.String)>
<android.net.TrafficStats: long getTotalTxBytes()>
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession getPendingSession(java.lang.String)>
<javax.net.ssl.SSLParameters: boolean getWantClientAuth()>
<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)>
<android.net.INetworkPolicyListener$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String getEncryptionMethod()>
<com.android.server.am.ActivityManagerService: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
<android.net.ConnectivityManager: int untether(java.lang.String)>
<android.telephony.CellIdentityLte: int getMcc()>
<com.android.internal.telephony.IccRecords: boolean getVoiceCallForwardingFlag()>
<android.net.INetworkStatsService$Stub$Proxy: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>
<android.net.Uri$AbstractPart: java.lang.String getDecoded()>
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getEnableSessionCreation()>
<android.net.NetworkIdentity: java.lang.String getNetworkId()>
<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfacePairs()>
<android.telephony.CellIdentityLte: int getMnc()>
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getParentNode()>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean,int,int)>
<android.net.http.Headers: java.lang.String getRefresh()>
<android.net.wifi.IWifiManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
<android.net.IThrottleManager$Stub$Proxy: int getThrottle(java.lang.String)>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>
<com.android.server.InputMethodManagerService$InputMethodAndSubtypeListManager: com.android.server.InputMethodManagerService$ImeSubtypeListItem getNextInputMethod(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<libcore.net.http.RequestHeaders: java.lang.String getConnection()>
<android.telephony.ServiceState: int getCdmaEriIconMode()>
<com.android.internal.telephony.Connection: java.lang.String getOrigDialString()>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLSession getSession()>
<android.speech.tts.TextToSpeechService$1: java.lang.String[] getLanguage()>
<android.telephony.NeighboringCellInfo: int getCid()>
<android.net.BaseNetworkStateTracker: android.net.NetworkInfo getNetworkInfo()>
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: javax.net.ssl.SSLSession getSession()>
<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()>
<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>
<com.android.internal.telephony.ITelephonyRegistry$Stub: android.os.IBinder asBinder()>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getLastAccessedTime()>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()>
<com.android.internal.telephony.gsm.SimTlv: byte[] getData()>
<com.android.server.am.ActivityManagerService: android.content.pm.ActivityInfo getActivityInfoForUser(android.content.pm.ActivityInfo,int)>
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.Runnable getDelegatedTask()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<android.net.wifi.WifiConfigStore: java.lang.String getConfigFile()>
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: short getNodeType()>
<com.android.internal.telephony.RetryManager: int getRetryCount()>
<com.android.exchange.ExchangeService: android.content.Context getContext()>
<android.speech.tts.ITextToSpeechService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<android.net.Uri$StringUri: java.lang.String getQuery()>
<com.android.internal.telephony.gsm.UsimServiceTable: java.lang.Object[] getValues()>
<android.telephony.SmsMessage: byte[] getUserData()>
<android.speech.tts.TextToSpeechService$1: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
<android.net.IConnectivityManager$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateCrtKey)>
<com.android.internal.telephony.cdma.EriManager: int getEriFileType()>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<android.net.http.Headers: java.lang.String getContentType()>
<android.net.Uri$StringUri: java.lang.String getFragment()>
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>
<android.net.Uri$HierarchicalUri: java.lang.String getFragment()>
<android.net.wifi.IWifiManager$Stub$Proxy: java.util.List getConfiguredNetworks()>
<android.telephony.CellIdentityLte: int getPci()>
<android.net.sip.SimpleSessionDescription$Media: java.lang.String[] getFormats()>
<android.net.Uri$OpaqueUri: java.lang.String getEncodedFragment()>
<com.android.internal.telephony.SmsMessageBase: int getStatusOnIcc()>
<android.app.LoadedApk$ServiceDispatcher: int getFlags()>
<com.android.internal.telephony.gsm.GsmConnection: long getCreateTime()>
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)>
<com.android.server.DevicePolicyManagerService: int getStorageEncryptionStatus(int)>
<android.speech.tts.ITextToSpeechService$Stub: android.os.IBinder asBinder()>
<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>
<com.android.emailcommon.service.AccountServiceProxy: int getAccountColor(long)>
<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri)>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>
<android.net.http.Headers: long getContentLength()>
<android.net.IConnectivityManager$Stub$Proxy: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
<com.android.internal.telephony.gsm.SIMRecords: boolean getVoiceCallForwardingFlag()>
<android.net.wifi.ScanResult$1: android.net.wifi.ScanResult createFromParcel(android.os.Parcel)>
<com.android.internal.telephony.cat.CommandParamsFactory: com.android.internal.telephony.cat.CommandParamsFactory getInstance(com.android.internal.telephony.cat.RilMessageDecoder,com.android.internal.telephony.IccFileHandler)>
<android.net.LocalSocket: int getSoTimeout()>
<com.android.server.ThrottleService: long getByteCount(java.lang.String,int,int,int)>
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: byte[] getId()>
<org.apache.harmony.xml.ExpatParser$ExpatLocator: int getLineNumber()>
<com.android.server.am.ActivityManagerService: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: byte[] getEncoded()>
<com.android.internal.telephony.cat.ComprehensionTlv: int getLength()>
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token getNextToken()>
<com.android.server.wm.WindowManagerService: float getAnimationScale(int)>
<android.inputmethodservice.ExtractEditLayout$ExtractActionMode: android.view.MenuInflater getMenuInflater()>
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getLocalSocketAddress()>
<android.net.NetworkInfo: java.lang.String getReason()>
<android.net.INetworkStatsService$Stub$Proxy: java.lang.String[] getMobileIfaces()>
<android.media.AudioService$AudioFocusDeathHandler: android.os.IBinder getBinder()>
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String encodeBody()>
<com.android.internal.telephony.IntRangeManager: boolean isEmpty()>
<android.net.Uri$HierarchicalUri: java.lang.String getAuthority()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,int)>
<com.android.server.TwilightService$TwilightState: long getYesterdaySunset()>
<com.android.internal.telephony.cdma.RuimRecords: java.lang.String getRUIMOperatorNumeric()>
<android.net.Proxy: java.lang.String getDefaultHost()>
<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNamespaceURI()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor getInputMonitor()>
<com.android.server.dreams.DreamManagerService: android.content.ComponentName getDefaultDreamComponent()>
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<com.android.server.MountService: android.os.storage.StorageVolume[] getVolumeList()>
<com.android.server.connectivity.Tethering: int[] getUpstreamIfaceTypes()>
<com.android.server.WifiService: java.util.List getScanResults()>
<android.os.INetworkManagementService$Stub$Proxy: java.lang.String[] listInterfaces()>
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getPrefix()>
<android.net.DummyDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()>
<android.telephony.CellIdentityGsm: android.telephony.CellIdentityGsm copy()>
<android.os.ServiceManagerNative: android.os.IBinder asBinder()>
<com.android.exchange.EasSyncService: android.os.Bundle tryAutodiscover(java.lang.String,java.lang.String)>
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()>
<android.telephony.CellIdentityLte: int getTac()>
<com.android.server.DevicePolicyManagerService: com.android.server.DevicePolicyManagerService$DevicePolicyData getUserData(int)>
<android.net.http.Headers: java.lang.String getExpires()>
<com.android.exchange.EasOutboxService$SendMailEntity: long getContentLength()>
<android.net.INetworkPolicyManager$Stub$Proxy: int[] getUidsWithPolicy(int)>
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()>
<android.telephony.TelephonyManager: int getLteOnCdmaMode()>
<android.net.sip.ISipService$Stub$Proxy: android.net.sip.ISipSession createSession(android.net.sip.SipProfile,android.net.sip.ISipSessionListener)>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<com.android.server.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName,int)>
<com.android.internal.telephony.IWapPushManager$Stub: com.android.internal.telephony.IWapPushManager asInterface(android.os.IBinder)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>
<com.android.exchange.EasSyncService: com.android.exchange.EasResponse sendHttpClientOptions()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
<com.android.internal.telephony.DataConnection: int getRetryCount()>
<android.net.NetworkTemplate: java.lang.String getNetworkId()>
<com.android.server.wm.WindowManagerService: int getOrientationFromWindowsLocked()>
<com.android.server.pm.PackageManagerService$FileInstallArgs: java.lang.String getResourcePath()>
<android.widget.RemoteViewsService$RemoteViewsFactoryAdapter: android.widget.RemoteViews getLoadingView()>
<com.android.internal.telephony.SmsAddress: java.lang.String getAddressString()>
<android.net.Uri$OpaqueUri: java.lang.String getUserInfo()>
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getTokenWindowsOnDisplay(com.android.server.wm.WindowToken,com.android.server.wm.DisplayContent)>
<com.android.server.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<com.android.internal.telephony.ISms$Stub: android.os.IBinder asBinder()>
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] getChangeCipherSpecMesage(org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)>
<android.net.http.Headers: java.lang.String getWwwAuthenticate()>
<com.android.server.NetworkManagementService: android.net.RouteInfo[] getRoutes(java.lang.String)>
<com.android.server.NetworkManagementService: int getInterfaceTxThrottle(java.lang.String)>
<javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()>