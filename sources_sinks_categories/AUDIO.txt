<android.media.IAudioService$Stub$Proxy: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>
<android.media.IAudioService$Stub$Proxy: void setRingtonePlayer(android.media.IRingtonePlayer)>
<android.media.AudioManager: void setRingerMode(int)>
<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>
<android.media.IAudioService$Stub$Proxy: void setBluetoothA2dpOn(boolean)>
<android.media.audiofx.AudioEffect: int setParameter(int[],int[])>
<android.media.AudioService$AudioHandler: void handleMessage(android.os.Message)>
<android.media.IAudioService$Stub$Proxy: void playSoundEffect(int)>
<android.media.IAudioService$Stub$Proxy: void unregisterAudioFocusClient(java.lang.String)>
<android.media.AudioManager: void setMasterVolume(int,int)>
<android.media.audiofx.AudioEffect: int setParameter(int,short)>
<android.media.AudioService: void setRemoteStreamVolume(int)>
<android.media.AudioTrack: int setPositionNotificationPeriod(int)>
<android.media.IAudioService$Stub$Proxy: void setStreamMute(int,boolean,android.os.IBinder)>
<android.media.audiofx.AudioEffect: byte[] intToByteArray(int)>
<android.media.AudioService: void setStreamVolume(int,int,int)>
<android.media.AudioService: void setRingerMode(int)>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>
<android.media.AudioManager: void setRouting(int,int,int)>
<android.media.AudioService: void setMasterMute(boolean,int,android.os.IBinder)>
<android.media.IAudioFocusDispatcher$Stub$Proxy: void dispatchAudioFocusChange(int,java.lang.String)>
<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<android.media.AudioService: void setVibrateSetting(int,int)>
<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)>
<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int,boolean)>
<android.media.IAudioService$Stub$Proxy: boolean shouldVibrate(int)>
<android.media.IAudioService$Stub$Proxy: void setStreamVolume(int,int,int)>
<android.media.AudioManager: void setMode(int)>
<android.media.AudioService: void setSpeakerphoneOn(boolean)>
<android.media.IAudioService$Stub$Proxy: void stopBluetoothSco(android.os.IBinder)>
<android.media.AudioService: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)>
<android.media.audiofx.AudioEffect: int setParameter(int[],byte[])>
<android.media.AudioManager: void setStreamMute(int,boolean)>
<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>
<android.media.AudioService: void setPlaybackInfoForRcc(int,int,int)>
<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)>
<android.media.IAudioService$Stub$Proxy: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)>
<android.media.AudioTrack: int setPlaybackRate(int)>
<android.media.IAudioService$Stub$Proxy: void setSpeakerphoneOn(boolean)>
<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder)>
<android.media.audiofx.AudioEffect: int setParameter(int[],short[])>
<android.media.IAudioService$Stub$Proxy: void setRemoteSubmixOn(boolean,int)>
<android.media.AudioManager: void setVibrateSetting(int,int)>
<android.media.audiofx.Virtualizer: void setProperties(android.media.audiofx.Virtualizer$Settings)>
<android.media.audiofx.AudioEffect: int setParameter(byte[],byte[])>
<android.media.IAudioService$Stub$Proxy: void setRingerMode(int)>
<android.media.IAudioService$Stub$Proxy: void setWiredDeviceConnectionState(int,int,java.lang.String)>
<android.media.IAudioService$Stub$Proxy: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>
<android.media.audiofx.Virtualizer: void setStrength(short)>
<android.media.AudioService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.media.IAudioService$Stub$Proxy: void setStreamSolo(int,boolean,android.os.IBinder)>
<android.media.audiofx.Equalizer: void setProperties(android.media.audiofx.Equalizer$Settings)>
<android.media.audiofx.AudioEffect: int setEnabled(boolean)>
<android.media.AudioManager: void setRemoteSubmixOn(boolean,int)>
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)>
<android.media.audiofx.Equalizer: void setBandLevel(short,short)>
<android.media.AudioTrack: int setStereoVolume(float,float)>
<android.media.AudioService: void adjustStreamVolume(int,int,int)>
<android.media.audiofx.BassBoost: void setStrength(short)>
<android.media.AudioService$VolumeStreamState: void setLastAudibleIndex(int,int)>
<android.media.AudioManager: void setParameters(java.lang.String)>
<android.media.IAudioService$Stub$Proxy: void setVibrateSetting(int,int)>
<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder)>
<android.media.audiofx.BassBoost: void setProperties(android.media.audiofx.BassBoost$Settings)>
<android.media.audiofx.PresetReverb: void setProperties(android.media.audiofx.PresetReverb$Settings)>
<android.media.AudioService: void setBluetoothScoOn(boolean)>
<android.media.IAudioService$Stub$Proxy: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<android.media.audiofx.AudioEffect: int setParameter(int,int)>
<android.media.AudioTrack: int setNotificationMarkerPosition(int)>
<android.media.IAudioService$Stub$Proxy: void adjustLocalOrRemoteStreamVolume(int,int)>
<android.media.AudioManager: void setMasterMute(boolean,int)>
<android.media.AudioManager: void setMasterMute(boolean)>
<android.media.IAudioService$Stub$Proxy: void adjustSuggestedStreamVolume(int,int,int)>
<android.media.IAudioService$Stub$Proxy: void adjustVolume(int,int)>
<android.media.AudioTrack: int setAuxEffectSendLevel(float)>
<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioService: void playSoundEffect(int)>
<android.media.AudioRecord: int setNotificationMarkerPosition(int)>
<android.media.AudioService: void setMasterVolume(int,int)>
<android.media.IAudioService$Stub$Proxy: void adjustMasterVolume(int,int)>
<android.media.AudioService: void setRemoteSubmixOn(boolean,int)>
<android.media.AudioService: void setMode(int,android.os.IBinder)>
<android.media.audiofx.AudioEffect: byte[] shortToByteArray(short)>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>
<android.media.AudioManager: void setMicrophoneMute(boolean)>
<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)>
<android.media.IAudioService$Stub$Proxy: void adjustStreamVolume(int,int,int)>
<android.media.AudioManager: void setStreamSolo(int,boolean)>
<android.media.IAudioService$Stub$Proxy: void setPlaybackInfoForRcc(int,int,int)>
<android.media.AudioManager: void setStreamVolume(int,int,int)>
<android.media.audiofx.AudioEffect: int setParameter(int,byte[])>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>
<android.media.IAudioService$Stub$Proxy: void setRemoteStreamVolume(int)>
<android.media.IAudioService$Stub$Proxy: void forceVolumeControlStream(int,android.os.IBinder)>
<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>
<android.media.IAudioService$Stub$Proxy: void setMasterVolume(int,int)>
<android.media.AudioRecord: int setPositionNotificationPeriod(int)>
<android.media.IAudioService$Stub$Proxy: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>
<android.media.AudioService: void playSoundEffectVolume(int,float)>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>
<android.media.IAudioService$Stub$Proxy: void registerRemoteVolumeObserverForRcc(int,android.media.IRemoteVolumeObserver)>
<android.media.IAudioService$Stub$Proxy: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
<android.media.audiofx.PresetReverb: void setPreset(short)>
<android.media.IAudioService$Stub$Proxy: void setMasterMute(boolean,int,android.os.IBinder)>
<android.media.IAudioService$Stub$Proxy: void playSoundEffectVolume(int,float)>
<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)>
<android.media.IAudioService$Stub$Proxy: void setBluetoothScoOn(boolean)>
<android.media.AudioService$VolumeStreamState: void setAllIndexes(android.media.AudioService$VolumeStreamState,boolean)>