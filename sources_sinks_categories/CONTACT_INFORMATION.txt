<com.android.contacts.util.StreamItemEntry: long getId()>
<com.android.contacts.model.account.AccountType: java.lang.String getViewGroupActivity()>
<com.android.contacts.widget.IndexerListAdapter: int getPinnedHeaderCount()>
<com.android.contacts.widget.IndexerListAdapter: int getPositionForSection(int)>
<com.android.contacts.model.account.BaseAccountType$NicknameKindBuilder: java.lang.String getTagName()>
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.dataitem.DataKind getKindOrFallback(java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.ContactPresenceIconUtil: android.graphics.drawable.Drawable getPresenceIcon(android.content.Context,int)>
<com.android.vcard.VCardUtils: java.lang.String getPropertyNameForIm(int)>
<com.android.contacts.activities.ActionBarAdapter: int getCurrentTab()>
<com.android.contacts.model.account.BaseAccountType$NameKindBuilder: java.lang.String getTagName()>
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)>
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getResourceText(android.content.Context,java.lang.String,int,java.lang.String)>
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getEditContactActivityClassName()>
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.util.ExpirableCache: com.android.contacts.util.ExpirableCache$CachedValue getCachedValue(java.lang.Object)>
<com.android.contacts.editor.EventFieldEditorView: android.app.Dialog createDialog(android.os.Bundle)>
<com.android.contacts.list.ContactEntryListAdapter: int getViewTypeCount()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticGivenName()>
<com.android.contacts.detail.StreamItemAdapter: java.lang.Object getItem(int)>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDeltaList fromQuery(android.net.Uri,android.content.ContentResolver,java.lang.String,java.lang.String[],java.lang.String)>
<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>
<com.android.contacts.model.Contact: java.util.ArrayList getContentValues()>
<com.android.contacts.preference.ContactsPreferences: int getDefaultDisplayOrder()>
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDelta getByRawContactId(java.lang.Long)>
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String toString()>
<com.android.contacts.interactions.ContactDeletionInteraction: android.app.LoaderManager getLoaderManager()>
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.dataitem.DataKind getKind()>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeId(java.lang.String)>
<com.android.contacts.model.dataitem.StructuredPostalDataItem: java.lang.String getFormattedAddress()>
<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getCallDetailIntentProvider(com.android.contacts.calllog.CallLogAdapter,int,long,int)>
<com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase: java.util.Iterator getNameLookupKeys(java.lang.String)>
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.model.account.AccountWithDataSet getCreatedAccount(int,android.content.Intent)>
<com.android.contacts.interactions.TestLoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>
<com.android.contacts.list.ContactsRequest: java.lang.CharSequence getActivityTitle()>
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: int getCount()>
<com.android.contacts.model.account.AccountType: com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeAndDataSet()>
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: int getViewTypeCount()>
<com.android.contacts.model.account.AccountTypeWithDataSet: com.android.contacts.model.account.AccountTypeWithDataSet get(java.lang.String,java.lang.String)>
<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getPlayVoicemailIntentProvider(long,java.lang.String)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticMiddleName()>
<com.android.contacts.model.RawContact: com.android.contacts.model.account.AccountType getAccountType()>
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getStreamItems()>
<com.android.contacts.editor.GroupMembershipView$GroupSelectionItem: long getGroupId()>
<com.android.contacts.ContactsUtils: android.content.Intent getInvitableIntent(com.android.contacts.model.account.AccountType,android.net.Uri)>
<com.android.contacts.list.ContactListFilterController: com.android.contacts.list.ContactListFilterController getInstance(android.content.Context)>
<com.android.contacts.list.ContactTileListFragment$2: int getApproximateTileWidth()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getAsString(java.lang.String)>
<com.android.contacts.editor.PhotoActionPopup$ChoiceListItem: int getId()>
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.CharSequence getTypeLabel(android.content.res.Resources,java.lang.Integer,java.lang.CharSequence)>
<com.android.contacts.model.account.GoogleAccountType: java.lang.String getViewContactNotifyServicePackageName()>
<com.android.contacts.ContactsApplication: java.lang.Object getSystemService(java.lang.String)>
<com.android.providers.contacts.ProfileDatabaseHelper: com.android.providers.contacts.ProfileDatabaseHelper getInstance(android.content.Context)>
<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.SpecialCharSequenceMgr$SimContactQueryCookie: android.widget.EditText getTextField()>
<com.android.contacts.model.account.BaseAccountType$RelationActionInflater: int getTypeLabelResource(java.lang.Integer)>
<com.android.contacts.list.ContactEntryListAdapter: int getContactNameDisplayOrder()>
<com.android.contacts.list.ContactTileAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.account.AccountType getRawContactAccountType(android.content.Context)>
<com.android.contacts.detail.ContactDetailDisplayUtils: android.view.View addStreamItemText(android.content.Context,com.android.contacts.util.StreamItemEntry,android.view.View)>
<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.list.ContactListFilter getFilter()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context)>
<com.android.contacts.model.dataitem.PhotoDataItem: byte[] getPhoto()>
<com.android.providers.contacts.ProfileDatabaseHelper: com.android.providers.contacts.ProfileDatabaseHelper getNewInstanceForTest(android.content.Context)>
<com.android.contacts.model.account.BaseAccountType$PhoneKindBuilder: java.lang.String getTagName()>
<com.android.providers.contacts.PhotoProcessor: byte[] getThumbnailPhotoBytes()>
<com.android.providers.contacts.ReorderingCursorWrapper: int getInt(int)>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getSectionForPosition(int)>
<com.android.vcard.VCardUtils: java.lang.String getPhoneTypeString(java.lang.Integer)>
<com.android.contacts.util.StreamItemEntry: java.lang.String getDataSet()>
<com.android.providers.contacts.VoicemailContentProvider$UriData: com.android.providers.contacts.VoicemailUriType getUriType()>
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
<com.android.contacts.calllog.CallDetailHistoryAdapter: int getViewTypeCount()>
<com.android.providers.contacts.PhotoProcessor: byte[] getDisplayPhotoBytes()>
<com.android.contacts.list.ContactEntryListFragment: android.widget.ListView getListView()>
<com.android.contacts.list.ContactEntryListFragment: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.contacts.dialog.ClearFrequentsDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore: int getScore()>
<com.android.contacts.model.RawContactDelta: java.lang.String getAccountName()>
<com.android.providers.contacts.AbstractContactsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getMimetype()>
<com.android.contacts.interactions.ImportExportDialogFragment$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.detail.ContactDetailLayoutController: com.android.contacts.activities.ContactDetailActivity$FragmentKeyListener getCurrentPage()>
<com.android.contacts.list.ContactListItemView: android.widget.TextView getNameTextView()>
<com.android.providers.contacts.aggregation.util.ContactMatcher$MatchScore: long getContactId()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context)>
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getCompany(android.content.Context,com.android.contacts.model.Contact)>
<com.android.contacts.list.ContactListItemView: android.widget.TextView getDataView()>
<com.android.phone.ContactsAsyncHelper$ImageTracker: int getPhotoState()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context)>
<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getAccounts(boolean)>
<com.android.contacts.quickcontact.ResolveCache: java.lang.CharSequence getDescription(com.android.contacts.quickcontact.Action)>
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String getLabelColumn()>
<com.android.contacts.group.GroupListItem: java.lang.String getAccountName()>
<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getEqualityClause(java.lang.String,java.lang.String)>
<com.android.providers.contacts.ContactDirectoryManager: com.android.providers.contacts.ContactsDatabaseHelper getDbHelper()>
<com.android.vcard.VCardEntry: java.lang.String getDisplayName()>
<com.android.contacts.list.DirectoryPartition: java.lang.String getDirectoryType()>
<com.android.contacts.calllog.CallTypeIconsView: int getCount()>
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.account.AccountType$EditType getType()>
<com.android.contacts.util.StructuredPostalUtils: android.net.Uri getPostalAddressUri(java.lang.String)>
<com.android.contacts.model.RawContact: java.util.List getDataItems()>
<com.android.providers.contacts.ContactsProvider2: int getMaxDisplayPhotoDim()>
<com.android.contacts.ContactsApplication: android.content.ContentResolver getContentResolver()>
<com.android.contacts.interactions.PhoneNumberInteraction: android.content.CursorLoader getLoader()>
<com.android.contacts.interactions.GroupDeletionDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.providers.contacts.ContactsDatabaseHelper: boolean getUseStrictPhoneNumberComparisonForTest()>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList getContactList()>
<com.android.contacts.list.ContactListAdapter: int getSelectedContactPosition()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneNumber()>
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
<com.android.contacts.util.StopWatch: com.android.contacts.util.StopWatch getNullStopWatch()>
<com.android.contacts.model.account.BaseAccountType$PostalActionInflater: int getTypeLabelResource(java.lang.Integer)>
<com.android.mms.data.Contact: byte[] access$1700(com.android.mms.data.Contact)>
<com.android.providers.contacts.ContactsProvider2: java.lang.ThreadLocal getTransactionHolder()>
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.RawContactDelta$ValuesDelta getValues()>
<com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag: android.net.Uri getStreamItemPhotoUri()>
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getPhoneticName(android.content.Context,com.android.contacts.model.Contact)>
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager createAccountTypeManager(android.content.Context)>
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccSmsInterfaceManager getIccSmsInterfaceManager()>
<com.android.contacts.util.StreamItemEntry: java.lang.CharSequence getDecodedText()>
<com.android.contacts.model.account.GoogleAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)>
<com.android.contacts.util.AccountsListAdapter: int getCount()>
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(android.net.Uri)>
<com.android.contacts.quickcontact.QuickContactListFragment$1: long getItemId(int)>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context)>
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: int getLimit()>
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: com.android.contacts.model.account.AccountType getItem(int)>
<com.android.internal.telephony.PhoneProxy: boolean getIccRecordsLoaded()>
<com.android.contacts.list.ContactListItemView: android.widget.TextView getPhoneticNameTextView()>
<com.android.contacts.voicemail.VoicemailStatusHelperImpl: int getNumberActivityVoicemailSources(android.database.Cursor)>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredName(android.content.Context)>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: java.lang.Object[] getSections()>
<com.android.contacts.model.Contact: int getDirectoryExportSupport()>
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.model.Contact: int getDisplayNameSource()>
<com.android.contacts.list.ContactEntryListFragment: android.view.View getView()>
<com.android.mms.data.Contact: com.android.mms.data.Contact get(java.lang.String,boolean)>
<com.android.contacts.model.RawContactDelta: java.lang.Long getRawContactId()>
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: java.lang.Object getItem(int)>
<com.android.contacts.detail.ContactDetailFragment: android.content.Context getContext()>
<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<com.android.contacts.calllog.CallLogFragment: com.android.contacts.calllog.CallLogAdapter getAdapter()>
<com.android.contacts.model.RawContactDeltaList: java.lang.Long getRawContactId(int)>
<com.android.contacts.model.Contact: long getFirstWritableRawContactId(android.content.Context)>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindWebsite(android.content.Context)>
<com.android.contacts.list.EmailAddressListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.contacts.model.account.AccountType: com.android.contacts.model.dataitem.DataKind getKindForMimetype(java.lang.String)>
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getDisplayLabel(android.content.Context)>
<com.android.contacts.list.ContactBrowseListFragment: android.net.Uri getSelectedContactUri()>
<com.android.contacts.ContactStatusUtil: java.lang.String getStatusString(android.content.Context,int)>
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getSuperPrimaryEntry(java.lang.String,boolean)>
<com.android.contacts.group.GroupBrowseListAdapter: android.net.Uri getSelectedGroup()>
<com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry: java.lang.CharSequence getLabel()>
<com.android.providers.contacts.DefaultCallLogInsertionHelper: java.lang.String getGeocodedLocationFor(java.lang.String,java.lang.String)>
<com.android.contacts.widget.PinnedHeaderListView: float getTopFadingEdgeStrength()>
<com.android.contacts.model.RawContactDelta: java.util.ArrayList getContentValues()>
<com.android.contacts.model.Contact: java.lang.String getDirectoryAccountName()>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context)>
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: java.lang.Object getItem(int)>
<com.android.contacts.activities.ActionBarAdapter: java.lang.String getQueryString()>
<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getGroupWritableAccounts()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: int getPhoneType()>
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact get(java.lang.String,boolean)>
<com.android.contacts.list.ContactEntryListAdapter: android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup)>
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>
<com.android.contacts.list.ContactListAdapter: long getSelectedContactId()>
<com.android.contacts.calllog.PhoneNumberHelper: java.lang.CharSequence getDisplayNumber(java.lang.CharSequence,java.lang.CharSequence)>
<com.android.contacts.list.ContactEntryListAdapter: android.view.View createPinnedSectionHeaderView(android.content.Context,android.view.ViewGroup)>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForSip()>
<com.android.vcard.VCardComposer: java.lang.String createOneEntry(java.lang.reflect.Method)>
<com.android.contacts.list.ContactListAdapter: android.net.Uri getFirstContactUri()>
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchSuggestionsQuery(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String)>
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.ContactDirectoryManager getContactDirectoryManagerForTest()>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)>
<com.android.contacts.model.Contact: java.lang.Exception getException()>
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: com.android.contacts.detail.ContactDetailFragment$ViewEntry getItem(int)>
<com.android.contacts.model.account.BaseAccountType$EmailActionInflater: int getTypeLabelResource(java.lang.Integer)>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context)>
<com.android.contacts.calllog.CallTypeHelper: java.lang.CharSequence getCallTypeText(int)>
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getInvitableAccountTypes()>
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getUseStrictPhoneNumberComparisonParameter()>
<com.android.contacts.list.ContactEntryListFragment: com.android.contacts.widget.ContextMenuAdapter getContextMenuAdapter()>
<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: android.app.Fragment getItem(int)>
<com.android.contacts.model.account.BaseAccountType$WebsiteKindBuilder: java.lang.String getTagName()>
<com.android.contacts.model.AccountTypeManagerImpl$InvitableAccountTypeCache: java.util.Map getCachedValue()>
<com.android.contacts.editor.ViewIdGenerator: int getId(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,int)>
<com.android.contacts.util.StreamItemEntry: java.lang.String getLabelRes()>
<com.android.vcard.VCardEntry$WebsiteData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$ActivityReference: android.app.Activity get()>
<com.android.contacts.list.ContactListFilterControllerImpl: com.android.contacts.list.ContactListFilter getFilter()>
<com.android.contacts.group.GroupEditorFragment$Member: java.lang.String getDisplayName()>
<com.android.contacts.ContactsUtils: android.net.Uri getCallUri(java.lang.String)>
<com.android.contacts.util.BitmapUtil: int getSmallerExtentFromBytes(byte[])>
<android.provider.Contacts$Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<com.android.mms.data.Contact$ContactsCache: java.util.List getContactInfoForPhoneUris(android.os.Parcelable[])>
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone()>
<com.android.contacts.detail.ContactDetailDisplayUtils: android.text.Html$ImageGetter getImageGetter(android.content.Context)>
<com.android.contacts.model.RawContact: com.android.contacts.model.RawContact$NamedDataItem addNamedDataItemValues(android.net.Uri,android.content.ContentValues)>
<com.android.providers.contacts.util.Clock: com.android.providers.contacts.util.Clock getInstance()>
<com.android.contacts.GroupMetaData: long getGroupId()>
<com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils: java.util.Iterator getNameLookupKeys(java.lang.String)>
<com.android.contacts.ContactsActivity: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.android.contacts.list.ContactListItemView: android.widget.TextView getLabelView()>
<com.android.contacts.quickcontact.QuickContactListFragment$1: int getCount()>
<com.android.providers.contacts.ContactLocaleUtils: java.util.Iterator getNameLookupKeys(java.lang.String,int)>
<com.android.vcard.VCardParserImpl_V21: java.lang.String getVersionString()>
<com.android.providers.contacts.ContactsProvider2: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)>
<com.android.vcard.VCardParserImpl_V30: java.lang.String getVersionString()>
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewStreamItemActivity()>
<com.android.contacts.calllog.CallLogListItemViews: com.android.contacts.calllog.CallLogListItemViews createForTest(android.content.Context)>
<com.android.vcard.VCardParserImpl_V40: java.lang.String getVersionString()>
<com.android.contacts.model.Contact: java.lang.String getLookupKey()>
<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.ContactPhotoManager getPhotoLoader()>
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String,java.lang.String)>
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: byte[] getPhotoByteArray()>
<com.android.contacts.model.dataitem.ImDataItem: java.lang.Integer getProtocol()>
<com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder: java.lang.String getSelection()>
<com.android.providers.contacts.PhotoStore: long getTotalSize()>
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getProperty(java.lang.String,java.lang.String)>
<com.android.contacts.list.ContactListAdapter: java.lang.String[] getProjection(boolean)>
<com.android.providers.contacts.ReorderingCursorWrapper: double getDouble(int)>
<com.android.contacts.util.AccountsListAdapter: long getItemId(int)>
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.AccountTypeManager)>
<com.android.contacts.list.PhoneFavoriteFragment$ContactTileAdapterListener: int getApproximateTileWidth()>
<com.android.mms.data.Contact: com.android.mms.data.Contact getMe(boolean)>
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.contacts.model.RawContact: android.content.ContentValues getValues()>
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.AccountTypeManager getAccountTypeManager()>
<com.android.contacts.ContactsApplication: com.android.contacts.test.InjectedServices getInjectedServices()>
<com.android.contacts.model.RawContactDelta: java.lang.String getDataSet()>
<com.android.contacts.widget.IndexerListAdapter: com.android.contacts.widget.IndexerListAdapter$Placement getItemPlacementInSection(int)>
<com.android.contacts.ContactsUtils: java.lang.String getCurrentCountryIso(android.content.Context)>
<com.android.providers.contacts.AbstractContactsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
<com.android.vcard.VCardProperty: byte[] getByteValue()>
<com.android.vcard.VCardParserImpl_V30: java.lang.String getBase64(java.lang.String)>
<com.android.providers.contacts.ProfileProvider: java.lang.ThreadLocal getTransactionHolder()>
<com.android.vcard.VCardParserImpl_V21: java.lang.String getBase64(java.lang.String)>
<com.android.contacts.util.StreamItemEntry: java.lang.CharSequence getDecodedComments()>
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDeltaList fromIterator(java.util.Iterator)>
<com.android.providers.contacts.VoicemailStatusTable: java.lang.String getType(com.android.providers.contacts.VoicemailContentProvider$UriData)>
<com.android.contacts.model.account.GoogleAccountType: java.util.List getExtensionPackageNames()>
<com.android.vcard.VCardSourceDetector: java.lang.String getEstimatedCharset()>
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getDataUri(int)>
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(java.lang.String)>
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor buildSingleRowResult(java.lang.String[],java.lang.String[],java.lang.Object[])>
<com.android.contacts.model.Contact: boolean getStarred()>
<com.android.contacts.detail.StreamItemAdapter: int getItemViewType(int)>
<com.android.contacts.list.ContactEntryListFragment: com.android.contacts.list.ContactEntryListAdapter getAdapter()>
<com.android.contacts.detail.ContactDetailFragment$KindTitleViewEntry: java.lang.String getTitle()>
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.editor.ContactEditorUtils getInstance(android.content.Context)>
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getPhoneUri(int)>
<com.android.contacts.group.GroupBrowseListAdapter$GroupListItemViewCache: android.net.Uri getUri()>
<com.android.providers.contacts.aggregation.ContactAggregator: android.database.Cursor queryAggregationSuggestions(android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],long,int,java.lang.String,java.util.ArrayList)>
<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList getContactParms()>
<com.android.contacts.detail.ContactDetailViewPagerAdapter: int getCount()>
<com.android.contacts.widget.PinnedHeaderListView: int getPinnedHeaderHeight(int)>
<com.android.contacts.model.Contact: java.lang.String getDirectoryType()>
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoPriorityResolver createPhotoPriorityResolver(android.content.Context)>
<com.android.contacts.widget.PinnedHeaderListView: int getTotalTopPinnedHeaderHeight()>
<gov.nist.javax.sip.header.Contact: java.lang.String getTempGruuParam()>
<com.android.contacts.group.SuggestedMemberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.providers.contacts.aggregation.util.CommonNicknameCache: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getViewTypeCount()>
<com.android.contacts.model.account.BaseAccountType$ImActionInflater: int getTypeLabelResource(java.lang.Integer)>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: long getChildId(int,int)>
<com.android.contacts.quickcontact.DataAction: java.lang.CharSequence getBody()>
<com.android.contacts.util.StreamItemEntry: java.util.List getPhotos()>
<com.android.contacts.model.account.BaseAccountType$PhotoKindBuilder: java.lang.String getTagName()>
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager getInstance(android.content.Context)>
<com.android.contacts.editor.ContactEditorUtils: java.lang.String[] getWritableAccountTypeStrings()>
<com.android.contacts.model.account.BaseAccountType$StructuredPostalKindBuilder: java.lang.String getTagName()>
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getWidePaddingLeft()>
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getTitle()>
<com.android.providers.contacts.ProfileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.vcard.VCardParserImpl_V21: java.lang.String getNonEmptyLine()>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: java.lang.Object getGroup(int)>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEvent(android.content.Context)>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: long getGroupId(int)>
<com.android.contacts.detail.ContactDetailViewPagerAdapter: int getItemPosition(java.lang.Object)>
<com.android.vcard.VCardParserImpl_V30: java.lang.String getNonEmptyLine()>
<com.android.contacts.list.ContactEntryListFragment: int getContactNameDisplayOrder()>
<com.android.providers.contacts.ContactsDatabaseHelper: com.android.providers.contacts.ContactsDatabaseHelper getNewInstanceForTest(android.content.Context)>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForEmail()>
<com.android.contacts.datepicker.DatePicker$SavedState: int getMonth()>
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.dataitem.DataKind getKindOrFallback(java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.model.ContactLoader: com.android.contacts.model.Contact loadInBackground()>
<com.android.contacts.vcard.ExportProcessor: com.android.contacts.vcard.ExportRequest getRequest()>
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)>
<com.android.contacts.interactions.TestLoaderManager: android.content.Loader getLoader(int)>
<com.android.providers.contacts.ContactsProvider2: java.lang.String getQueryParameter(android.net.Uri,java.lang.String)>
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.account.AccountType getAccountType(com.android.contacts.model.account.AccountTypeWithDataSet)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getAsLong(java.lang.String)>
<com.android.contacts.interactions.GroupCreationDialogFragment: int getTitleResourceId()>
<com.android.providers.contacts.AccountWithDataSet: java.lang.String getAccountType()>
<com.android.contacts.model.account.AccountType: java.lang.String getEditContactActivityClassName()>
<com.android.contacts.editor.SelectAccountDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.util.ExpirableCache$GenerationalCachedValue: java.lang.Object getValue()>
<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: com.android.exchange.adapter.ContactsSyncAdapter$RowBuilder createBuilder(android.content.Entity,java.lang.String,int,java.lang.String)>
<com.android.contacts.group.GroupListItem: long getGroupId()>
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<com.android.contacts.quickcontact.QuickContactActivity$ViewPagerAdapter: android.app.Fragment getItem(int)>
<com.android.providers.contacts.DataRowHandler: android.content.ContentValues getAugmentedValues(android.database.sqlite.SQLiteDatabase,long,android.content.ContentValues)>
<com.android.providers.contacts.PhotoPriorityResolver: int getPhotoPriority(java.lang.String)>
<com.android.vcard.VCardEntry$PostalData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getEmailLabel()>
<com.android.providers.contacts.DataRowHandlerForPhoneNumber: int getTypeRank(int)>
<com.android.providers.contacts.VoicemailContentProvider$UriData: java.lang.String getSourcePackage()>
<com.android.contacts.list.DefaultContactBrowseListFragment: com.android.contacts.list.ContactEntryListAdapter createListAdapter()>
<com.android.contacts.quickcontact.DataAction: android.content.Intent getIntent()>
<com.android.providers.contacts.AbstractContactsProvider: com.android.providers.contacts.ContactsTransaction getCurrentTransaction()>
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getRawContacts()>
<com.android.contacts.ContactsApplication: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getName()>
<com.android.vcard.VCardConfig: int getNameOrderType(int)>
<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByIds(java.lang.String,boolean)>
<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getDataUri(int)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: byte[] getAsByteArray(java.lang.String)>
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()>
<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
<com.android.contacts.quickcontact.QuickContactListFragment$1: java.lang.Object getItem(int)>
<com.android.contacts.quickcontact.QuickContactListFragment$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.providers.contacts.NameSplitter: int getAdjustedFullNameStyle(int)>
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindSipAddress(android.content.Context)>
<com.android.contacts.detail.ContactDetailFragment: android.net.Uri getUri()>
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>
<com.android.providers.contacts.ContactsDatabaseHelper: long getOrCreateAccountIdInTransaction(com.android.providers.contacts.AccountWithDataSet)>
<com.android.contacts.group.GroupEditorFragment$Member: long getContactId()>
<com.android.contacts.model.Contact: android.net.Uri getLookupUri()>
<com.android.contacts.calllog.CallDetailHistoryAdapter: java.lang.Object getItem(int)>
<com.android.providers.contacts.VoicemailContentProvider$UriData: android.net.Uri getUri()>
<com.android.providers.contacts.CallLogProvider: com.android.providers.contacts.ContactsDatabaseHelper getDatabaseHelper(android.content.Context)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getGroupRowId()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context)>
<com.android.contacts.detail.ContactDetailTabCarousel: float getStoredYCoordinateForTab(int)>
<com.android.mms.ui.QuickContactDivot: float getCloseOffset()>
<com.android.providers.contacts.DataRowHandlerForOrganization: int getTypeRank(int)>
<com.android.phone.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri()>
<com.android.providers.contacts.MemoryCursor: int getCount()>
<com.android.contacts.list.ContactListFilter: com.android.contacts.list.ContactListFilter restoreDefaultPreferences(android.content.SharedPreferences)>
<com.android.contacts.list.ContactTileAdapter: int getCount()>
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getViewGroupLabel(android.content.Context)>
<com.android.contacts.model.Contact: byte[] getPhotoBinaryData()>
<com.android.providers.contacts.util.MemoryUtils: long getTotalMemorySize()>
<com.android.providers.contacts.VoicemailStatusTable: android.database.Cursor query(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.mms.data.Contact: byte[] access$1702(com.android.mms.data.Contact,byte[])>
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.activities.DialtactsActivity$PageChangeListener: int getCurrentPosition()>
<com.android.contacts.group.GroupDetailDisplayUtils: android.view.View getNewGroupSourceView(android.content.Context)>
<com.android.vcard.VCardEntry$PostalData: java.lang.String getFormattedAddress(int)>
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: int[] getAdnRecordsSize(int)>
<com.android.contacts.activities.ShowOrCreateActivity: android.app.Dialog onCreateDialog(int)>
<com.android.contacts.list.ContactTileAdapter: int getColumnCount()>
<com.android.providers.contacts.ReorderingCursorWrapper: int getCount()>
<com.android.contacts.socialwidget.SocialWidgetSettings: android.net.Uri getContactUri(android.content.Context,int)>
<com.android.contacts.editor.RawContactReadOnlyEditorView: long getRawContactId()>
<com.android.contacts.calllog.ExtendedCursor: long getLong(int)>
<com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.model.account.ExternalAccountType: int getInviteContactActionResId()>
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener)>
<com.android.contacts.list.ContactsRequest: android.content.Intent getRedirectIntent()>
<com.android.providers.contacts.FastScrollingIndexCache: android.os.Bundle get(android.net.Uri,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
<com.android.contacts.list.ContactsRequest: android.net.Uri getContactUri()>
<com.android.contacts.editor.ContactEditorFragment: long getContactId()>
<com.android.mms.data.Contact: java.lang.String getName()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: byte[] getPhoto()>
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
<com.android.providers.contacts.VoicemailContentProvider: java.lang.String getType(android.net.Uri)>
<com.android.contacts.list.ContactEntryListFragment: int getDirectorySearchMode()>
<com.android.email.activity.setup.SetupData: android.accounts.AccountAuthenticatorResponse getAccountAuthenticatorResponse()>
<com.android.contacts.calllog.ExtendedCursor: float getFloat(int)>
<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: int getItemViewType(int)>
<com.android.contacts.calllog.CallTypeIconsView: int getCallType(int)>
<com.android.contacts.util.LocalizedNameResolver: java.lang.String getAllContactsName(android.content.Context,java.lang.String)>
<com.android.contacts.model.RawContact: android.content.Context getContext()>
<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getNumber()>
<com.android.contacts.model.Contact: long getPhotoId()>
<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getInequalityClause(java.lang.String,long)>
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int)>
<com.android.contacts.vcard.ImportVCardActivity$VCardFile: java.lang.String getCanonicalPath()>
<com.android.contacts.group.GroupDetailFragment$1: int getApproximateTileWidth()>
<com.android.contacts.util.AccountSelectionUtil$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.activities.DialtactsActivity: android.content.Intent getCallSettingsIntent()>
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener getListener()>
<com.android.contacts.list.ContactListItemView: android.widget.QuickContactBadge getQuickContact()>
<com.android.contacts.calllog.CallTypeHelper: java.lang.Integer getHighlightedColor(int)>
<com.android.contacts.ContactsUtils: android.content.Intent getVoicemailIntent()>
<com.android.providers.contacts.SearchIndexManager: java.lang.String getFtsMatchQuery(java.lang.String,com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder)>
<com.android.contacts.list.ContactEntryListAdapter: char[] getUpperCaseQueryString()>
<com.android.contacts.model.Contact: android.net.Uri getRequestedUri()>
<com.android.providers.contacts.TransactionContext: java.util.Set getDirtyRawContactIds()>
<com.android.contacts.quickcontact.DataAction: java.lang.String getAlternateIconDescription()>
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingBottom()>
<com.android.contacts.editor.ContactEditorFragment: android.database.Cursor access$1202(com.android.contacts.editor.ContactEditorFragment,android.database.Cursor)>
<gov.nist.javax.sip.header.Contact: java.lang.String getPubGruuParam()>
<com.android.contacts.detail.ContactDetailFragmentCarousel: int getCurrentPage()>
<com.android.contacts.test.InjectedServices: android.content.SharedPreferences getSharedPreferences()>
<com.android.contacts.model.dataitem.DataItem: java.lang.String getMimeType()>
<gov.nist.javax.sip.header.Contact: javax.sip.address.Address getAddress()>
<com.android.providers.contacts.VoicemailContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.contacts.widget.IndexerListAdapter: int getSectionForPosition(int)>
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewGroupActivity()>
<com.android.vcard.VCardParserImpl_V30: java.util.Set getKnownPropertyNameSet()>
<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownPropertyNameSet()>
<com.android.contacts.model.RawContactDeltaList: java.util.ArrayList buildDiff()>
<com.android.contacts.model.Contact: long getNameRawContactId()>
<com.android.contacts.model.Contact: java.lang.String getPhotoUri()>
<com.android.contacts.activities.ConfirmAddDetailActivity: com.android.contacts.util.DialogManager getDialogManager()>
<com.android.vcard.VCardParserImpl_V40: java.util.Set getKnownPropertyNameSet()>
<com.android.contacts.list.ContactEntryListAdapter: com.android.contacts.list.DirectoryPartition createDefaultDirectoryPartition()>
<com.android.providers.contacts.ProfileProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context)>
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: com.android.contacts.voicemail.VoicemailStatusHelperImpl$Action getAction()>
<com.android.vcard.VCardEntry$ImData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.calllog.ClearCallLogDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.model.account.AccountWithDataSet: com.android.contacts.model.account.AccountTypeWithDataSet getAccountTypeWithDataSet()>
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: long getWritableEntityId()>
<com.android.mms.data.Contact: android.net.Uri getPhoneUri()>
<com.android.contacts.list.ContactListItemView: android.widget.TextView getCountView()>
<com.android.contacts.list.JoinContactLoader: android.database.Cursor loadInBackground()>
<com.android.contacts.preference.ContactsPreferences: int getSortOrder()>
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: java.lang.CharSequence getTitle(android.content.Context)>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getCount()>
<com.android.contacts.dialpad.DialpadFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.vcard.VCardEntry$EmailData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.providers.contacts.DataRowHandler: int getTypeRank(int)>
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticFamilyName()>
<com.android.contacts.list.ContactListItemView: android.widget.TextView getStatusView()>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: java.lang.Object getChild(int,int)>
<com.android.contacts.model.account.BaseAccountType$KindParser: java.util.List parseDataKindTag(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.model.dataitem.ImDataItem: java.lang.String getData()>
<com.android.providers.contacts.ProfileProvider: java.lang.String getType(android.net.Uri)>
<com.android.contacts.ContactsActivity: android.content.ContentResolver getContentResolver()>
<com.android.contacts.model.account.AccountType: int getInviteContactActionResId()>
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()>
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.account.AccountType getAccountType(java.lang.String,java.lang.String)>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context)>
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.account.AccountType getAccountTypeForAccount(com.android.contacts.model.account.AccountWithDataSet)>
<com.android.contacts.editor.EditorAnimator: com.android.contacts.editor.EditorAnimator getInstance()>
<com.android.contacts.ContactPhotoManager: int getDefaultAvatarResId(boolean,boolean)>
<com.android.contacts.model.account.BaseAccountType$ImActionInflater: java.lang.String getTypeColumn()>
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: long getItemId(int)>
<com.android.contacts.model.account.BaseAccountType$EmailKindBuilder: java.lang.String getTagName()>
<com.android.contacts.widget.PinnedHeaderListAdapter: int getPinnedHeaderCount()>
<com.android.contacts.GroupMetaData: java.lang.String getTitle()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)>
<com.android.contacts.util.HtmlUtils$StreamItemQuoteSpan: int getLeadingMargin(boolean)>
<com.android.contacts.util.ImageViewDrawableSetter: byte[] getCompressedImage()>
<com.android.contacts.editor.KindSectionView: java.lang.String getTitle()>
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.vcard.VCardEntry$OrganizationData: java.lang.String getFormattedString()>
<com.android.contacts.group.GroupBrowseListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.list.CustomContactListFilterActivity$AccountSet: java.util.ArrayList buildDiff()>
<com.android.providers.contacts.TransactionContext: java.lang.Long getAccountIdOrNullForRawContact(long)>
<com.android.providers.contacts.CallLogProvider: java.lang.String getType(android.net.Uri)>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: java.lang.Object getItem(int)>
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.provider.ContactsContract$RawContacts$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
<com.android.contacts.activities.GroupEditorActivity: com.android.contacts.util.DialogManager getDialogManager()>
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$Action: int getMessageId()>
<com.android.contacts.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: int getItemPosition(java.lang.Object)>
<com.android.contacts.ContactsUtils: android.graphics.Rect getTargetRectFromView(android.content.Context,android.view.View)>
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result loadInBackground()>
<com.android.contacts.list.ContactEntryListAdapter: int getDirectoryResultLimit()>
<com.android.contacts.interactions.GroupNameDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.quickcontact.DataAction: java.lang.String getMimeType()>
<com.android.contacts.util.ContactBadgeUtil: java.lang.CharSequence getSocialDate(com.android.contacts.util.StreamItemEntry,android.content.Context)>
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getValues()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindOrganization(android.content.Context)>
<com.android.providers.contacts.TransactionContext: java.util.Set getStaleSearchIndexRawContactIds()>
<com.android.contacts.model.RawContactModifier: java.util.ArrayList getValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType)>
<com.android.providers.contacts.PhotoStore: com.android.providers.contacts.PhotoStore$Entry get(long)>
<com.android.contacts.list.LegacyContactListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.contacts.vcard.ExportProcessor: int getType()>
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: java.lang.String getCurrentPhotoFile()>
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.Long getAccountIdOrNull(com.android.providers.contacts.AccountWithDataSet)>
<com.android.contacts.widget.PinnedHeaderListAdapter: int getScrollPositionForHeader(int)>
<com.android.contacts.detail.StreamItemAdapter: int getCount()>
<com.android.contacts.editor.ContactEditorFragment$JoinSuggestedContactDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.datepicker.DatePicker: int getDayOfMonth()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneticFamilyName()>
<com.android.contacts.list.ProviderStatusWatcher: com.android.contacts.list.ProviderStatusWatcher$Status getProviderStatus()>
<com.android.contacts.calllog.ExtendedCursor: java.lang.String getString(int)>
<com.android.contacts.ContactsActivity: android.view.View getView(int)>
<com.android.mms.data.Contact: int getContactMethodType()>
<com.android.vcard.VCardEntry$NicknameData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.quickcontact.ResolveCache: com.android.contacts.quickcontact.ResolveCache$Entry getEntry(com.android.contacts.quickcontact.Action)>
<com.android.contacts.ContactsUtils: android.content.Intent getCallIntent(android.net.Uri,java.lang.String)>
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.DataRowHandler getDataRowHandlerForProfile(java.lang.String)>
<com.android.providers.contacts.ContactLocaleUtils$ContactLocaleUtilsBase: java.lang.String getSortKey(java.lang.String)>
<com.android.providers.contacts.ReorderingCursorWrapper: short getShort(int)>
<com.android.contacts.calllog.CallDetailHistoryAdapter: int getCount()>
<com.android.contacts.list.ProviderStatusWatcher: com.android.contacts.list.ProviderStatusWatcher getInstance(android.content.Context)>
<com.android.contacts.model.Contact: long getDirectoryId()>
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: int getCount()>
<com.android.contacts.model.RawContactDelta: java.lang.String getAccountType()>
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal)>
<com.android.contacts.preference.SortOrderPreference: java.lang.CharSequence getSummary()>
<com.android.contacts.ContactPhotoManagerImpl$Request: long getId()>
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: boolean getVisible()>
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewStreamItemPhotoActivity()>
<com.android.mms.data.ContactList: java.lang.String[] getNumbers()>
<com.android.contacts.datepicker.DatePicker: int getMonth()>
<com.android.contacts.list.ContactsSectionIndexer: java.lang.Object[] getSections()>
<com.android.contacts.group.GroupEditorFragment$Member: android.net.Uri getLookupUri()>
<com.android.providers.contacts.NameLookupBuilder: java.lang.String normalizeName(java.lang.String)>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindIm(android.content.Context)>
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: android.net.Uri[] getSourceUris()>
<com.android.mms.data.Contact: java.util.List getByPhoneUris(android.os.Parcelable[])>
<com.android.contacts.dialpad.DialpadFragment$DialpadChooserAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.model.account.AccountType: java.lang.String getViewContactNotifyServicePackageName()>
<com.android.contacts.ContactPhotoManager: com.android.contacts.ContactPhotoManager getInstance(android.content.Context)>
<com.android.contacts.ContactsUtils: int getThumbnailSize(android.content.Context)>
<com.android.vcard.VCardSourceDetector: int getEstimatedType()>
<com.android.contacts.list.PhoneFavoriteFragment: com.android.contacts.list.ContactListFilter getFilter()>
<com.android.contacts.list.ContactEntryListFragment: android.app.LoaderManager getLoaderManager()>
<com.android.contacts.list.ContactTileAdapter: java.lang.Object getItem(int)>
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<com.android.contacts.editor.BaseRawContactEditorView: com.android.contacts.editor.PhotoEditorView getPhotoEditor()>
<com.android.contacts.editor.KindSectionView: com.android.contacts.model.dataitem.DataKind getKind()>
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getType(com.android.contacts.model.dataitem.DataKind,int)>
<com.android.contacts.list.ContactsSectionIndexer: int getSectionForPosition(int)>
<gov.nist.javax.sip.header.Contact: boolean getWildCardFlag()>
<com.android.contacts.vcard.ImportVCardActivity$VCardFile: long getLastModified()>
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getString(java.lang.String)>
<com.android.providers.contacts.ReorderingCursorWrapper: java.lang.String getString(int)>
<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getNormalizedNumber()>
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getCallDetailsMessageId()>
<com.android.contacts.list.PhoneNumberPickerFragment: com.android.contacts.list.ContactListFilter getFilter()>
<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: java.lang.Long getId()>
<com.android.contacts.activities.PhotoSelectionActivity: android.content.Intent buildIntent(android.content.Context,android.net.Uri,android.graphics.Bitmap,byte[],android.graphics.Rect,com.android.contacts.model.RawContactDeltaList,boolean,boolean,boolean)>
<com.android.contacts.util.MemoryUtils: long getTotalMemorySize()>
<com.android.contacts.model.account.BaseAccountType$OrganizationKindBuilder: java.lang.String getTagName()>
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getEntry(java.lang.Long)>
<com.android.providers.contacts.VoicemailContentProvider$UriData: java.lang.String getId()>
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])>
<com.android.contacts.list.ContactBrowseListFragment: com.android.contacts.list.ContactListFilter getFilter()>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForStructuredName()>
<com.android.contacts.activities.NonPhoneActivity$NonPhoneDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.detail.ContactDetailTabCarousel: int getAllowedVerticalScrollLength()>
<com.android.contacts.activities.PeopleActivity: com.android.contacts.util.DialogManager getDialogManager()>
<com.android.vcard.VCardEntry$OrganizationData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindEmail(android.content.Context)>
<com.android.contacts.voicemail.VoicemailStatusHelperImpl: java.util.List getStatusMessages(android.database.Cursor)>
<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getQueryString()>
<com.android.internal.telephony.gsm.UsimPhoneBookManager: java.util.ArrayList loadEfFilesFromUsim()>
<com.android.contacts.model.account.BaseAccountType$PhoneActionAltInflater: int getTypeLabelResource(java.lang.Integer)>
<com.android.contacts.list.ContactListItemView: android.widget.ImageView getPhotoView()>
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result getContactInfo(android.content.Context,java.lang.String)>
<com.android.contacts.list.ContactTileView: android.widget.QuickContactBadge getQuickContact()>
<com.android.contacts.editor.RawContactEditorView: long getRawContactId()>
<com.android.contacts.model.Contact: java.lang.String getDirectoryAccountType()>
<com.android.contacts.model.account.AccountType: java.util.ArrayList getSortedDataKinds()>
<com.android.contacts.quickcontact.DataAction: int getPresence()>
<com.android.contacts.list.JoinContactListAdapter: int getItemViewType(int,int)>
<com.android.contacts.model.account.GoogleAccountType: java.lang.String getViewContactNotifyServiceClassName()>
<com.android.contacts.util.ExpirableCache: com.android.contacts.util.ExpirableCache create(int)>
<com.android.vcard.VCardProperty: java.util.Map getParameterMap()>
<com.android.contacts.list.ContactEntryListAdapter: int getItemViewType(int,int)>
<com.android.contacts.model.RawContactDelta: int getEntryCount(boolean)>
<com.android.providers.contacts.AbstractContactsProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper()>
<android.provider.ContactsContract$CommonDataKinds$Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<com.android.contacts.util.StreamItemEntry: java.lang.String getText()>
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingLeft()>
<com.android.contacts.detail.ContactDetailDisplayUtils$DefaultImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
<com.android.providers.contacts.TransactionContext: java.util.Set getUpdatedRawContactIds()>
<com.android.contacts.model.dataitem.OrganizationDataItem: java.lang.String getCompany()>
<com.android.contacts.test.InjectedServices: java.lang.Object getSystemService(java.lang.String)>
<com.android.providers.contacts.util.DbQueryUtils: java.lang.String getEqualityClause(java.lang.String,long)>
<com.android.contacts.model.account.ExternalAccountType: int getViewGroupLabelResId()>
<com.android.contacts.widget.IndexerListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.editor.ContactEditorFragment$SuggestionEditConfirmationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.model.dataitem.WebsiteDataItem: java.lang.String getUrl()>
<com.android.contacts.vcard.ProcessorBase: java.lang.Object get()>
<com.android.contacts.quickcontact.ResolveCache: android.content.pm.ResolveInfo getBestResolve(android.content.Intent,java.util.List)>
<com.android.vcard.VCardEntry$AndroidCustomData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.group.GroupDetailFragment: long getGroupId()>
<com.android.contacts.list.ContactListFilter: java.lang.String getId()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoto(android.content.Context)>
<com.android.providers.contacts.TransactionContext: java.util.Set getStaleSearchIndexContactIds()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Long getId()>
<com.android.contacts.detail.ActionsViewContainer: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
<com.android.mms.data.ContactList: java.lang.String[] getNumbers(boolean)>
<com.android.contacts.detail.ContactDetailFragment$ViewEntry: int getViewType()>
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getCallLogMessageId()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)>
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: long getItemId(int)>
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticGivenName()>
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getDataMimeType(long)>
<com.android.contacts.list.ContactEntryListFragment: android.content.CursorLoader createCursorLoader()>
<com.android.providers.contacts.ReorderingCursorWrapper: long getLong(int)>
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getCurrentCountryIso()>
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)>
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: com.android.contacts.group.GroupEditorFragment$Member getItem(int)>
<com.android.contacts.group.GroupListItem: java.lang.String getTitle()>
<com.android.contacts.util.StreamItemEntry: long getTimestamp()>
<com.android.contacts.model.Contact: java.lang.String getAltDisplayName()>
<com.android.providers.contacts.ContactsDatabaseHelper: int getAggregationMode(long)>
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: int[] getAdnRecordsSize(int)>
<com.android.contacts.model.Contact: java.lang.String getPhoneticName()>
<com.android.contacts.list.PostalAddressListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.CharSequence getDisplayName(android.content.Context,com.android.contacts.model.Contact)>
<com.android.providers.contacts.CountryMonitor: java.lang.String getCountryIso()>
<com.android.contacts.group.GroupBrowseListAdapter: long getItemId(int)>
<com.android.mms.data.Contact: android.net.Uri getUri()>
<com.android.contacts.editor.ContactEditorFragment$CancelEditDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.voicemail.VoicemailStatusHelperImpl$OverallState: int getPriority()>
<com.android.contacts.editor.EventFieldEditorView: com.android.contacts.model.account.AccountType$EditType getType()>
<com.android.contacts.util.AccountsListAdapter: com.android.contacts.model.account.AccountWithDataSet getItem(int)>
<com.android.contacts.widget.IndexerListAdapter: int getIndexedPartition()>
<com.android.contacts.model.Contact: java.lang.String getDirectoryDisplayName()>
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupNumber(java.lang.String,java.lang.String)>
<com.android.contacts.list.JoinContactListFragment: com.android.contacts.list.ContactEntryListAdapter createListAdapter()>
<com.android.contacts.model.AccountTypeManagerImpl: java.util.List getAccountTypes(boolean)>
<com.android.contacts.list.ContactsRequest: int getActionCode()>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindDisplayName(android.content.Context)>
<com.android.contacts.list.ContactTileView: android.view.View$OnClickListener createClickListener()>
<com.android.contacts.model.RawContactDelta: java.util.ArrayList getMimeEntries(java.lang.String)>
<com.android.providers.contacts.SearchIndexManager: java.util.List splitIntoFtsTokens(java.lang.String)>
<com.android.providers.contacts.ReorderingCursorWrapper: java.lang.String[] getColumnNames()>
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getDisplayName()>
<com.android.providers.contacts.ContactsProvider2$StructuredNameLookupBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
<com.android.contacts.model.account.AccountType: android.graphics.drawable.Drawable getDisplayIcon(android.content.Context)>
<com.android.providers.contacts.ContactsDatabaseHelper: android.database.sqlite.SQLiteDatabase getDatabase(boolean)>
<com.android.contacts.util.StreamItemEntry: java.lang.String getResPackage()>
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix: java.lang.String getTitle()>
<com.android.contacts.detail.ContactDetailFragment$MakeLocalCopyQuickFix: java.lang.String getTitle()>
<com.android.providers.contacts.ContactDirectoryManager: int scanAllPackages()>
<com.android.contacts.model.Contact: java.lang.String getCustomRingtone()>
<com.android.providers.contacts.PhotoProcessor: int getMaxThumbnailPhotoDim()>
<com.android.vcard.VCardProperty: java.lang.String getRawValue()>
<android.provider.ContactsContract$Groups$EntityIteratorImpl: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
<com.android.contacts.list.ContactTileAdapter: android.view.View getDivider()>
<com.android.contacts.model.dataitem.DataItem: java.lang.String getKindString()>
<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: int getCount()>
<com.android.contacts.detail.ContactDetailFragment: int getFirstListItemOffset()>
<com.android.contacts.ContactPhotoManagerImpl$Request: int getRequestedExtent()>
<com.android.providers.contacts.AccountWithDataSet: java.lang.String getAccountName()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneLabel()>
<com.android.contacts.group.GroupDetailFragment: android.net.Uri getGroupUri()>
<com.android.providers.contacts.NameNormalizer: java.text.RuleBasedCollator getCompressingCollator()>
<com.android.contacts.detail.ContactDetailPhotoSetter: android.view.View$OnClickListener setupContactPhotoForClick(android.content.Context,com.android.contacts.model.Contact,android.widget.ImageView,boolean)>
<com.android.contacts.model.account.BaseAccountType$SipAddressKindBuilder: java.lang.String getTagName()>
<com.android.contacts.editor.KindSectionView: int getEditorCount()>
<com.android.contacts.calllog.ExtendedCursor: int getCount()>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: android.content.Context getDataSourceContext()>
<com.android.providers.contacts.ContactsTransaction: android.database.sqlite.SQLiteDatabase getDbForTag(java.lang.String)>
<com.android.contacts.model.RawContactDelta: int getMimeEntriesCount(java.lang.String,boolean)>
<com.android.contacts.calllog.ExtendedCursor: short getShort(int)>
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: java.lang.String getExtraInfo()>
<com.android.vcard.VCardEntry$NameData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.providers.contacts.ReorderingCursorWrapper: int getType(int)>
<com.android.providers.contacts.ContactsDatabaseHelper: java.lang.String getCountryIso()>
<com.android.vcard.VCardParserImpl_V21: java.util.Set getAvailableEncodingSet()>
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableList getGroupMetaData()>
<com.android.providers.contacts.ReorderingCursorWrapper: float getFloat(int)>
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.RawContact getRawContact()>
<com.android.contacts.model.account.ExternalAccountType: java.util.List getExtensionPackageNames()>
<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: java.lang.Object[] getRow()>
<com.android.contacts.group.GroupBrowseListAdapter: com.android.contacts.group.GroupListItem getItem(int)>
<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: android.content.ContentValues getCompleteValues()>
<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: int getCount()>
<com.android.contacts.editor.ContactEditorUtils: java.util.List getSavedAccounts()>
<com.android.contacts.model.account.GoogleAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhone(android.content.Context)>
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingTop()>
<com.android.contacts.model.Contact: long getId()>
<com.android.vcard.VCardEntry$NoteData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getGivenNames()>
<com.android.contacts.model.account.AccountType: java.lang.String getViewContactNotifyServiceClassName()>
<com.android.contacts.editor.LabeledEditorView$EditTypeAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactMethodUri(int)>
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map getUsableInvitableAccountTypes()>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForOrganization()>
<com.android.contacts.list.ContactListItemView: android.widget.TextView getSnippetView()>
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getSuffix()>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNote(android.content.Context)>
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener getListener()>
<com.android.providers.contacts.VoicemailContentProvider$UriData: java.lang.String getWhereClause()>
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: int getCount()>
<com.android.contacts.editor.EventFieldEditorView: int getDefaultHourForBirthday()>
<com.android.providers.contacts.aggregation.util.NameDistance: float getDistance(byte[],byte[])>
<com.android.contacts.util.StreamItemEntry: java.lang.String getAccountType()>
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View newHeaderView(android.content.Context,int,android.database.Cursor,android.view.ViewGroup)>
<com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry: android.graphics.drawable.Drawable getIcon()>
<com.android.providers.contacts.HanziToPinyin: com.android.providers.contacts.HanziToPinyin getInstance()>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: int getDesiredClipPosition()>
<com.android.contacts.detail.PhotoSelectionHandler: com.android.contacts.model.RawContactDeltaList getDeltaForAttachingPhotoToContact()>
<com.android.contacts.editor.AggregationSuggestionEngine: int getSuggestedContactCount()>
<com.android.contacts.calllog.ExtendedCursor: double getDouble(int)>
<com.android.contacts.list.ContactListAdapter: java.lang.String getSelectedContactLookupKey()>
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getInviteContactActivityClassName()>
<com.android.providers.contacts.ContactLocaleUtils: java.lang.String getSortKey(java.lang.String,int)>
<android.provider.ContactsContract$Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
<android.provider.Contacts$Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<com.android.contacts.quickcontact.DataAction: android.content.Intent getAlternateIntent()>
<com.android.contacts.group.GroupEditorFragment$Member: long getRawContactId()>
<com.android.providers.contacts.ContactsProvider2: java.lang.String getType(android.net.Uri)>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindDisplayName(android.content.Context)>
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo)>
<gov.nist.javax.sip.header.Contact: int getExpires()>
<com.android.contacts.quickcontact.QuickContactActivity$ViewPagerAdapter: int getCount()>
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: long getWritableEntityId()>
<com.android.contacts.list.AccountFilterActivity: java.util.List access$100(android.content.Context)>
<com.android.providers.contacts.HanziToPinyin: java.util.ArrayList get(java.lang.String)>
<com.android.contacts.model.account.AccountType: java.lang.String getViewStreamItemPhotoActivity()>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: int getGroupCount()>
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getMiddleName()>
<com.android.contacts.model.account.BaseAccountType$GroupMembershipKindBuilder: java.lang.String getTagName()>
<com.android.providers.contacts.DataRowHandlerForEmail: int getTypeRank(int)>
<com.android.providers.contacts.ContactsDatabaseHelper: com.android.providers.contacts.ContactsDatabaseHelper getInstance(android.content.Context)>
<com.android.providers.contacts.ContactDirectoryManager: java.util.Set getDirectoryProviderPackages(android.content.pm.PackageManager)>
<com.android.vcard.VCardEntry$AnniversaryData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.model.dataitem.ImDataItem: int getChatCapability()>
<com.android.providers.contacts.ContactLocaleUtils$ChineseContactUtils: java.lang.String getSortKey(java.lang.String)>
<com.android.contacts.detail.StreamItemAdapter: int getViewTypeCount()>
<com.android.contacts.model.account.ExchangeAccountType: com.android.contacts.model.dataitem.DataKind addDataKindPhoneticName(android.content.Context)>
<com.android.contacts.editor.RawContactEditorView: com.android.contacts.editor.TextFieldsEditorView getPhoneticNameEditor()>
<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getQuantityText(int,int,int)>
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: long getItemId(int)>
<com.android.contacts.calllog.IntentProvider$1: android.content.Intent getIntent(android.content.Context)>
<com.android.contacts.calllog.IntentProvider$2: android.content.Intent getIntent(android.content.Context)>
<com.android.contacts.calllog.IntentProvider$3: android.content.Intent getIntent(android.content.Context)>
<com.android.contacts.model.account.BaseAccountType$EventKindBuilder: java.lang.String getTagName()>
<com.android.contacts.model.account.AccountType: int getViewGroupLabelResId()>
<com.android.providers.contacts.aggregation.ContactAggregator$NameLookupSelectionBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
<com.android.contacts.util.AsyncTaskExecutors: com.android.contacts.util.AsyncTaskExecutor createThreadPoolExecutor()>
<com.android.internal.telephony.IIccPhoneBook$Stub: android.os.IBinder asBinder()>
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getContent()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: android.content.ContentValues getAfter()>
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
<com.android.contacts.list.ContactEntryListAdapter: boolean getDisplayPhotos()>
<com.android.contacts.editor.LabeledEditorView: com.android.contacts.model.RawContactDelta$ValuesDelta getEntry()>
<com.android.contacts.model.dataitem.SipAddressDataItem: java.lang.String getSipAddress()>
<com.android.providers.contacts.TransactionContext: java.util.Set getInsertedRawContactIds()>
<com.android.contacts.calllog.ExtendedCursor: int getInt(int)>
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.CharSequence inflateUsing(android.content.Context,android.content.ContentValues)>
<com.android.contacts.model.account.AccountType: java.lang.String getInviteContactActivityClassName()>
<com.android.contacts.calllog.CallDetailHistoryAdapter: long getItemId(int)>
<com.android.contacts.editor.LabeledEditorView: android.app.Dialog createDialog(android.os.Bundle)>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getPositionForSection(int)>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.contacts.detail.ContactDetailFragment$AddConnectionViewEntry: java.lang.CharSequence getLabel()>
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: int getChildrenCount(int)>
<com.android.providers.contacts.DataRowHandler: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
<com.android.contacts.group.GroupListItem: java.lang.String getAccountType()>
<com.android.contacts.group.GroupListItem: java.lang.String getDataSet()>
<com.android.contacts.list.ContactTilePhoneFrequentView: int getApproximateImageSize()>
<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.providers.contacts.ContactsDatabaseHelper: long getContactId(long)>
<com.android.contacts.calllog.IntentProvider: com.android.contacts.calllog.IntentProvider getReturnCallIntentProvider(java.lang.String)>
<com.android.contacts.model.RawContactDeltaList: com.android.contacts.model.RawContactDelta getFirstWritableRawContact(android.content.Context)>
<com.android.contacts.model.account.BaseAccountType$PhoneActionInflater: int getTypeLabelResource(java.lang.Integer)>
<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindGroupMembership(android.content.Context)>
<com.android.contacts.vcard.ProcessorBase: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<com.android.contacts.util.StreamItemPhotoEntry: java.lang.String getPhotoUri()>
<com.android.contacts.detail.ContactDetailDisplayUtils: java.lang.String getAttribution(android.content.Context,com.android.contacts.model.Contact)>
<com.android.vcard.VCardProperty: java.util.List getValueList()>
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getViewContactNotifyServiceClassName()>
<com.android.vcard.VCardEntry$PhotoData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.editor.AggregationSuggestionEngine: android.os.Handler getHandler()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Integer getAsInteger(java.lang.String,java.lang.Integer)>
<com.android.contacts.test.InjectedServices: android.content.ContentResolver getContentResolver()>
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: long getContactId()>
<com.android.contacts.preference.ContactsPreferences: int getDefaultSortOrder()>
<com.android.contacts.list.ContactEntryListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>
<com.android.contacts.detail.ContactDetailFragment$InvitableAccountTypesAdapter: int getCount()>
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: long getRawContactId()>
<com.android.contacts.list.ContactEntryListFragment: android.content.Context getContext()>
<com.android.contacts.quickcontact.ResolveCache: com.android.contacts.quickcontact.ResolveCache getInstance(android.content.Context)>
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: int getPinnedHeaderCount()>
<com.android.contacts.model.RawContactModifier: java.util.ArrayList getValidTypes(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
<com.android.contacts.datepicker.DatePicker$SavedState: int getYear()>
<com.android.contacts.quickcontact.DataAction: android.graphics.drawable.Drawable getAlternateIcon()>
<com.android.contacts.ContactPhotoManager: int getDefaultAvatarResId(android.content.Context,int,boolean)>
<com.android.contacts.list.ContactListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.contacts.vcard.CancelActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<android.provider.Contacts$ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>
<com.android.providers.contacts.ContactLocaleUtils: com.android.providers.contacts.ContactLocaleUtils getIntance()>
<com.android.contacts.list.ContactTileAdapter: long getItemId(int)>
<com.android.contacts.group.SuggestedMemberListAdapter: android.widget.Filter getFilter()>
<com.android.contacts.vcard.ImportProcessor: int getType()>
<com.android.contacts.ContactsActivity: java.lang.Object getSystemService(java.lang.String)>
<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: java.lang.String getAsString(java.lang.String)>
<com.android.contacts.list.ContactTileAdapter: int getItemViewType(int)>
<com.android.contacts.list.ContactListItemView: int getDefaultPhotoViewSize()>
<com.android.contacts.widget.IndexerListAdapter: java.lang.Object[] getSections()>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForStructuredPostal()>
<com.android.contacts.group.GroupBrowseListAdapter: int getCount()>
<gov.nist.javax.sip.header.Contact: java.lang.String getSipInstanceParam()>
<com.android.contacts.widget.IndexerListAdapter: android.widget.SectionIndexer getIndexer()>
<com.android.contacts.ContactPhotoManagerImpl$Request: java.lang.Object getKey()>
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.contacts.widget.PinnedHeaderListView: int getPositionAt(int)>
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: com.android.contacts.list.ContactListFilter getItem(int)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: int getEmailType()>
<com.android.contacts.list.DirectoryPartition: java.lang.String getDisplayName()>
<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.ContactPhotoManager: com.android.contacts.ContactPhotoManager createContactPhotoManager(android.content.Context)>
<com.android.contacts.detail.ContactDetailFragment$ViewEntry: long getId()>
<com.android.contacts.group.GroupEditorFragment$Member: android.net.Uri getPhotoUri()>
<com.android.contacts.model.account.BaseAccountType$CommonInflater: java.lang.String getTypeColumn()>
<com.android.contacts.vcard.ImportVCardActivity$VCardFile: java.lang.String getName()>
<com.android.contacts.ContactPhotoManagerImpl$Request: android.net.Uri getUri()>
<com.android.providers.contacts.VoicemailContentProvider$UriData: com.android.providers.contacts.VoicemailContentProvider$UriData createUriData(android.net.Uri)>
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask$2: int getMaximumScrollableHeaderOffset()>
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone()>
<com.android.vcard.VCardParserImpl_V40: int getVersion()>
<com.android.providers.contacts.ContactsProvider2: java.lang.String[] getDefaultProjection(android.net.Uri)>
<com.android.vcard.VCardParserImpl_V30: int getVersion()>
<com.android.contacts.list.ContactTileAdapter: int getNumFrequents()>
<com.android.vcard.VCardProperty: java.util.Collection getParameters(java.lang.String)>
<com.android.vcard.VCardParserImpl_V21: int getVersion()>
<com.android.contacts.calllog.ExtendedCursor: java.lang.String[] getColumnNames()>
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<com.android.vcard.VCardParserImpl_V21: java.lang.String getLine()>
<com.android.contacts.preference.ContactsPreferences: int getDisplayOrder()>
<com.android.vcard.VCardParserImpl_V30: java.lang.String getLine()>
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: int getInt(java.lang.String)>
<com.android.contacts.model.dataitem.GroupMembershipDataItem: long getGroupRowId()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getPhoneNormalizedNumber()>
<com.android.contacts.group.GroupEditorFragment$MemberListAdapter: long getItemId(int)>
<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: long getItemId(int)>
<com.android.contacts.interactions.TestLoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>
<com.android.contacts.list.ContactsRequest: java.lang.String getQueryString()>
<com.android.contacts.vcard.ImportVCardActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<com.android.contacts.editor.AggregationSuggestionEngine: java.util.List getSuggestions()>
<com.android.contacts.list.ContactEntryListFragment: java.lang.String getQueryString()>
<com.android.contacts.calllog.CallDetailHistoryAdapter: int getItemViewType(int)>
<com.android.contacts.group.GroupEditorFragment$CancelEditDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.editor.LabeledEditorView$EditTypeAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.vcard.VCardService$MyBinder: com.android.contacts.vcard.VCardService getService()>
<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getCollectionName()>
<com.android.contacts.socialwidget.SocialWidgetSettings: com.android.contacts.socialwidget.SocialWidgetSettings getInstance()>
<com.android.contacts.editor.GroupMembershipView$GroupMembershipAdapter: int getViewTypeCount()>
<com.android.contacts.list.DirectoryPartition: int getStatus()>
<com.android.contacts.util.ExpirableCache: java.lang.Object getPossiblyExpired(java.lang.Object)>
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getBestValidType(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,boolean,int)>
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.model.account.AccountWithDataSet getDefaultAccount()>
<com.android.providers.contacts.NameSplitter: int getAdjustedNameStyleBasedOnPhoneticNameStyle(int,int)>
<com.android.providers.contacts.AccountWithDataSet: java.lang.String getDataSet()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.Integer getAsInteger(java.lang.String)>
<com.android.contacts.model.dataitem.PhoneDataItem: java.lang.String getFormattedPhoneNumber()>
<com.android.contacts.model.RawContact: java.lang.String getAccountTypeString()>
<com.android.contacts.editor.SplitContactConfirmationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getDataUri(int)>
<com.android.contacts.ContactsActivity: android.app.Fragment getFragment(int)>
<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByNumbers(java.lang.String,boolean,boolean)>
<com.android.mms.data.Contact: java.lang.String getNameAndNumber()>
<com.android.providers.contacts.NameNormalizer: java.text.RuleBasedCollator getComplexityCollator()>
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<com.android.contacts.model.account.BaseAccountType$ImKindBuilder: java.lang.String getTagName()>
<com.android.providers.contacts.VoicemailContentProvider: java.lang.String getCallingPackage()>
<com.android.contacts.editor.RawContactEditorView: com.android.contacts.editor.TextFieldsEditorView getNameEditor()>
<com.android.contacts.detail.ContactDetailFragment$ViewEntryDimensions: int getPaddingRight()>
<com.android.contacts.list.DirectoryPartition: long getDirectoryId()>
<com.android.contacts.group.GroupListItem: int getMemberCount()>
<com.android.mms.data.Contact: android.graphics.drawable.Drawable getAvatar(android.content.Context,android.graphics.drawable.Drawable)>
<com.android.contacts.interactions.ImportExportDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: int getCount()>
<com.android.vcard.VCardComposer: int getCount()>
<com.android.contacts.model.RawContact: com.android.contacts.model.AccountTypeManager getAccountTypeManager()>
<com.android.vcard.VCardEntry$BirthdayData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.model.RawContactDelta: com.android.contacts.model.RawContactDelta$ValuesDelta getPrimaryEntry(java.lang.String)>
<com.android.providers.contacts.ContactsDatabaseHelper$StructuredNameLookupBuilder: java.lang.String[] getCommonNicknameClusters(java.lang.String)>
<com.android.mms.data.Contact: long getRecipientId()>
<com.android.vcard.VCardProperty: java.lang.String getName()>
<com.android.mms.data.Contact: java.lang.String getNumber()>
<com.android.contacts.util.StreamItemPhotoEntry: long getId()>
<com.android.contacts.list.JoinContactListAdapter: int getViewTypeCount()>
<com.android.contacts.model.account.BaseAccountType$EventActionInflater: int getTypeLabelResource(java.lang.Integer)>
<com.android.contacts.model.dataitem.StructuredNameDataItem: java.lang.String getPhoneticMiddleName()>
<com.android.contacts.util.DataStatus: int getPresence()>
<com.android.contacts.model.RawContact: java.lang.String getDataSet()>
<com.android.contacts.voicemail.VoicemailPlaybackPresenter$FetchResultHandler: java.lang.Runnable getTimeoutRunnable()>
<com.android.contacts.list.ProfileAndContactsLoader$1: android.os.Bundle getExtras()>
<com.android.contacts.model.account.AccountType: java.util.List getExtensionPackageNames()>
<com.android.contacts.activities.DialtactsActivity: java.lang.String getCallOrigin()>
<com.android.vcard.VCardEntry$SipData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.providers.contacts.DataRowHandler: long getMimeTypeId()>
<com.android.contacts.list.ContactsSectionIndexer: int getPositionForSection(int)>
<com.android.contacts.model.dataitem.ImDataItem: java.lang.String getCustomProtocol()>
<com.android.contacts.list.ContactTileView: android.net.Uri getLookupUri()>
<com.android.vcard.VCardEntryCommitter: java.util.ArrayList getCreatedUris()>
<com.android.contacts.model.account.BaseAccountType$SimpleInflater: java.lang.String getColumnNameForTest()>
<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownValueSet()>
<com.android.contacts.detail.ContactDetailUpdatesFragment: int getFirstListItemOffset()>
<com.android.contacts.model.dataitem.DataItem: int getKindTypeColumn()>
<com.android.providers.contacts.ContactsProvider2: android.accounts.Account getDefaultAccount()>
<com.android.providers.contacts.AccountWithDataSet: com.android.providers.contacts.AccountWithDataSet get(java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.model.account.BaseAccountType$ImActionInflater: java.lang.String getLabelColumn()>
<com.android.contacts.editor.ContactEditorFragment: com.android.contacts.editor.BaseRawContactEditorView getRawContactEditorView(long)>
<com.android.contacts.group.GroupBrowseListAdapter: int getSelectedGroupPosition()>
<com.android.contacts.model.dataitem.DataItem: long getId()>
<com.android.contacts.model.account.ExternalAccountType: java.lang.String getCreateContactActivityClassName()>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindStructuredPostal(android.content.Context)>
<com.android.providers.contacts.VoicemailContentTable: java.lang.String getType(com.android.providers.contacts.VoicemailContentProvider$UriData)>
<com.android.contacts.util.ThemeUtils: int getAttribute(android.content.res.Resources$Theme,int)>
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: int getCount()>
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getMe(boolean)>
<com.android.contacts.model.account.BaseAccountType: com.android.contacts.model.dataitem.DataKind addDataKindNickname(android.content.Context)>
<com.android.providers.contacts.ContactsProvider2: java.util.Locale getLocale()>
<com.android.contacts.model.account.BaseAccountType$NoteKindBuilder: java.lang.String getTagName()>
<com.android.contacts.util.WeakAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<com.android.contacts.util.ImageViewDrawableSetter: android.widget.ImageView getTarget()>
<com.android.contacts.TypePrecedence: int getTypePrecedence(java.lang.String,int)>
<com.android.vcard.VCardParserImpl_V21: java.util.Set getKnownTypeSet()>
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchShortcutRefresh(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String)>
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.ContactsDatabaseHelper getThreadActiveDatabaseHelperForTest()>
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMember: java.lang.String getDisplayName()>
<com.android.contacts.detail.StreamItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.providers.contacts.PhotoProcessor: android.graphics.Bitmap getDisplayPhoto()>
<com.android.providers.contacts.DefaultCallLogInsertionHelper: com.android.providers.contacts.DefaultCallLogInsertionHelper getInstance(android.content.Context)>
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.dataitem.DataKind getDataKind()>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: long getItemId(int)>
<com.android.contacts.list.ContactTileAdapter: int getViewTypeCount()>
<com.android.vcard.VCardEntry: java.util.ArrayList constructInsertOperations(android.content.ContentResolver,java.util.ArrayList)>
<com.android.providers.contacts.SearchIndexManager$IndexBuilder: java.lang.String getTokens()>
<com.android.contacts.editor.ContactEditorFragment$AggregationSuggestionAdapter: long getItemId(int)>
<com.android.providers.contacts.ContactsProvider2: int getMaxThumbnailDim()>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForPhone()>
<com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoStore getProfilePhotoStore()>
<com.android.contacts.list.DirectoryListLoader: android.database.Cursor loadInBackground()>
<com.android.contacts.vcard.ExportVCardActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.account.AccountType$EditType getCurrentType(com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.dataitem.DataKind)>
<com.android.contacts.group.GroupBrowseListFragment: android.database.Cursor access$302(com.android.contacts.group.GroupBrowseListFragment,android.database.Cursor)>
<com.android.providers.contacts.ContactsDatabaseHelper: long getMimeTypeIdForIm()>
<com.android.contacts.calllog.DefaultVoicemailNotifier: com.android.contacts.calllog.DefaultVoicemailNotifier getInstance(android.content.Context)>
<com.android.contacts.model.Contact: com.google.common.collect.ImmutableMap getStatuses()>
<com.android.contacts.quickcontact.DataAction: java.lang.CharSequence getSubtitle()>
<com.android.vcard.VCardEntryCounter: int getCount()>
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View newView(android.content.Context,int,android.database.Cursor,int,android.view.ViewGroup)>
<com.android.contacts.list.ContactTileAdapter: int getFrequentHeaderPosition()>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getEmailData()>
<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
<com.android.providers.contacts.ProfileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.contacts.detail.PhotoSelectionHandler: long getWritableEntityId()>
<com.android.contacts.util.AccountsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.model.account.AccountType: java.lang.CharSequence getInviteContactActionLabel(android.content.Context)>
<com.android.contacts.model.account.AccountType: java.lang.String getViewStreamItemActivity()>
<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
<com.android.contacts.activities.ActionBarAdapter$CustomArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.detail.ContactDetailTabCarousel: int getAllowedHorizontalScrollLength()>
<com.android.contacts.list.ContactEntryListAdapter: int getSortOrder()>
<com.android.providers.contacts.ContactsDatabaseHelper: java.util.Set getAllAccountsWithDataSets()>
<com.android.contacts.model.dataitem.DataItem: android.content.ContentValues getContentValues()>
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.PhotoStore getPhotoStore()>
<com.android.internal.telephony.IIccPhoneBook$Stub: com.android.internal.telephony.IIccPhoneBook asInterface(android.os.IBinder)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: java.lang.String getDisplayName()>
<com.android.contacts.model.Contact: java.lang.String getDisplayName()>
<com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder: com.android.providers.contacts.SearchIndexManager$FtsQueryBuilder getDigitsQueryBuilder(java.lang.String)>
<com.android.contacts.detail.ContactDetailFragment$NetworkTitleViewEntry: android.graphics.drawable.Drawable getIcon()>
<com.android.vcard.VCardEntry$PhoneData: com.android.vcard.VCardEntry$EntryLabel getEntryLabel()>
<com.android.contacts.list.ContactListAdapter: long getSelectedContactDirectoryId()>
<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<com.android.contacts.model.RawContact: java.lang.Long getId()>
<com.android.providers.contacts.ContactsDatabaseHelper: int getDisplayNameSourceForMimeTypeId(int)>
<com.android.contacts.model.dataitem.DataItem: com.android.contacts.model.account.AccountType getAccountType()>
<com.android.mms.data.ContactList: com.android.mms.data.ContactList getByNumbers(java.lang.Iterable,boolean)>
<com.android.providers.contacts.VoicemailContentProvider: com.android.providers.contacts.ContactsDatabaseHelper getDatabaseHelper(android.content.Context)>
<com.android.providers.contacts.MemoryCursor: java.lang.String[] getColumnNames()>
<com.android.providers.contacts.ContactsProvider2: com.android.providers.contacts.DataRowHandler getDataRowHandler(java.lang.String)>
<com.android.vcard.VCardComposer: java.lang.String createOneEntry()>
<com.android.providers.contacts.ContactsDatabaseHelper: long getPackageId(java.lang.String)>
<com.android.contacts.list.ContactEntryListFragment: int getSortOrder()>
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: java.lang.String getCurrentPhotoFile()>
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getPrefix()>
<com.android.contacts.list.PhoneFavoriteMergedAdapter: int getItemViewType(int)>
<com.android.contacts.list.ContactEntryListAdapter: java.lang.String getContactsCount()>
<com.android.contacts.datepicker.DatePicker: int getYear()>
<com.android.mms.data.Contact: boolean getSendToVoicemail()>
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getType(android.net.Uri)>
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>
<com.android.contacts.activities.ContactEditorActivity: com.android.contacts.util.DialogManager getDialogManager()>
<com.android.contacts.preference.DisplayOrderPreference: java.lang.CharSequence getSummary()>
<com.android.providers.contacts.PhotoProcessor: android.graphics.Bitmap getNormalizedBitmap(android.graphics.Bitmap,int,boolean)>
<com.android.providers.contacts.ContactDirectoryManager: java.lang.String providerDescription(android.content.pm.ProviderInfo)>
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)>
<com.android.contacts.datepicker.DatePicker$SavedState: int getDay()>
<com.android.contacts.util.DialogManager: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<com.android.contacts.model.RawContact: java.lang.String getAccountName()>
<com.android.providers.contacts.VoicemailContentTable: android.database.Cursor query(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.contacts.util.StructuredPostalUtils: android.content.Intent getViewPostalAddressIntent(java.lang.String)>
<com.android.contacts.NfcHandler: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)>
<com.android.contacts.detail.StreamItemAdapter: long getItemId(int)>
<com.android.contacts.ContactSaveService: java.lang.Object getSystemService(java.lang.String)>
<com.android.contacts.model.account.AccountType: java.lang.String getCreateContactActivityClassName()>
<com.android.contacts.model.dataitem.EmailDataItem: java.lang.String getData()>
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getPinnedHeaderView(int,android.view.View,android.view.ViewGroup)>
<com.android.contacts.quickcontact.ResolveCache: android.graphics.drawable.Drawable getIcon(com.android.contacts.quickcontact.Action)>
<com.android.contacts.model.ContactLoader: android.net.Uri getLookupUri()>
<com.android.providers.contacts.NameSplitter$Name: java.lang.String getFamilyName()>
<android.content.ContentResolver: android.database.Cursor query(android.provider.CallLog$Calls: android.net.Uri CONTENT_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.CallLog$Calls: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.CallLog: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_EMAIL_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$ContactMethods: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Extensions: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$GroupMembership: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$GroupMembership: android.net.Uri RAW_CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Groups: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Groups: android.net.Uri DELETED_CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Organizations: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$People: android.net.Uri CONTENT_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$People: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$People: android.net.Uri DELETED_CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$People: android.net.Uri WITH_EMAIL_OR_IM_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Phones: android.net.Uri CONTENT_FILTER_URL,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Phones: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Photos: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Presence: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts$Settings: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.Contacts: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$AggregationExceptions: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$CommonDataKinds$StructuredPostal: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_GROUP_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_MULTI_VCARD_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_VCARD_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Data: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Groups: android.net.Uri CONTENT_SUMMARY_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Groups: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$ProviderStatus: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$RawContacts: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$RawContactsEntity: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$Settings: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$StatusUpdates: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract$SyncState: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.ContactsContract: android.net.Uri AUTHORITY_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.SocialContract$Activities: android.net.Uri CONTENT_AUTHORED_BY_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.SocialContract$Activities: android.net.Uri CONTENT_CONTACT_STATUS_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.SocialContract$Activities: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(android.provider.SocialContract: android.net.Uri AUTHORITY_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.contacts.ContactsLiveFolders$AllContacts: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.contacts.ContactsLiveFolders$PhoneContacts: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.contacts.ContactsLiveFolders$StarredContacts: android.net.Uri CONTENT_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.mms.data.Contact$ContactsCache: android.net.Uri EMAIL_WITH_PRESENCE_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.mms.data.Contact$ContactsCache: android.net.Uri PHONES_WITH_PRESENCE_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_FAVORITES_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ContentResolver: android.database.Cursor query(com.android.providers.contacts.LegacyApiSupport: android.net.Uri LIVE_FOLDERS_CONTACTS_WITH_PHONES_URI,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.contacts.ContactSaveService: android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,long,java.lang.String)>
<com.android.contacts.model.account.AccountWithDataSet: void writeToParcel(android.os.Parcel,int)>
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSearchMode(boolean)>
<com.android.contacts.list.ContactEntryListAdapter: void setDefaultFilterHeaderText(int)>
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void startPhotoActivity(android.content.Intent,int,java.lang.String)>
<com.android.providers.contacts.LegacyApiSupport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.contacts.activities.ContactEditorAccountsChangedActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.providers.contacts.DataRowHandlerForCommonDataKind: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
<com.android.contacts.interactions.ImportExportDialogFragment: void show(android.app.FragmentManager,boolean)>
<com.android.providers.contacts.aggregation.util.ContactMatcher: void updateScoreWithNicknameMatch(long)>
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.ContactSaveService: android.content.Intent createGroupDeletionIntent(android.content.Context,long)>
<com.android.contacts.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.android.contacts.calllog.CallLogListItemViews,com.android.contacts.PhoneCallDetails,boolean)>
<com.android.contacts.detail.ContactDetailTabCarousel: void restoreCurrentTab(int)>
<com.android.contacts.list.ContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>
<com.android.providers.contacts.DataRowHandlerForPhoneNumber: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
<com.android.providers.contacts.aggregation.ContactAggregator: void updatePhotoId(android.database.sqlite.SQLiteDatabase,long)>
<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: void newContact(java.lang.String)>
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>
<com.android.providers.contacts.VoicemailStatusTable: android.os.ParcelFileDescriptor openFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String)>
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
<com.android.contacts.editor.LabeledEditorView: void setEnabled(boolean)>
<com.android.contacts.widget.PinnedHeaderListView: void setHeaderInvisible(int,boolean)>
<com.android.providers.contacts.aggregation.ContactAggregator: void updateHasPhoneNumber(android.database.sqlite.SQLiteDatabase,long)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setVolumeControlStream(int)>
<com.android.contacts.editor.ContactEditorFragment: boolean save(int)>
<com.android.providers.contacts.aggregation.util.ContactMatcher: void updateScoreWithPhoneNumberMatch(long)>
<com.android.providers.contacts.aggregation.ContactAggregator: void updateDisplayNameForRawContact(android.database.sqlite.SQLiteDatabase,long)>
<com.android.contacts.editor.SelectAccountDialogFragment: void show(android.app.FragmentManager,android.app.Fragment,int,com.android.contacts.util.AccountsListAdapter$AccountListFilter,android.os.Bundle)>
<com.android.contacts.list.ContactListFilterView: void setActivated(boolean)>
<com.android.contacts.calllog.CallLogAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>
<com.android.contacts.editor.TextFieldsEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
<com.android.contacts.list.ContactListPinnedHeaderView: void setCountView(java.lang.String)>
<com.android.contacts.util.AccountFilterUtil: boolean updateAccountFilterTitleForPhone(android.view.View,com.android.contacts.list.ContactListFilter,boolean)>
<com.android.providers.contacts.aggregation.ContactAggregator: void markForAggregation(long,int,boolean)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void sendFetchVoicemailRequest(android.net.Uri)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController: void setPermanentText(java.lang.String)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setSuperPrimary(boolean)>
<com.android.contacts.editor.PhoneticNameEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
<com.android.contacts.editor.KindSectionView: void setEnabled(boolean)>
<com.android.providers.contacts.ContactDirectoryManager: void onPackageChanged(java.lang.String)>
<com.android.contacts.list.ContactBrowseListFragment: void restoreSavedState(android.os.Bundle)>
<com.android.providers.contacts.ContactsDatabaseHelper: void copyLongValue(android.content.ContentValues,java.lang.String,android.content.ContentValues,java.lang.String)>
<com.android.contacts.editor.TextFieldsEditorView$SavedState: void writeToParcel(android.os.Parcel,int)>
<com.android.contacts.preference.ContactsPreferences: void setSortOrder(int)>
<com.android.contacts.list.ContactEntryListAdapter: void setPinnedSectionTitle(android.view.View,java.lang.String)>
<com.android.providers.contacts.ContactsProvider2: long insertStatusUpdate(android.content.ContentValues)>
<com.android.providers.contacts.DefaultCallLogInsertionHelper: void addComputedValues(android.content.ContentValues)>
<com.android.contacts.editor.ContactEditorFragment: void setIntentExtras(android.os.Bundle)>
<com.android.contacts.group.GroupEditorFragment: void loadMemberToAddToGroup(long,java.lang.String)>
<com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener: void onItemClicked(android.content.Intent)>
<com.android.contacts.PhoneCallDetailsHelper: void setCallDetailsHeader(android.widget.TextView,com.android.contacts.PhoneCallDetails)>
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.activities.DialtactsActivity$ViewPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
<com.android.contacts.util.AccountPromptUtils: void launchAccountPrompt(android.app.Activity)>
<com.android.contacts.list.PhoneNumberListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void copyStringFrom(com.android.contacts.model.RawContactDelta$ValuesDelta,java.lang.String)>
<com.android.contacts.interactions.PhoneNumberInteraction: void onLoadComplete(android.content.Loader,android.database.Cursor)>
<com.android.providers.contacts.ContactsDatabaseHelper: void updateContactVisible(com.android.providers.contacts.TransactionContext,long)>
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticFamilyName(java.lang.String)>
<com.android.contacts.ContactPhotoManagerImpl: void cacheBitmap(android.net.Uri,android.graphics.Bitmap,byte[])>
<com.android.providers.contacts.VoicemailContentProvider: android.os.ParcelFileDescriptor openDataFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setPositionSeekListener(android.widget.SeekBar$OnSeekBarChangeListener)>
<com.android.contacts.list.ContactBrowseListFragment: void setSearchMode(boolean)>
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean,boolean)>
<android.widget.QuickContactBadge: void setMode(int)>
<com.android.email.activity.MessageViewFragmentBase$ContactStatusLoaderCallbacks: android.os.Bundle createArguments(java.lang.String)>
<com.android.contacts.model.RawContactModifier: void migrateStructuredName(android.content.Context,com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
<gov.nist.javax.sip.header.Contact: void setQValue(float)>
<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<com.android.providers.contacts.aggregation.ContactAggregator: void updateLookupKeyForRawContact(android.database.sqlite.SQLiteDatabase,long)>
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>
<com.android.providers.contacts.ProfileAwareUriMatcher: void addURI(java.lang.String,java.lang.String,int)>
<com.android.contacts.list.LegacyPhoneNumberListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.providers.contacts.ContactsDatabaseHelper: void setIsPrimary(long,long,long)>
<android.provider.Contacts$People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])>
<com.android.contacts.ContactSaveService: android.content.Intent createNewRawContactIntent(android.content.Context,java.util.ArrayList,com.android.contacts.model.account.AccountWithDataSet,java.lang.Class,java.lang.String)>
<com.android.contacts.widget.PinnedHeaderListView: void setFadingHeader(int,int,boolean)>
<com.android.providers.contacts.ContactsDatabaseHelper: void replaceStatusUpdate(java.lang.Long,long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)>
<com.android.contacts.list.LegacyContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.providers.contacts.PhotoStore: long insert(com.android.providers.contacts.PhotoProcessor,boolean)>
<com.android.contacts.editor.LabeledEditorView: void saveValue(java.lang.String,java.lang.String)>
<com.android.contacts.ContactSaveService: android.content.Intent createJoinContactsIntent(android.content.Context,long,long,boolean,java.lang.Class,java.lang.String)>
<com.android.contacts.dialpad.DialpadImageButton: void setPressed(boolean)>
<com.android.contacts.group.GroupDetailFragment: void setQuickContact(boolean)>
<com.android.contacts.model.RawContact: void setAccount(com.android.contacts.model.account.AccountWithDataSet)>
<com.android.contacts.detail.ContactDetailDisplayUtils: void setDisplayName(android.content.Context,com.android.contacts.model.Contact,android.widget.TextView)>
<com.android.providers.contacts.DbModifierWithNotification: long insert(android.content.ContentValues)>
<com.android.providers.contacts.aggregation.ContactAggregator: void markNewForAggregation(long,int)>
<com.android.providers.contacts.aggregation.ContactAggregator: void updateAggregateData(com.android.providers.contacts.TransactionContext,long)>
<com.android.contacts.model.RawContactModifier: void migrateGenericWithTypeColumn(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
<com.android.contacts.activities.ContactSelectionActivity: void startActivityAndForwardResult(android.content.Intent)>
<com.android.providers.contacts.ContactsDatabaseHelper: void insertNameLookup(long,long,int,java.lang.String)>
<com.android.contacts.model.RawContactModifier: void parseExtras(android.content.Context,com.android.contacts.model.account.AccountType,com.android.contacts.model.RawContactDelta,android.os.Bundle)>
<com.android.contacts.list.ContactListItemView: void setSectionHeader(java.lang.String)>
<com.android.contacts.editor.LabeledEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticGivenName(java.lang.String)>
<com.android.providers.contacts.DataRowHandlerForStructuredName: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
<com.android.contacts.interactions.GroupDeletionDialogFragment: void show(android.app.FragmentManager,long,java.lang.String,boolean)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setClipPosition(int,int)>
<com.android.contacts.util.AccountSelectionUtil: void doImportFromSdCard(android.content.Context,com.android.contacts.model.account.AccountWithDataSet)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setRateDisplay(float,int)>
<gov.nist.javax.sip.header.Contact: void setSipInstanceParam(java.lang.String)>
<com.android.contacts.format.PrefixHighlighter: void setText(android.widget.TextView,java.lang.String,char[])>
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.contacts.model.dataitem.DataItem: void setRawContactId(long)>
<com.android.providers.contacts.ContactsProvider2: void notifyChange(boolean)>
<com.android.contacts.editor.EventFieldEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
<com.android.providers.contacts.DataRowHandlerForGroupMembership: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
<com.android.providers.contacts.ContactsDatabaseHelper: void updateRawContactDisplayName(android.database.sqlite.SQLiteDatabase,long)>
<com.android.contacts.list.JoinContactListFragment: void restoreSavedState(android.os.Bundle)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticMiddleName(java.lang.String)>
<com.android.contacts.list.ContactListItemView: void setData(char[],int)>
<com.android.providers.contacts.ContactsProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.widget.FrameLayoutWithOverlay: void setAlphaLayer(android.view.View)>
<com.android.providers.contacts.DataRowHandlerForPhoneNumber: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
<com.android.contacts.interactions.GroupCreationDialogFragment: void onCompleted(java.lang.String)>
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
<com.android.providers.contacts.aggregation.ProfileAggregator: void aggregateContact(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long)>
<com.android.providers.contacts.VoicemailStatusTable: int update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.contacts.list.JoinContactListFragment: void setQueryString(java.lang.String,boolean)>
<com.android.contacts.list.CustomContactListFilterActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<gov.nist.javax.sip.header.Contact: void setExpires(int)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticGivenName(java.lang.String)>
<com.android.providers.contacts.FastScrollingIndexCache: android.os.Bundle buildExtraBundle(java.lang.String[],int[])>
<com.android.contacts.list.ContactListPinnedHeaderView: void setSectionHeader(java.lang.String)>
<com.android.contacts.editor.PhotoEditorView: void setSuperPrimary(boolean)>
<com.android.providers.contacts.ContactsDatabaseHelper: boolean updateContactVisible(com.android.providers.contacts.TransactionContext,long,boolean)>
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.contacts.util.AccountSelectionUtil: void doImportFromSim(android.content.Context,com.android.contacts.model.account.AccountWithDataSet)>
<com.android.providers.contacts.DataRowHandlerForPhoto: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setStartStopListener(android.view.View$OnClickListener)>
<com.android.contacts.model.RawContactModifier: void migrateEvent(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,java.lang.Integer)>
<com.android.contacts.list.ContactListItemView: void setPresence(android.graphics.drawable.Drawable)>
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>
<com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment: com.android.contacts.dialpad.DialpadFragment$ErrorDialogFragment newInstance(int,int)>
<com.android.contacts.SpecialCharSequenceMgr: boolean handleAdnEntry(android.content.Context,java.lang.String,android.widget.EditText)>
<com.android.providers.contacts.ContactsDatabaseHelper: void insertStatusUpdate(java.lang.Long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)>
<com.android.contacts.test.InjectedServices: void setSystemService(java.lang.String,java.lang.Object)>
<com.android.contacts.util.AccountFilterUtil: void startAccountFilterActivityForResult(android.app.Activity,int,com.android.contacts.list.ContactListFilter)>
<com.android.contacts.editor.KindSectionView: void setTitleVisible(boolean)>
<com.android.contacts.ContactSaveService: android.content.Intent createNewGroupIntent(android.content.Context,com.android.contacts.model.account.AccountWithDataSet,java.lang.String,long[],java.lang.Class,java.lang.String)>
<com.android.contacts.list.PhoneNumberPickerFragment: void setSearchMode(boolean)>
<com.android.contacts.util.ImageViewDrawableSetter: void setupContactPhoto(com.android.contacts.model.Contact,android.widget.ImageView)>
<com.android.contacts.activities.PeopleActivity$ContactDetailFragmentListener: void onCreateRawContactRequested(java.util.ArrayList,com.android.contacts.model.account.AccountWithDataSet)>
<com.android.contacts.socialwidget.SocialWidgetSettings: void setContactUri(android.content.Context,int,android.net.Uri)>
<com.android.contacts.activities.DialtactsActivity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
<com.android.providers.contacts.DataRowHandlerForIdentity: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
<com.android.contacts.calllog.CallLogAdapter: void bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>
<com.android.providers.contacts.NameSplitter$Name: void toValues(android.content.ContentValues)>
<com.android.contacts.list.DefaultContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.contacts.editor.GroupMembershipView: void setEnabled(boolean)>
<com.android.contacts.editor.EventFieldEditorView: void setEnabled(boolean)>
<com.android.contacts.widget.FrameLayoutWithOverlay: void setOverlayClickable(boolean)>
<gov.nist.javax.sip.header.Contact: void setWildCardFlag(boolean)>
<com.android.contacts.group.GroupEditorFragment$Member: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseEf(com.android.internal.telephony.gsm.SimTlv,java.util.Map,int)>
<gov.nist.javax.sip.header.Contact: void setTempGruuParam(java.lang.String)>
<com.android.providers.contacts.VoicemailContentTable: android.net.Uri insert(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>
<com.android.providers.contacts.ContactsDatabaseHelper: void setIsSuperPrimary(long,long,long)>
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setPhoneticMiddleName(java.lang.String)>
<com.android.providers.contacts.ContactsDatabaseHelper: boolean updateContactVisibleOnlyIfChanged(com.android.providers.contacts.TransactionContext,long)>
<com.android.contacts.editor.ContactEditorUtils: void saveDefaultAndAllAccounts(com.android.contacts.model.account.AccountWithDataSet)>
<com.android.contacts.editor.ContactEditorFragment: void setData(com.android.contacts.model.Contact)>
<com.android.contacts.list.ContactPickerFragment: void restoreSavedState(android.os.Bundle)>
<com.android.providers.contacts.VoicemailContentTable: android.os.ParcelFileDescriptor openFile(com.android.providers.contacts.VoicemailContentProvider$UriData,java.lang.String)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void putNull(java.lang.String)>
<com.android.contacts.util.AccountFilterUtil: boolean updateAccountFilterTitleForPeople(android.view.View,com.android.contacts.list.ContactListFilter,boolean)>
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: void show(android.app.FragmentManager,java.util.ArrayList,com.android.contacts.interactions.PhoneNumberInteraction$InteractionType,java.lang.String)>
<com.android.contacts.editor.PhotoEditorView: void setDeletable(boolean)>
<com.android.contacts.editor.ContactEditorFragment: void setAggregationSuggestionViewEnabled(boolean)>
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(com.android.contacts.list.CustomContactListFilterActivity$GroupDelta,boolean)>
<com.android.providers.contacts.DbModifierWithNotification: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.android.contacts.activities.ContactEditorActivity$2: void onEditOtherContactRequested(android.net.Uri,java.util.ArrayList)>
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.providers.contacts.ContactsProvider2: boolean isWritableAccountWithDataSet(java.lang.String)>
<com.android.contacts.editor.LabeledEditorView: void setDeleteButtonVisible(boolean)>
<gov.nist.javax.sip.header.Contact: void setParameter(java.lang.String,java.lang.String)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoneticFamilyName(java.lang.String)>
<com.android.contacts.ContactSaveService: android.content.Intent createGroupUpdateIntent(android.content.Context,long,java.lang.String,long[],long[],java.lang.Class,java.lang.String)>
<com.android.contacts.list.ContactListItemView: void setPhoneticName(char[],int)>
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
<com.android.providers.contacts.ContactsTransaction: void startTransactionForDb(android.database.sqlite.SQLiteDatabase,java.lang.String,android.database.sqlite.SQLiteTransactionListener)>
<gov.nist.javax.sip.header.Contact: void setPubGruuParam(java.lang.String)>
<com.android.contacts.activities.ContactEditorActivity$2: void onCustomEditContactActivityRequested(com.android.contacts.model.account.AccountWithDataSet,android.net.Uri,android.os.Bundle,boolean)>
<com.android.providers.contacts.TransactionContext: void rawContactInserted(long,long)>
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
<com.android.contacts.util.NameConverter: android.content.ContentValues displayNameToStructuredName(android.content.Context,java.lang.String,android.content.ContentValues)>
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: void onPostExecute(com.android.contacts.PhoneCallDetails[])>
<com.android.contacts.quickcontact.FloatingChildLayout: void setBackground(android.graphics.drawable.Drawable)>
<com.android.providers.contacts.aggregation.ContactAggregator: void updateStarred(long)>
<com.android.providers.contacts.DataRowHandlerForStructuredPostal: boolean update(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,android.content.ContentValues,android.database.Cursor,boolean)>
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>
<com.android.providers.contacts.aggregation.util.ContactMatcher: void updateScoreWithEmailMatch(long)>
<com.android.providers.contacts.aggregation.util.ContactMatcher: void matchName(long,int,java.lang.String,int,java.lang.String,int)>
<com.android.contacts.quickcontact.ActionMultiMap: void put(java.lang.String,com.android.contacts.quickcontact.Action,boolean)>
<com.android.providers.contacts.ContactsDatabaseHelper: void copyStringValue(android.content.ContentValues,java.lang.String,android.content.ContentValues,java.lang.String)>
<com.android.contacts.model.AccountTypeManagerImpl: void processBroadcastIntent(android.content.Intent)>
<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void addNameRow(android.database.MatrixCursor,com.android.exchange.provider.ExchangeDirectoryProvider$GalProjection,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.preference.ContactsPreferences: void setDisplayOrder(int)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setGroupRowId(long)>
<com.android.contacts.activities.PeopleActivity$TabPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
<com.android.contacts.activities.ContactEditorActivity$2: void onCustomCreateContactActivityRequested(com.android.contacts.model.account.AccountWithDataSet,android.os.Bundle)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void writeToParcel(android.os.Parcel,int)>
<com.android.contacts.widget.TransitionAnimationView: void setMaskVisibility(boolean)>
<com.android.contacts.ContactSaveService: android.content.Intent createSetSuperPrimaryIntent(android.content.Context,long)>
<com.android.contacts.detail.ContactDetailDisplayUtils: void setCompanyName(android.content.Context,com.android.contacts.model.Contact,android.widget.TextView)>
<com.android.providers.contacts.ContactsDatabaseHelper: void setLocale(com.android.providers.contacts.ContactsProvider2,java.util.Locale)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setSpeakerphoneListener(android.view.View$OnClickListener)>
<com.android.providers.contacts.aggregation.ContactAggregator: int markAllVisibleForAggregation(android.database.sqlite.SQLiteDatabase)>
<com.android.contacts.calllog.CallLogAdapter: void injectContactInfoForTest(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>
<com.android.contacts.ContactSaveService: android.content.Intent createSetRingtone(android.content.Context,android.net.Uri,java.lang.String)>
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,byte[])>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setIsBuffering()>
<com.android.contacts.ContactSaveService: android.content.Intent createClearPrimaryIntent(android.content.Context,long)>
<com.android.contacts.widget.FrameLayoutWithOverlay: void setAlphaLayerValue(float)>
<com.android.providers.contacts.aggregation.ContactAggregator$MatchCandidateList: void add(java.lang.String,int)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setDisplayName(java.lang.String)>
<com.android.providers.contacts.aggregation.ContactAggregator: long onRawContactInsert(com.android.providers.contacts.TransactionContext,android.database.sqlite.SQLiteDatabase,long)>
<android.provider.Contacts$Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.util.ExpirableCache: void put(java.lang.Object,java.lang.Object)>
<com.android.contacts.list.JoinContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.contacts.widget.AlphaTouchInterceptorOverlay: void setOverlayClickable(boolean)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setRateIncreaseButtonListener(android.view.View$OnClickListener)>
<com.android.contacts.group.GroupBrowseListFragment: void setAddAccountsVisibility(boolean)>
<com.android.contacts.model.RawContactModifier: void migratePostal(com.android.contacts.model.RawContactDelta,com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind)>
<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void addEmailAddress(android.database.MatrixCursor,com.android.exchange.provider.ExchangeDirectoryProvider$GalProjection,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String)>
<com.android.contacts.list.ContactListItemView: void setSnippet(java.lang.String)>
<com.android.contacts.editor.TextFieldsEditorView: void setEnabled(boolean)>
<com.android.providers.contacts.aggregation.ContactAggregator: void setContactId(long,long)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setSpeakerPhoneOn(boolean)>
<com.android.contacts.list.ContactEntryListFragment: void onCreate(android.os.Bundle)>
<com.android.providers.contacts.DataRowHandlerForGroupMembership: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void addPhoneRow(android.database.MatrixCursor,com.android.exchange.provider.ExchangeDirectoryProvider$GalProjection,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
<android.provider.Contacts$ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setFetchContentTimeout()>
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>
<com.android.contacts.list.ContactEntryListFragment: void loadDirectoryPartition(int,com.android.contacts.list.DirectoryPartition)>
<com.android.contacts.model.dataitem.StructuredNameDataItem: void setDisplayName(java.lang.String)>
<com.android.contacts.model.account.AccountType: com.android.contacts.model.dataitem.DataKind addKind(com.android.contacts.model.dataitem.DataKind)>
<com.android.contacts.datepicker.DatePicker$SavedState: void writeToParcel(android.os.Parcel,int)>
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.RawContactDelta$ValuesDelta insertChild(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.account.AccountType$EditType)>
<com.android.contacts.model.RawContactDeltaList: void writeToParcel(android.os.Parcel,int)>
<com.android.providers.contacts.ContactsDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.android.contacts.PhoneCallDetailsHelper: void setPhoneCallDetails(com.android.contacts.PhoneCallDetailsViews,com.android.contacts.PhoneCallDetails,boolean)>
<com.android.internal.telephony.gsm.UsimPhoneBookManager$PbrFile: void parseTag(com.android.internal.telephony.gsm.SimTlv,int)>
<com.android.contacts.editor.StructuredNameEditorView: void setValues(com.android.contacts.model.dataitem.DataKind,com.android.contacts.model.RawContactDelta$ValuesDelta,com.android.contacts.model.RawContactDelta,boolean,com.android.contacts.editor.ViewIdGenerator)>
<com.android.providers.contacts.aggregation.ContactAggregator: void updateDisplayNameForContact(android.database.sqlite.SQLiteDatabase,long)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,long)>
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void setShouldSync(boolean)>
<com.android.providers.contacts.ContactsDatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.android.contacts.editor.PhotoEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
<com.android.providers.contacts.DbModifierWithNotification: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.contacts.util.AccountFilterUtil: void startAccountFilterActivityForResult(android.app.Fragment,int,com.android.contacts.list.ContactListFilter)>
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void startPhotoActivity(android.content.Intent,int,java.lang.String)>
<com.android.contacts.editor.TextFieldsEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
<com.android.contacts.editor.PhotoEditorView: void setEnabled(boolean)>
<com.android.contacts.editor.PhoneticNameEditorView$PhoneticValuesDelta: void put(java.lang.String,java.lang.String)>
<com.android.contacts.model.RawContactModifier: com.android.contacts.model.RawContactDelta$ValuesDelta parseExtras(com.android.contacts.model.RawContactDelta,com.android.contacts.model.dataitem.DataKind,android.os.Bundle,java.lang.String,java.lang.String,java.lang.String)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,java.lang.String)>
<com.android.providers.contacts.VoicemailContentProvider: void checkAndAddSourcePackageIntoValues(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues)>
<com.android.contacts.list.PostalAddressListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void setPhoto(byte[])>
<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>
<com.android.contacts.editor.RawContactReadOnlyEditorView: void setState(com.android.contacts.model.RawContactDelta,com.android.contacts.model.account.AccountType,com.android.contacts.editor.ViewIdGenerator,boolean)>
<com.android.contacts.util.NameConverter: java.util.Map displayNameToStructuredName(android.content.Context,java.lang.String)>
<com.android.contacts.list.ContactTileView: void setHorizontalDividerVisibility(int)>
<com.android.contacts.datepicker.DatePicker: void setEnabled(boolean)>
<com.android.contacts.list.LegacyPostalAddressListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.contacts.quickcontact.FloatingChildLayout: void setBackgroundColorAlpha(int)>
<com.android.contacts.interactions.GroupCreationDialogFragment: void show(android.app.FragmentManager,java.lang.String,java.lang.String,java.lang.String,com.android.contacts.interactions.GroupCreationDialogFragment$OnGroupCreatedListener)>
<com.android.providers.contacts.DataRowHandlerForPhoto: long insert(android.database.sqlite.SQLiteDatabase,com.android.providers.contacts.TransactionContext,long,android.content.ContentValues)>
<com.android.contacts.editor.RawContactEditorView: void setEnabled(boolean)>
<com.android.contacts.editor.StructuredNameEditorView: void onFieldChanged(java.lang.String,java.lang.String)>
<com.android.providers.contacts.VoicemailContentTable: int update(com.android.providers.contacts.VoicemailContentProvider$UriData,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.contacts.model.dataitem.PhoneDataItem: void computeFormattedPhoneNumber(java.lang.String)>
<com.android.contacts.list.PhoneNumberPickerFragment: void restoreSavedState(android.os.Bundle)>
<com.android.contacts.model.RawContactDelta$ValuesDelta: void put(java.lang.String,int)>
<com.android.contacts.list.ContactsSectionIndexer: void setProfileHeader(java.lang.String)>
<com.android.contacts.calllog.CallLogAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor)>
<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>
<com.android.exchange.provider.ExchangeDirectoryProvider$GalContactRow: void put(java.lang.String,java.lang.Object)>
<com.android.contacts.detail.CarouselTab: void setLabel(java.lang.String)>
<com.android.contacts.detail.ContactDetailDisplayUtils: void setSocialSnippet(android.content.Context,com.android.contacts.model.Contact,android.widget.TextView,android.widget.ImageView)>
<com.android.contacts.ContactSaveService: void onHandleIntent(android.content.Intent)>
<com.android.contacts.model.RawContactDelta: void writeToParcel(android.os.Parcel,int)>
<android.provider.ContactsContract$QuickContact: android.content.Intent composeQuickContactsIntent(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>
<com.android.contacts.list.AccountFilterActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.android.contacts.list.ContactTileListFragment: void enableQuickContact(boolean)>
<com.android.contacts.detail.ActionsViewContainer: void setPosition(int)>
<com.android.contacts.editor.BaseRawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$TextViewWithMessagesController: void setTemporaryText(java.lang.String,long,java.util.concurrent.TimeUnit)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setRateDecreaseButtonListener(android.view.View$OnClickListener)>
<com.android.contacts.util.DialogManager: void showDialogInView(android.view.View,android.os.Bundle)>
<com.android.contacts.PhoneCallDetailsHelper: void setCurrentTimeForTest(long)>
<com.android.contacts.list.EmailAddressListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>
<com.android.contacts.editor.RawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>
<com.android.providers.contacts.ContactLocaleUtils: void setLocale(java.util.Locale)>
<com.android.contacts.voicemail.VoicemailPlaybackFragment$PlaybackViewImpl: void setIsFetchingContent()>
<com.android.providers.contacts.ContactsDatabaseHelper: void setProperty(java.lang.String,java.lang.String)>
<com.android.contacts.model.dataitem.DataItem: void setMimeType(java.lang.String)>
<com.android.contacts.ContactSaveService: android.content.Intent createSaveContactIntent(android.content.Context,com.android.contacts.model.RawContactDeltaList,java.lang.String,int,boolean,java.lang.Class,java.lang.String,android.os.Bundle)>