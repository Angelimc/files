<list>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void invokeHandler()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void invokeHandler()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void invokeHandler()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void invokeHandler()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void invokeHandler()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.Class: java.lang.reflect.Field[] getFields()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.String getResourceNameById(java.lang.Class,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.String getResourceNameById(java.lang.Class,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: android.app.Dialog showOkDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: android.app.Dialog showOkDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getTextureSize(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: android.os.Looper getLooper()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void onDestroy()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: android.os.Looper getLooper()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void onDestroy()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: android.os.Looper getLooper()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void onDestroy()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.util.Base64: byte[] decode(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.util.Base64: byte[] decode(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.util.Base64: byte[] decode(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getTextureSize(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String obfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String obfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String obfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.Class: java.lang.reflect.Field[] getFields()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getAltasBitmap(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getChopedBitmap(int,int,int,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getAltasBitmap(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getAltasBitmap(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getAltasBitmap(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.res.Resources: int[] getIntArray(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasResource: void &lt;init&gt;(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getTextureSize(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getTextureSize(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void initiateLicenseChecker()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void initiateLicenseChecker()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void initiateLicenseChecker()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.String getResourceNameById(java.lang.Class,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: java.lang.Integer getAltasIdFromSubId(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void invokeHandler(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void invokeHandler(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void invokeHandler(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void invokeHandler(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void invokeHandler(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getWidth(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getWidth(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getBitmapSize(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.res.Resources: int[] getIntArray(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasResource: void &lt;init&gt;(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getTextureSize(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.Class: java.lang.reflect.Field[] getFields()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getBitmap(android.content.Context,java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest$ToStringProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$5: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: com.camelgames.framework.graphics.altas.AltasResource getAltasResource(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: int[] getIntArray(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasResource: void &lt;init&gt;(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: android.content.res.Resources getResources()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: int[] getIntArray(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasResource: void &lt;init&gt;(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$6: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.Class: java.lang.reflect.Field[] getFields()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.String getResourceNameById(java.lang.Class,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.String getResourceNameById(java.lang.Class,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.FlightAsyncHttpRequest$ToScoreBoardInfoProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.FlightAsyncHttpRequest$ToScoreBoardInfoProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.FlightAsyncHttpRequest$ToScoreBoardInfoProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.FlightAsyncHttpRequest$ToScoreBoardInfoProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getWidth(android.view.View,android.widget.RelativeLayout$LayoutParams)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getWidth(android.view.View,android.widget.RelativeLayout$LayoutParams)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.FlightAsyncHttpRequest$ToScoreBoardInfoProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void storeScoreInContext()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void storeScoreInContext()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void storeScoreInContext()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void storeScoreInContext()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void storeScoreInContext()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void storeScoreInContext()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ObjectOutputStream: void writeObject(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.score.ScoreManager: void storeScoreInContext()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest$ToStringProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest$ToStringProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest$ToStringProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest$ToStringProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest$ToStringProcessor: boolean process(java.io.InputStream,android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void refresh(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void mainMenu()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$3: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void selectLevel()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;javax.crypto.Cipher: byte[] doFinal(byte[])&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String obfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;javax.crypto.Cipher: byte[] doFinal(byte[])&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String obfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setVolumeControlStream(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;javax.crypto.Cipher: byte[] doFinal(byte[])&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String obfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.surfaceview.GLSurfaceView: void init()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity$4: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void initiateLicenseChecker()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getBitmap(android.content.Context,java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.RenderQueue: void &lt;init&gt;()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void &lt;clinit&gt;()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: float getWidthHeightRate()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.String getResourceNameById(java.lang.Class,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.ExplodeUIUtility: void setupBackground(android.view.View,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: boolean isSDPresent()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: android.app.Dialog onCreateDialog(int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void remove(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getBitmapSize(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getHeight(android.view.View,android.widget.RelativeLayout$LayoutParams)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void add(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: float getWidthHeightRate()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void showScoreBoard()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getWidth(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: java.io.File createFile(java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Display: int getWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayWidth(float)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void add(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setSize(android.view.View,int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.altas.AltasTextureManager: java.lang.Integer getAltasIdFromSubId(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getWidth(android.view.View,android.widget.RelativeLayout$LayoutParams)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$2: void onClick(android.view.View)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.sounds.SoundManagerBase: void setMuteForBackgroundSounds(boolean)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setLeftTopForRLAbsolute(android.view.View,int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getBitmapSize(java.lang.Integer)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getMeasuredWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.EditText: android.text.Editable getText()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$8: void onClick(android.content.DialogInterface,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void showScoreBoard()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: android.app.Dialog showInputNameDialog()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void remove(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: android.graphics.Bitmap getChopedBitmap(int,int,int,int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.MainMenuActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setCenterForRL(android.view.View,float,float)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Field: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: android.app.Dialog showOkDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.camelgames.blowup.MainActivity$3: void onClick(android.content.DialogInterface,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager: void &lt;init&gt;()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setMainActivity(android.app.Activity)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setButtonSize(android.view.View,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: java.lang.String getVersionCode(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.PreferenceObfuscator: java.lang.String getString(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.surfaceview.GLSurfaceView: void init()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void checkAccess(com.android.vending.licensing.LicenseCheckerCallback)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker$ResultListener: void startTimeout()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Field[] getFields()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.String getResourceNameById(java.lang.Class,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.RenderQueue: void &lt;init&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String unobfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.LevelSelectorView: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Field[] getFields()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.IOUtility: java.lang.Integer getResourceIdByName(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Display: int getWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: float getWidthHeightRate()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.ui.ExplodeUIUtility: void setupBackground(android.view.View,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView,android.widget.ImageView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.HandlerThread: android.os.Looper getLooper()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void &lt;init&gt;(android.content.Context,com.android.vending.licensing.Policy,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: boolean isSDPresent()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String unobfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker$ResultListener$1: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;javax.crypto.Cipher: byte[] doFinal(byte[])&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.AESObfuscator: java.lang.String unobfuscate(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void checkAccess(com.android.vending.licensing.LicenseCheckerCallback)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()&gt;</method>
      <callerMethod>&lt;SmaliHook: void DumpStackIfWeShould()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void request(java.lang.String,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void checkAccess(com.android.vending.licensing.LicenseCheckerCallback)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void remove(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.graphics.textures.TextureUtility: com.camelgames.framework.math.Vector2 getBitmapSize(java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: android.app.Dialog showOkDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Enum: java.lang.String toString()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.ServerManagedPolicy: void &lt;init&gt;(android.content.Context,com.android.vending.licensing.Obfuscator)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getMeasuredHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getHeight(android.view.View,android.widget.RelativeLayout$LayoutParams)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void add(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: float getWidthHeightRate()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void showScoreBoard()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.ServerManagedPolicy: void setRetryUntil(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: java.io.File createFile(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void runChecks()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void checkAccess(com.android.vending.licensing.LicenseCheckerCallback)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void cleanupService()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.ServerManagedPolicy: java.util.Map decodeExtras(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Display: int getWidth()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayWidth(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.network.AsyncHttpRequest: void sendObject(java.lang.String,java.lang.Object,com.camelgames.framework.network.AsyncHttpRequest$InputStreamProcessor)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void add(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;SmaliHook: void DumpStackIfWeShould()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.utilities.SDUtility: void storeObject(java.io.File,java.io.Serializable,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.ServerManagedPolicy: void setMaxRetries(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Display: int getHeight()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: int getDisplayHeight(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: android.content.res.Resources getResources()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.sounds.SoundManagerBase: void setMuteForBackgroundSounds(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.EditText: android.text.Editable getText()&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity$8: void onClick(android.content.DialogInterface,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.explode.activities.ScoreActivity: void showScoreBoard()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: java.security.PublicKey generatePublicKey(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.ServerManagedPolicy: void setValidityTimestamp(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.LinkedList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager$ListenerBuffer: void remove(com.camelgames.framework.events.EventType,com.camelgames.framework.events.EventListener)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: void runChecks()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setCenterForRL(android.view.View,float,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Enum: java.lang.String toString()&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.ServerManagedPolicy: void setLastResponse(com.android.vending.licensing.Policy$LicenseResponse)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: java.security.PublicKey generatePublicKey(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.events.EventManager: void &lt;init&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.camelgames.framework.ui.UIUtility: void setMainActivity(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.android.vending.licensing.LicenseChecker: java.security.PublicKey generatePublicKey(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
</list>