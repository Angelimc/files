<list>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: int getSimState()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: int getSimState()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: int getSimState()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: int getSimState()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: int getSimState()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog show()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void playsound(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void playsound(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void playsound(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void playsound(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void playsound(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.MotionEvent: float getY()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.content.SharedPreferences getPreferences(int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.MotionEvent: float getY()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.SharedPreferences getPreferences(int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.SharedPreferences getPreferences(int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: java.lang.String getChannel(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSimOperator()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSimOperator()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSimOperator()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSimOperator()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSimOperator()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.OpenView: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void surfaceCreated(android.view.SurfaceHolder)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void playsound(int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.OpenView: void surfaceCreated(android.view.SurfaceHolder)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.MotionEvent: int getAction()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.u: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSavePassword(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.wb: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void a(cn.casee.adsdk.c,cn.casee.adsdk.c)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Method[] getMethods()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pb: java.lang.String a(java.lang.String,javax.crypto.spec.DESKeySpec)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptEnabled(boolean)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;init&gt;(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String e(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setSingleLine(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.FullActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable a(net.youmi.android.dp,int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String l(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: java.lang.String b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ResourceBundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.Object get(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bx: int a(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: java.lang.String getExtraInfo()&gt;</method>
      <callerMethod>&lt;net.youmi.android.br: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: java.lang.String getTypeName()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.ClassLoader getClassLoader()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.drawable.Drawable f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageSwitcher: void setImageURI(android.net.Uri)&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String p(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setNavDump(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getDataDirectory()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dm: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.Bitmap a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.ClassLoader getClassLoader()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: java.lang.Object e(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: int a(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URLConnection: java.io.InputStream getInputStream()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Runtime: java.lang.Runtime getRuntime()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Vector: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: java.lang.String b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.mc: void b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void surfaceCreated(android.view.SurfaceHolder)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.FileOutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: void a(java.io.InputStream,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;net.youmi.android.et: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setPadding(int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.FileOutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.ex: int a(org.apache.http.HttpResponse,org.apache.http.HttpEntity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setBackgroundColor(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;init&gt;(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: android.content.Intent a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.lang.String,cn.domob.android.ads.w$h,java.lang.String,cn.domob.android.ads.w$c,java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.j: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable b(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: java.lang.Object e(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setRequestedOrientation(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.FullActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: void setVersion(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.oc: android.database.sqlite.SQLiteDatabase a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity$9: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setSingleLine(boolean)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.util.Locale getDefault()&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String i()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.OutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.aj: void b(java.io.InputStream,java.io.OutputStream)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: android.content.Intent h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void __(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageSwitcher: void setImageURI(android.net.Uri)&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.lang.String,cn.domob.android.ads.w$h,java.lang.String,cn.domob.android.ads.w$c,java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: java.io.InputStream b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.adview.util.GifDecoder: android.graphics.Bitmap createImage()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.aw: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: java.lang.String a(java.io.File)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String a(byte[],java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.lang.String,cn.domob.android.ads.w$h,java.lang.String,cn.domob.android.ads.w$c,java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.adview.util.GifDecoder: android.graphics.Bitmap createImage()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: cn.casee.adsdk.at a(android.content.Context,cn.casee.adsdk.CaseeAdView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.c: void &lt;init&gt;(com.madhouse.android.ads.___,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.ImageView e(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.dm: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Array: int getLength(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.ec: void &lt;init&gt;(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void k()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.lang.String getCountry()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void &lt;init&gt;(android.content.Context,cn.casee.adsdk.at,cn.casee.adsdk.CaseeAdView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: cn.casee.adsdk.h a(android.content.Context,java.lang.StringBuilder)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap,cn.domob.android.ads.w$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ResourceBundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.ed: net.youmi.android.ee a(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.StatFs: int getBlockSize()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog show()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Method: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: java.lang.String b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.util.Locale getDefault()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog show()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void b(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: java.lang.String getSubtypeName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)&gt;</method>
      <callerMethod>&lt;net.youmi.android.dc: org.apache.http.params.HttpParams b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.adview.util.GifDecoder: android.graphics.Bitmap createImage()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.gifview.a: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: int b(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.util.Locale getDefault()&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void t()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.adview.util.GifDecoder: android.graphics.Bitmap createImage()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable b(net.youmi.android.dp,int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.dn b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.lang.String getLanguage()&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.os.Bundle getExtras()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: boolean a(android.content.Context,cn.casee.adsdk.h)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: boolean a(android.content.Context,cn.casee.adsdk.h)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setUseWideViewPort(boolean)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap,cn.domob.android.ads.w$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;net.youmi.android.bl: void a(android.app.Activity,android.webkit.WebView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.OpenView: void surfaceCreated(android.view.SurfaceHolder)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.drawable.Drawable f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(java.io.File)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: java.lang.String a(java.io.File)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void __(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.ex: boolean f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: byte[] digest()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.p: byte[] a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.f: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.wb: void n()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: int getVersion()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.oc: android.database.sqlite.SQLiteDatabase a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setBackgroundColor(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity$8: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,double,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;init&gt;(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getDataString()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobAdView: void &lt;init&gt;(android.content.Context,java.lang.String,java.lang.String,android.util.AttributeSet)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.StatFs: int getAvailableBlocks()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.p: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dp: net.youmi.android.dp a(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;net.youmi.android.br: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.z: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void initsound(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.lang.String,cn.domob.android.ads.w$h,java.lang.String,cn.domob.android.ads.w$c,java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bo: void a(java.lang.String,java.io.ByteArrayOutputStream)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setCacheMode(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String a(byte[],java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.do a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context,android.webkit.WebView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.Bitmap a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getId()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.em: int h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSupportZoom(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.mc: void e(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: java.net.Proxy b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$Client: com.adview.ad.RetAdBean readXML(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.location.Criteria: void setAccuracy(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.f: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.ex: int a(org.apache.http.HttpResponse,org.apache.http.HttpEntity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void initsound(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: boolean h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setAlpha(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.aaaa: void _(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Vector: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Looper: android.os.Looper getMainLooper()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.f: void &lt;init&gt;(cn.domob.android.ads.DomobAdView,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;net.youmi.android.et: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setPluginsEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.FileOutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.z: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: java.lang.String a(android.net.Uri)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.location.Location: double getLongitude()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: boolean a(net.youmi.android.do)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptEnabled(boolean)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.graphics.drawable.Drawable getBackground()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: com.wooboo.download.d h(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSupportZoom(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: android.app.Notification a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.lang.String getCountry()&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable c(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dm: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.dn b(net.youmi.android.do)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$2: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void a(int,android.graphics.drawable.Drawable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: java.util.List c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: java.io.InputStream b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setLightTouchEnabled(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setAllowFileAccess(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.lang.String,cn.domob.android.ads.w$h,java.lang.String,cn.domob.android.ads.w$c,java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.PrintStream: void println(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$Client: com.adview.ad.RetAdBean readXML(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cc: boolean a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.v: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dj: void &lt;init&gt;(java.lang.String,long,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dp: net.youmi.android.dp a(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.o: void b(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.graphics.drawable.Drawable getBackground()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setAllowFileAccess(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.fd: boolean b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;javax.crypto.Cipher: byte[] doFinal(byte[])&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pb: byte[] a(byte[],javax.crypto.spec.DESKeySpec)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.os.Bundle getExtras()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setScrollBarStyle(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.location.Criteria: void setAccuracy(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: android.graphics.Bitmap _(android.content.Context,int,int,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.RandomAccessFile: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.NotificationManager: void notify(int,android.app.Notification)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.j: void a(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.j: void a(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: long a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bu: java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context,int,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)&gt;</method>
      <callerMethod>&lt;I.I: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.lang.String,cn.domob.android.ads.w$h,java.lang.String,cn.domob.android.ads.w$c,java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context,cn.casee.adsdk.CaseeAdView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void initPanal(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.f: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: long a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;net.youmi.android.ak: java.lang.String b(java.lang.String,java.lang.String,byte[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context,int,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Dialog: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: int getType()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String p(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String p(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: android.content.Intent a(android.content.Context,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Method: java.lang.Class[] getParameterTypes()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.ec: void &lt;init&gt;(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;net.youmi.android.bb: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap,cn.domob.android.ads.w$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Hashtable: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity$2: void onClick(android.content.DialogInterface,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String c(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.lb: void a(java.lang.Object,java.lang.String,java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getY()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void c(cn.casee.adsdk.c,cn.casee.adsdk.c)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setCacheMode(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;init&gt;(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void r()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$Client: com.adview.ad.RetAdBean readXML(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.bbb: void &lt;init&gt;(com.madhouse.android.ads.___,android.content.Context,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int v(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.mc: void a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent parseUri(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cc: boolean a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,double,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.ec: java.lang.String a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.k: android.graphics.drawable.Drawable a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putString(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setSingleLine(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.dn b(net.youmi.android.do)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.t: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.h: void &lt;init&gt;(android.content.Context,com.wooboo.adlib_android.nc,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ProgressBar: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context,int,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSupportZoom(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setPressed(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fb: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setPluginsEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String f(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: android.content.Intent a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.es: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;net.youmi.android.cb: boolean a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable c(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.DataOutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: java.io.InputStream b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiInfo: java.lang.String getMacAddress()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dm: java.lang.String c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URLConnection: java.io.InputStream getInputStream()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: java.io.InputStream b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.StatFs: int getBlockSize()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.PrintStream: void println(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$Client: com.adview.ad.RetAdBean readXML(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void notifyConncetFail()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.u: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.StatFs: int getAvailableBlocks()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.drawable.Drawable f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Method[] getMethods()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.t: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: int getType()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.os.Bundle getExtras()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.FileOutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.fd: boolean b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable a(net.youmi.android.dp)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void notifyReceiveAdOk()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.c: void &lt;init&gt;(com.madhouse.android.ads.___,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: android.graphics.Bitmap _(android.content.Context,int,int,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: android.view.View a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.o: void &lt;init&gt;(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,cn.domob.android.ads.z)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.k: android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: android.graphics.Bitmap _(android.content.Context,int,int,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: java.lang.String b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getLine1Number()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String e(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: int getType()&gt;</method>
      <callerMethod>&lt;net.youmi.android.br: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;javax.crypto.Cipher: byte[] doFinal(byte[])&gt;</method>
      <callerMethod>&lt;net.youmi.android.ak: byte[] a(byte[],java.lang.String,byte[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: java.lang.String getUrl()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.w: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.o: void &lt;init&gt;(android.content.Context,android.net.Uri,cn.domob.android.ads.i,cn.domob.android.ads.o$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: boolean h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a$1: void a(long,long,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: boolean n(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.Package getPackage()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: java.lang.Object e(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.ai: java.lang.String a(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: java.lang.String getUrl()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: java.lang.String a(java.lang.Number)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String a(byte[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.NotificationManager: void notify(int,android.app.Notification)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void g()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.ex: int a(org.apache.http.HttpEntity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Dialog: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: boolean getBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: java.io.InputStream b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSupportMultipleWindows(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.f: void &lt;init&gt;(java.lang.String,java.lang.String,long,cn.domob.android.a.d,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.graphics.drawable.Drawable getBackground()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.wb: void o()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: cn.casee.adsdk.at a(android.content.Context,cn.casee.adsdk.CaseeAdView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void c(cn.casee.adsdk.c,cn.casee.adsdk.c,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setAllowFileAccess(boolean)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;net.youmi.android.dp: void &lt;init&gt;(android.util.DisplayMetrics,android.util.DisplayMetrics)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.aw: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: java.lang.String getSubtypeName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String p(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void notifyRefreshGif()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setClickable(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.e: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pb: javax.crypto.spec.DESKeySpec a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: long a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)&gt;</method>
      <callerMethod>&lt;net.youmi.android.es: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.br: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bl: void a(android.app.Activity,android.webkit.WebView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: android.content.Intent a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context,int,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setCacheMode(int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog show()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;net.youmi.android.es: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: java.lang.String b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.Bitmap a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSupportZoom(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.z: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView$a: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Method[] getMethods()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setBuiltInZoomControls(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.OutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.fb: int a(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: java.lang.String getUrl()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: java.lang.String __()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.OutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bp: boolean a(java.io.File,java.io.File)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Method: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: int getInt(java.lang.Object)&gt;</method>
      <callerMethod>&lt;net.youmi.android.by: int a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.graphics.drawable.Drawable getBackground()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bx: android.content.pm.PackageInfo a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.OpenView: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.p: byte[] a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSupportZoom(boolean)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: java.net.Proxy b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: int b(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.es: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: java.lang.String a(java.lang.Number)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Method: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.do a(java.lang.String,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.g: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.cc: byte[] a(android.graphics.Bitmap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setProgressBarIndeterminate(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap,cn.domob.android.ads.w$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.do a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String l(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.z: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.FileOutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: boolean a(android.content.Context,cn.casee.adsdk.h)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.g: void b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a$1: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void initsound(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: android.graphics.Bitmap _(android.content.Context,int,int,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String e(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: byte[] digest(byte[])&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: java.lang.Object e(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$2: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ArrayList: java.lang.Object get(int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bl: java.lang.String a(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.content.Context getContext()&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$2: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Throwable: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.o: void &lt;init&gt;(java.lang.Throwable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.gifview.c: void p()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.es: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.p: cn.domob.android.ads.p$a a(java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.p: cn.domob.android.ads.p$a a(java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: cn.casee.adsdk.h b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setPadding(int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.lb: java.lang.reflect.Field a(java.lang.Class,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.z: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.adview.util.GifDecoder: android.graphics.Bitmap createImage()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a$2: void a(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void a(cn.casee.adsdk.c,cn.casee.adsdk.c)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.gifview.a: void a(boolean,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$2: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: int getInt(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String a(byte[],java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable b(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.mc: void b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.lang.String getCountry()&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.Bitmap a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context,int,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.System: java.util.Properties getProperties()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.util.Locale getDefault()&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.gifview.a$a: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity$9: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void r()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: java.lang.Object getTag()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.r: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.f: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.o: void a(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void c(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: java.util.HashMap h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: int getModifiers()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.lb: void a(java.lang.reflect.Field)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ProgressBar: void setProgress(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Dialog: android.app.Activity getOwnerActivity()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable c(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSavePassword(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Field: java.lang.Class getDeclaringClass()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.lb: void a(java.lang.reflect.Field)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String k(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.aj: byte[] a(byte[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.NotificationManager: void notify(int,android.app.Notification)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: void b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.ap: java.lang.String a(android.content.Context,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setEnabled(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.e: void a(net.youmi.android.cn)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void t()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: java.lang.String getSysId(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void notifyReceiveAdError()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Properties: java.lang.String getProperty(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.aw: java.lang.String a(java.util.Properties,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView$a: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: cn.casee.adsdk.h b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.net.Uri getData()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onActivityResult(int,int,android.content.Intent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: boolean a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.dn b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;init&gt;(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.lang.String getLanguage()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: byte[] o(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onKeyDown(int,android.view.KeyEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cc: boolean a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageSwitcher: void setImageURI(android.net.Uri)&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.Bitmap a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.adview.util.GifDecoder: android.graphics.Bitmap createImage()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getLine1Number()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String f(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.p: byte[] a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cc: boolean a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$Client: void clientBitMap(com.adview.ad.RetAdBean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.WindowManager getWindowManager()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: int c(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;net.youmi.android.ar: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Runtime: java.lang.Runtime getRuntime()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Package: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: java.lang.Object e(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String a(byte[],java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.FileOutputStream: void write(byte[],int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bl: void a(android.app.Activity,android.webkit.WebView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.System: java.util.Properties getProperties()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.NotificationManager: void notify(int,android.app.Notification)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void c(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.graphics.drawable.Drawable getBackground()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap,cn.domob.android.ads.w$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.Bitmap a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String f(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ProgressBar: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.bbb: void &lt;init&gt;(com.madhouse.android.ads.___,android.content.Context,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String d(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Method: int getModifiers()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.u: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setPadding(int,int,int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String m(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a$1: void d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Field getField(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.dp: void &lt;init&gt;(android.util.DisplayMetrics,android.util.DisplayMetrics)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: float u(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.f: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: boolean startsWith(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap,cn.domob.android.ads.w$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void a(cn.casee.adsdk.c,cn.casee.adsdk.c,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: com.wooboo.download.d b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.dm: java.lang.String b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: com.wooboo.download.d h(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: java.util.HashMap g()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void initPanal(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: android.text.TextPaint getPaint()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.bbbb: void &lt;init&gt;(com.madhouse.android.ads.bbb,android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.location.Location: double getLatitude()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;net.youmi.android.cb: boolean a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: boolean i()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: android.graphics.drawable.Drawable a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: java.util.HashMap h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setPluginsEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.p: cn.domob.android.ads.p$a a(java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: java.io.InputStream b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;javax.crypto.Cipher: byte[] doFinal(byte[])&gt;</method>
      <callerMethod>&lt;net.youmi.android.ak: byte[] b(byte[],java.lang.String,byte[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cc: boolean a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog show()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void g()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: cn.casee.adsdk.h b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: android.database.Cursor c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setSingleLine(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSaveFormData(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable a(net.youmi.android.dp,int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;com.wooboo.download.h: java.lang.String b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.kb: boolean a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.m: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setSupportZoom(boolean)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void initAd(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: java.lang.String getUserAgentString()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String e(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.mc: void e(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.FullActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String k(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.graphics.drawable.Drawable getBackground()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.a: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setBuiltInZoomControls(boolean)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: boolean b(net.youmi.android.dn)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String d(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getX()&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: byte[] digest(byte[])&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: java.lang.Object getTag()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.s: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setCacheMode(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Hashtable: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setPluginsEnabled(boolean)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;init&gt;(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.fc: void b(java.lang.Object)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void initPanal(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendMessage(android.os.Message)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.md: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.l: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cc: boolean a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageSwitcher: void setImageURI(android.net.Uri)&gt;</method>
      <callerMethod>&lt;net.youmi.android.ep: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void b(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.util.Locale getDefault()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setEnabled(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.e: void a(net.youmi.android.cn)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlertDialog$Builder: android.app.AlertDialog show()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.o: void i()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: int getModifiers()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.lb: void a(java.lang.reflect.Field)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String a(java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.Uri: java.lang.String getQueryParameter(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.o: java.lang.String a(android.net.Uri,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.c: void &lt;init&gt;(com.madhouse.android.ads.___,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dp: net.youmi.android.dp a(android.app.Activity)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: cn.casee.adsdk.h b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.lang.String getExternalStorageState()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void _(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobAdView: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: android.content.Intent h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable a(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: int getAction()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.___: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void l()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setAlpha(int)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.aaaa: void _(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.f: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Exception: java.lang.String getMessage()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.sc: java.lang.String d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int v(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.mc: void a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;net.youmi.android.ak: java.lang.String a(java.lang.String,java.lang.String,byte[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.util.HashMap,cn.domob.android.ads.w$a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b$a: void &lt;init&gt;(cn.casee.adsdk.b,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String a(byte[],java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.ActivityManager: java.util.List getRunningTasks(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.d: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: android.database.Cursor A(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Dialog: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b$a: void &lt;init&gt;(cn.casee.adsdk.b,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: java.util.HashMap g()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: android.content.Intent h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setBuiltInZoomControls(boolean)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: cn.casee.adsdk.at a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: java.lang.String getTypeName()&gt;</method>
      <callerMethod>&lt;com.adview.AdViewLayout: void getAppInfo(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: boolean e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: android.graphics.Bitmap _(android.content.Context,int,int,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: void a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setJavaScriptEnabled(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.at: android.graphics.Bitmap a(float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable a(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.dm: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.gifview.c: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.wooboo.download.f: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.o: boolean h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: void setEnabled(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.e: void a(net.youmi.android.cn)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getNetworkOperator()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String g(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dm: java.lang.String c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.k: boolean a(android.graphics.Bitmap,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.e: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.io.File getAbsoluteFile()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: android.widget.RelativeLayout a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable b(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.oc: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Field getField(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;net.youmi.android.ex: boolean f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: android.graphics.drawable.Drawable a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessageDelayed(int,long)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ak: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.l: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,com.wooboo.download.d)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.MotionEvent: float getY()&gt;</method>
      <callerMethod>&lt;qukean.redhood.RedHood: boolean onTouch(android.view.View,android.view.MotionEvent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.u: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void a(android.content.Context,cn.casee.adsdk.CaseeAdView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.w: void a(java.lang.String,cn.domob.android.ads.w$h,java.lang.String,cn.domob.android.ads.w$c,java.util.HashMap)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)&gt;</method>
      <callerMethod>&lt;net.youmi.android.br: org.apache.http.params.HttpParams c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: android.content.res.AssetManager getAssets()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView: void initPanal(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: byte[] digest()&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String a(byte[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.g: void b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: android.content.Intent h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ResourceBundle: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.eo: void f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;net.youmi.android.br: boolean b(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.db: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void e(cn.casee.adsdk.c,cn.casee.adsdk.c)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.ccccc: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable a(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;com.adview.ad.KyAdView$Client: byte[] fileConnect(java.io.InputStream)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.n: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.aaaa: void &lt;init&gt;(com.madhouse.android.ads.$$$,android.content.Context,int,int,float,int,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;org.json.JSONObject: java.lang.String getString(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: cn.casee.adsdk.h b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.t: void onClick(android.view.View)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Locale: java.lang.String getLanguage()&gt;</method>
      <callerMethod>&lt;net.youmi.android.af: java.lang.String i()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: java.lang.String getTypeName()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.g: java.lang.String d(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ad: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: byte[] digest()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.A: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.n: java.lang.String m(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.AdActivity: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,int,double,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable c(net.youmi.android.dp,int[],int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.pc: void a(long,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebSettings: void setUseWideViewPort(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.cj: void j()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.an: net.youmi.android.cp a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: android.database.Cursor c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getNetworkOperator()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String f(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()&gt;</method>
      <callerMethod>&lt;net.youmi.android.dz: android.graphics.drawable.Drawable b(net.youmi.android.dp,int[],int[])&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextSize(float)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(com.wooboo.adlib_android.hb,android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTextColor(int)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.Window: void setFlags(int,int)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.FullActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.SurfaceView: android.view.SurfaceHolder getHolder()&gt;</method>
      <callerMethod>&lt;qukean.redhood.Gameview: void &lt;init&gt;(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: boolean d()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;net.youmi.android.bk: net.youmi.android.dn b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Field getField(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.by: int a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.os.Bundle getExtras()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity: void e()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setProgressBarIndeterminate(boolean)&gt;</method>
      <callerMethod>&lt;net.youmi.android.AdActivity: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.c: void a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getPath()&gt;</method>
      <callerMethod>&lt;net.youmi.android.bl: void a(android.app.Activity,android.webkit.WebView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(android.content.Context,double,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.File: java.lang.String getAbsolutePath()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.h: boolean c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.b: void b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.ComponentName: java.lang.String getPackageName()&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.d: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.AssetManager: java.io.InputStream open(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.lang.String c(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: android.graphics.Bitmap _(android.content.Context,int,int,float)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: android.webkit.WebSettings getSettings()&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.C: void &lt;init&gt;(android.content.Context,java.lang.String,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: cn.casee.adsdk.at a(android.content.Context,cn.casee.adsdk.CaseeAdView)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.gifview.c: void q()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: byte[] digest()&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.e: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.ao: java.net.HttpURLConnection a(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(android.view.View)&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.FullActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.m: void &lt;init&gt;(com.wooboo.adlib_android.AdActivity,android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.CaseeAdView: void t()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)&gt;</method>
      <callerMethod>&lt;com.madhouse.android.ads.fffff: java.lang.String ___(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Handler: boolean sendEmptyMessage(int)&gt;</method>
      <callerMethod>&lt;cn.domob.android.ads.DomobActivity$9: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.domob.android.a.a: android.content.Intent h()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.webkit.WebView: void setScrollBarStyle(int)&gt;</method>
      <callerMethod>&lt;com.vpon.adon.android.WebInApp: void a()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Environment: java.io.File getExternalStorageDirectory()&gt;</method>
      <callerMethod>&lt;com.wooboo.adlib_android.n: void a(java.lang.String,android.content.Context,double)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)&gt;</method>
      <callerMethod>&lt;net.youmi.android.al: java.lang.String b(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;cn.casee.adsdk.p: java.io.InputStream b(android.content.Context,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
</list>