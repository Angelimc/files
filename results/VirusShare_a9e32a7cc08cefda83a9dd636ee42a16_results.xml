<list>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: long getLong(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Matrix: void setScale(float,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Matrix: void setScale(float,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Matrix: void setScale(float,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink class="st.cs.uni.saarland.de.IntentInfo">
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startInfoActivity(int)&gt;</callerMethod>
      <className>com.elbirras.wificharger.TopicActivity</className>
      <extras/>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink class="st.cs.uni.saarland.de.IntentInfo">
      <method>&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startInfoActivity(int)&gt;</callerMethod>
      <className>com.elbirras.wificharger.TopicActivity</className>
      <extras/>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LedTextView: void init(android.content.Context)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.TextView: void setTypeface(android.graphics.Typeface)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LedTextView: void init(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.ContextThemeWrapper: android.content.res.Resources getResources()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getHeight()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Paint: void setStyle(android.graphics.Paint$Style)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Matrix: void setScale(float,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Matrix: void setScale(float,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Matrix: void setScale(float,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Matrix: void setScale(float,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.content.Intent getIntent()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: java.lang.Object getSystemService(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.widget.ImageView: void setVisibility(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void resetControls()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putBoolean(java.lang.String,boolean)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: void putLong(java.lang.String,long)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.os.Bundle: void putFloat(java.lang.String,float)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: android.os.Parcelable onSaveInstanceState()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void onCreate(android.os.Bundle)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.Activity: void setContentView(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onDraw(android.graphics.Canvas)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void drawLogo(android.graphics.Canvas)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.res.Resources: java.lang.String getString(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startScan()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.net.wifi.WifiManager: int getWifiState()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View$MeasureSpec: int getSize(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void drawLogo(android.graphics.Canvas)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: android.content.Context getContext()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View: android.content.Context getContext()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: float getFloat(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View$MeasureSpec: int getMode(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View$MeasureSpec: int getMode(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.view.View$MeasureSpec: int getSize(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void &lt;clinit&gt;()&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.os.Bundle: long getLong(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onRestoreInstanceState(android.os.Parcelable)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>&lt;android.app.Activity: android.view.Window getWindow()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </source>
    <sink>
      <method>NO_SENSITIVE_SINK</method>
      <callerMethod>NO_SENSITIVE_SINK</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onDraw(android.graphics.Canvas)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()&gt;</method>
      <callerMethod>&lt;com.parand.a.e: java.lang.Integer a(com.parand.a.c)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: void d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getHeight()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.e: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: void d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: com.parand.b.d.a f()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.Urelo: void onReceive(android.content.Context,android.content.Intent)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: java.io.Writer append(char)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: void e(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])&gt;</method>
      <callerMethod>&lt;com.parand.balesen.VoateService: void a(java.lang.String,boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onSizeChanged(int,int,int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int w(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void drawBackground(android.graphics.Canvas)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: void k()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: com.parand.b.d.a a(int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void drawLogo(android.graphics.Canvas)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()&gt;</method>
      <callerMethod>&lt;com.parand.a.e: void a(java.lang.String,java.lang.String,java.lang.Integer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: android.net.NetworkInfo$State getState()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.content.Context getContext()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: void setRequestMethod(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.b: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View$MeasureSpec: int getMode(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.ByteArrayOutputStream: byte[] toByteArray()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.VoateService: java.lang.String c()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()&gt;</method>
      <callerMethod>&lt;com.parand.a.e: void d(com.parand.a.c)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View$MeasureSpec: int getSize(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.SmsManager: android.telephony.SmsManager getDefault()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.e: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.TopicActivity: void onCreate(android.os.Bundle)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])&gt;</method>
      <callerMethod>&lt;com.parand.balesen.VoateService: boolean d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.VoateService: void a(long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.ComponentName: java.lang.String getClassName()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: boolean a(android.content.Context,java.util.List)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void &lt;clinit&gt;()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getLine1Number()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.MainActivity: void startInfoActivity(int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])&gt;</method>
      <callerMethod>&lt;com.parand.a.e: java.lang.Integer a(com.parand.a.c)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: byte[] getBytes()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.VoateService: void c(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getLine1Number()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.e: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.SmsManager: android.telephony.SmsManager getDefault()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.e: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.ThreadLocal: void set(java.lang.Object)&gt;</method>
      <callerMethod>&lt;com.parand.b.j: com.parand.b.ad a(com.parand.b.c.a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void drawLogo(android.graphics.Canvas)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.e: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.HttpURLConnection: int getResponseCode()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.b: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View$MeasureSpec: int getSize(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.ThreadLocal: java.lang.Object get()&gt;</method>
      <callerMethod>&lt;com.parand.b.j: com.parand.b.ad a(com.parand.b.c.a)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.VoateService: boolean b()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.e: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.net.URL: java.net.URLConnection openConnection()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(java.lang.String,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.Class: java.lang.String getName()&gt;</method>
      <callerMethod>&lt;com.parand.b.b.b: java.lang.Class e(java.lang.reflect.Type)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: int getWidth()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void regenerateBackground()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.String: java.lang.String substring(int,int)&gt;</method>
      <callerMethod>&lt;com.parand.a.d: com.parand.a.c a(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View: android.content.Context getContext()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.view.View$MeasureSpec: int getMode(int)&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void onMeasure(int,int)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: com.parand.b.d.a a(int,int,java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: void k()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.ActivityManager: java.util.List getRunningServices(int)&gt;</method>
      <callerMethod>&lt;com.parand.a.g: boolean a(android.content.Context,java.util.List)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: void d(java.lang.String)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.d.a: com.parand.b.d.a a(boolean)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.io.Writer: void write(java.lang.String)&gt;</method>
      <callerMethod>&lt;com.parand.b.j: com.parand.b.d.a a(java.io.Writer)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: int getNetworkType()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.graphics.Bitmap: int getHeight()&gt;</method>
      <callerMethod>&lt;com.elbirras.wificharger.LevelDisplay: void initDrawingTools()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)&gt;</method>
      <callerMethod>&lt;com.parand.b.b.b: java.lang.Class e(java.lang.reflect.Type)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.net.NetworkInfo: android.net.NetworkInfo$State getState()&gt;</method>
      <callerMethod>&lt;com.parand.a.g: java.lang.String a(android.content.Context)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.e: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;</method>
      <callerMethod>&lt;com.parand.balesen.VoateService: void a(long)&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
  <st.cs.uni.saarland.de.FlowdroidResults>
    <source>
      <method>NO_SENSITIVE_SOURCE</method>
      <callerMethod>NO_SENSITIVE_SOURCE</callerMethod>
    </source>
    <sink>
      <method>&lt;android.telephony.TelephonyManager: java.lang.String getSubscriberId()&gt;</method>
      <callerMethod>&lt;com.parand.balesen.g: void run()&gt;</callerMethod>
    </sink>
    <path/>
  </st.cs.uni.saarland.de.FlowdroidResults>
</list>